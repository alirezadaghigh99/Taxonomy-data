output file:
processed_pfrl_apply_categorical_projection258.json
function:
_apply_categorical_projection
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-2-7] FAILED', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-5-7]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-5-7]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-2-7]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-2-1]', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-2-1] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-2-7] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-2-7] FAILED', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-5-1]', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-5-7] FAILED', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-5-7]', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-2-7] FAILED', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-2-1]', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-2-7] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-5-1] FAILED', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-5-1]', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-2-1] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-5-1] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-5-7] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-2-1] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-5-1] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-5-7] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-5-7] FAILED', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-2-1]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-5-7]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-5-1]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-2-1]', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-5-1] FAILED', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-5-7]', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-2-7] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-2-1] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-2-1] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-5-7] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-5-7] FAILED', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-2-7]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-2-7]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-5-1]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-2-7]', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-2-7] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-5-1] FAILED', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-2-7]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-2-1]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-2-1]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-2-1]', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-5-1] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-2-1] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-2-1] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-2-7] FAILED', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-2-1]', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-5-1] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-5-1] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-5-7] FAILED', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-5-1]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-5-1]', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-5-7] FAILED', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-5-7]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-5-7]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-5-7]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-2-7]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-5-1]', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-5-7] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-2-7] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-2-7] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-5-1] FAILED', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-5-7]', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-2-1] FAILED', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-5-1]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-5-1]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-5-7]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-5-1]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-2-7]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-2-7]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-2-1]', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-5-1] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-2-1] FAILED', '../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-5-7] FAILED', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-2-7]', 'FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-2-7]'}

All Test Cases On Generated code:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/pfrl/pfrl/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/pfrl/pfrl
configfile: pytest.ini
collecting ... collected 40 items

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-2-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-2-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-5-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-5-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-2-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-2-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-5-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-5-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-2-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-5-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-5-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-2-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-2-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-5-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-5-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-2-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-2-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-5-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-5-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-2-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-2-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-5-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-5-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-2-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-2-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-5-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-5-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-2-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-2-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-5-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-5-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-2-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-2-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-5-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-5-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-2-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-2-7] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-5-1] FAILED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-5-7] FAILED

=================================== FAILURES ===================================
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range0-2-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d408fb90>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57d3f7c040>, array([0.], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range0-2-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fa5b10>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f12700>, array([0.77873576, 0.99999994, 0.48094642, 0.        , 0.        ,
       0.25147226, 0.        ], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 6 / 7 (85.7%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.778736, 1.      , 0.480946, 0.      , 0.      , 0.251472,
E                  0.      ], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range0-5-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3facc90>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f12a20>, array([0.], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range0-5-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3face10>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f131a0>, array([0.        , 0.44987407, 0.08136249, 0.19051899, 0.        ,
       0.29495662, 0.457525  ], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 7 / 7 (100%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.      , 0.449874, 0.081362, 0.190519, 0.      , 0.294957,
E                  0.457525], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range1-2-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3facf90>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b586ed67f60>, array([0.88213044], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 0.11786956
E           Max relative difference among violations: 0.11786956
E            ACTUAL: array([0.88213], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range1-2-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fad150>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f13f60>, array([0.9646942 , 0.6592771 , 0.        , 0.6373926 , 1.        ,
       0.93836915, 1.        ], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 5 / 7 (71.4%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.964694, 0.659277, 0.      , 0.637393, 1.      , 0.938369,
E                  1.      ], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range1-5-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fad410>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f137e0>, array([0.33808777], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 0.6619122
E           Max relative difference among violations: 0.6619122
E            ACTUAL: array([0.338088], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range1-5-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fad6d0>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f12520>, array([0.32336923, 0.6989935 , 0.13386911, 0.24772674, 0.9353006 ,
       0.99560696, 0.3538359 ], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 7 / 7 (100%)
E           Max absolute difference among violations: 0.8661309
E           Max relative difference among violations: 0.8661309
E            ACTUAL: array([0.323369, 0.698994, 0.133869, 0.247727, 0.935301, 0.995607,
E                  0.353836], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range2-2-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fadc10>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f34180>, array([0.52186275, 1.        , 1.        , 0.8565133 , 0.55100906,
       0.18410026, 1.        ], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 4 / 7 (57.1%)
E           Max absolute difference among violations: 0.8158997
E           Max relative difference among violations: 0.8158997
E            ACTUAL: array([0.521863, 1.      , 1.      , 0.856513, 0.551009, 0.1841  ,
E                  1.      ], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range2-5-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3faded0>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f34220>, array([0.9868328], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 0.0131672
E           Max relative difference among violations: 0.0131672
E            ACTUAL: array([0.986833], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range2-5-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fae190>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f34c20>, array([0.99999994, 0.8711885 , 0.93989336, 1.        , 0.7402515 ,
       1.        , 0.7681095 ], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 4 / 7 (57.1%)
E           Max absolute difference among violations: 0.25974852
E           Max relative difference among violations: 0.25974852
E            ACTUAL: array([1.      , 0.871189, 0.939893, 1.      , 0.740251, 1.      ,
E                  0.76811 ], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range3-2-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fae450>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f35120>, array([0.9888123], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 0.01118767
E           Max relative difference among violations: 0.01118767
E            ACTUAL: array([0.988812], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range3-2-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fae750>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f34860>, array([0.        , 0.8259635 , 1.        , 0.6836647 , 0.5593882 ,
       0.06170779, 0.        ], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 6 / 7 (85.7%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.      , 0.825963, 1.      , 0.683665, 0.559388, 0.061708,
E                  0.      ], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range3-5-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3faea90>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f35260>, array([0.], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range3-5-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3faedd0>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f356c0>, array([0.19139364, 0.34813374, 0.72275066, 0.5682288 , 0.28572863,
       0.57753426, 0.11839426], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 7 / 7 (100%)
E           Max absolute difference among violations: 0.88160574
E           Max relative difference among violations: 0.88160574
E            ACTUAL: array([0.191394, 0.348134, 0.722751, 0.568229, 0.285729, 0.577534,
E                  0.118394], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range4-2-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3faf110>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f360c0>, array([0.], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range4-2-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3faf450>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f36a20>, array([0.        , 0.        , 0.5524391 , 0.        , 0.48337832,
       0.33736143, 0.        ], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 7 / 7 (100%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.      , 0.      , 0.552439, 0.      , 0.483378, 0.337361,
E                  0.      ], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range4-5-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3faf790>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f367a0>, array([0.25843397], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 0.74156606
E           Max relative difference among violations: 0.74156606
E            ACTUAL: array([0.258434], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_cpu[v_range4-5-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fafad0>

    def test_cpu(self):
>       self._test(device=torch.device("cpu"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57d3fcca40>, array([0.33417696, 0.13480492, 0.22120509, 0.04741218, 0.03897016,
       0.22054051, 0.23372951], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 7 / 7 (100%)
E           Max absolute difference among violations: 0.9610298
E           Max relative difference among violations: 0.9610298
E            ACTUAL: array([0.334177, 0.134805, 0.221205, 0.047412, 0.03897 , 0.220541,
E                  0.23373 ], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range0-2-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fb9190>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f12840>, array([0.], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range0-2-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fb9710>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f13ce0>, array([0.21976328, 0.        , 0.        , 0.        , 0.2656198 ,
       0.        , 0.        ], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 7 / 7 (100%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.219763, 0.      , 0.      , 0.      , 0.26562 , 0.      ,
E                  0.      ], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range0-5-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fb9c90>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f137e0>, array([0.04280685], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 0.95719314
E           Max relative difference among violations: 0.95719314
E            ACTUAL: array([0.042807], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range0-5-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fbbfd0>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f13380>, array([0.04613533, 0.02471389, 0.57729286, 0.2702514 , 0.02161505,
       0.1545943 , 0.21590939], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 7 / 7 (100%)
E           Max absolute difference among violations: 0.978385
E           Max relative difference among violations: 0.978385
E            ACTUAL: array([0.046135, 0.024714, 0.577293, 0.270251, 0.021615, 0.154594,
E                  0.215909], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range1-2-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fc4190>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f13560>, array([0.], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range1-2-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fc4350>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f36ac0>, array([0.6192276, 0.       , 0.9247208, 0.5628367, 1.       , 0.7060242,
       0.       ], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 6 / 7 (85.7%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.619228, 0.      , 0.924721, 0.562837, 1.      , 0.706024,
E                  0.      ], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range1-5-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fc4610>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f371a0>, array([0.6229178], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 0.37708223
E           Max relative difference among violations: 0.37708223
E            ACTUAL: array([0.622918], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range1-5-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fc48d0>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f358a0>, array([0.33185542, 0.23566385, 0.6961192 , 0.5850017 , 0.44198892,
       0.6693261 , 0.6471319 ], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 7 / 7 (100%)
E           Max absolute difference among violations: 0.76433617
E           Max relative difference among violations: 0.76433617
E            ACTUAL: array([0.331855, 0.235664, 0.696119, 0.585002, 0.441989, 0.669326,
E                  0.647132], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range2-2-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fc4b90>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f363e0>, array([0.], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range2-2-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fc4e10>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f351c0>, array([0.02909956, 1.        , 1.        , 1.0000001 , 1.        ,
       0.99999994, 1.        ], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 7 (14.3%)
E           Max absolute difference among violations: 0.9709004
E           Max relative difference among violations: 0.9709004
E            ACTUAL: array([0.0291, 1.    , 1.    , 1.    , 1.    , 1.    , 1.    ],
E                 dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range2-5-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fc50d0>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f342c0>, array([0.63188386], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 0.36811614
E           Max relative difference among violations: 0.36811614
E            ACTUAL: array([0.631884], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range2-5-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fc5390>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f35580>, array([0.6668778 , 1.        , 1.        , 1.        , 0.62406784,
       0.8576589 , 1.        ], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 3 / 7 (42.9%)
E           Max absolute difference among violations: 0.37593216
E           Max relative difference among violations: 0.37593216
E            ACTUAL: array([0.666878, 1.      , 1.      , 1.      , 0.624068, 0.857659,
E                  1.      ], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range3-2-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fc5650>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f13560>, array([0.], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range3-2-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fc5950>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f12660>, array([0.60713476, 0.        , 0.2710697 , 0.89137995, 0.        ,
       0.39427492, 0.        ], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 7 / 7 (100%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.607135, 0.      , 0.27107 , 0.89138 , 0.      , 0.394275,
E                  0.      ], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range3-5-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fc5c90>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f137e0>, array([0.30193126], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 0.69806874
E           Max relative difference among violations: 0.69806874
E            ACTUAL: array([0.301931], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range3-5-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fc5fd0>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f12f20>, array([0.36894292, 0.54202366, 0.443502  , 0.        , 0.        ,
       0.58410656, 0.83595085], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 7 / 7 (100%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.368943, 0.542024, 0.443502, 0.      , 0.      , 0.584107,
E                  0.835951], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range4-2-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fc6310>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b586ed67ec0>, array([0.8991245], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 0.1008755
E           Max relative difference among violations: 0.1008755
E            ACTUAL: array([0.899125], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range4-2-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fc6650>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f34d60>, array([0.       , 0.       , 0.       , 0.       , 0.4863059, 0.       ,
       0.       ], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 7 / 7 (100%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.      , 0.      , 0.      , 0.      , 0.486306, 0.      ,
E                  0.      ], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range4-5-1] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fc6990>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f377e0>, array([0.06793506], dtype=float32), array([1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 1 / 1 (100%)
E           Max absolute difference among violations: 0.93206495
E           Max relative difference among violations: 0.93206495
E            ACTUAL: array([0.067935], dtype=float32)
E            DESIRED: array([1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
______ TestApplyCategoricalProjectionToRandomCases.test_gpu[v_range4-5-7] ______

self = <test_categorical_dqn.TestApplyCategoricalProjectionToRandomCases object at 0x7b57d3fc6cd0>

    @pytest.mark.gpu
    def test_gpu(self):
>       self._test(device=torch.device("cuda"))

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:107: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py:95: in _test
    np.testing.assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7b57c6f345e0>, array([0.12259366, 0.        , 0.41001588, 0.06457493, 0.34930983,
       0.11136562, 0.12731017], dtype=float32), array([1., 1., 1., 1., 1., 1., 1.], dtype=float32))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=1e-05', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=1e-05
E           
E           Mismatched elements: 7 / 7 (100%)
E           Max absolute difference among violations: 1.
E           Max relative difference among violations: 1.
E            ACTUAL: array([0.122594, 0.      , 0.410016, 0.064575, 0.34931 , 0.111366,
E                  0.12731 ], dtype=float32)
E            DESIRED: array([1., 1., 1., 1., 1., 1., 1.], dtype=float32)

/usr/lib/python3.11/contextlib.py:81: AssertionError
=============================== warnings summary ===============================
../publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:271
  /local/data0/moved_data/publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:271: PytestUnknownMarkWarning: Unknown pytest.mark.async_ - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.async_

../publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:277
  /local/data0/moved_data/publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:277: PytestUnknownMarkWarning: Unknown pytest.mark.async_ - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.async_

../publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:282
  /local/data0/moved_data/publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:282: PytestUnknownMarkWarning: Unknown pytest.mark.async_ - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.async_

../publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:287
  /local/data0/moved_data/publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:287: PytestUnknownMarkWarning: Unknown pytest.mark.async_ - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.async_

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-2-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-2-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-5-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-5-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-2-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-2-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-5-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-5-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-2-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-5-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-5-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-2-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-2-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-5-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-5-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-2-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-2-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-5-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-5-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-2-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-2-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-5-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-5-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-2-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-2-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-5-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-5-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-2-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-2-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-5-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-5-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-2-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-2-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-5-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-5-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-2-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-2-7]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-5-1]
FAILED ../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-5-7]
=================== 39 failed, 1 passed, 4 warnings in 1.80s ===================


Final Test Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/pfrl/pfrl/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/pfrl/pfrl
configfile: pytest.ini
collecting ... collected 40 items

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-5-7] PASSED

=============================== warnings summary ===============================
../publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:271
  /local/data0/moved_data/publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:271: PytestUnknownMarkWarning: Unknown pytest.mark.async_ - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.async_

../publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:277
  /local/data0/moved_data/publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:277: PytestUnknownMarkWarning: Unknown pytest.mark.async_ - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.async_

../publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:282
  /local/data0/moved_data/publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:282: PytestUnknownMarkWarning: Unknown pytest.mark.async_ - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.async_

../publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:287
  /local/data0/moved_data/publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:287: PytestUnknownMarkWarning: Unknown pytest.mark.async_ - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.async_

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 40 passed, 4 warnings in 1.18s ========================


Initial Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/pfrl/pfrl/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/pfrl/pfrl
configfile: pytest.ini
collecting ... collected 40 items

../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range0-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range1-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range2-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range3-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_cpu[v_range4-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range0-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range1-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range2-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range3-5-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-2-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-2-7] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-5-1] PASSED
../publishablew/pfrl/pfrl/tests/agents_tests/test_categorical_dqn.py::TestApplyCategoricalProjectionToRandomCases::test_gpu[v_range4-5-7] PASSED

=============================== warnings summary ===============================
../publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:271
  /local/data0/moved_data/publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:271: PytestUnknownMarkWarning: Unknown pytest.mark.async_ - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.async_

../publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:277
  /local/data0/moved_data/publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:277: PytestUnknownMarkWarning: Unknown pytest.mark.async_ - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.async_

../publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:282
  /local/data0/moved_data/publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:282: PytestUnknownMarkWarning: Unknown pytest.mark.async_ - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.async_

../publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:287
  /local/data0/moved_data/publishablew/pfrl/pfrl/tests/agents_tests/basetest_training.py:287: PytestUnknownMarkWarning: Unknown pytest.mark.async_ - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.async_

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 40 passed, 4 warnings in 1.54s ========================
