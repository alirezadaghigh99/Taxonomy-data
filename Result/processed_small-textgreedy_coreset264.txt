output file:
processed_small-textgreedy_coreset264.json
function:
greedy_coreset
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_simple_query FAILED', 'FAILED ../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_default_query', '../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_takes_remaining_pool FAILED', 'FAILED ../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_default', '../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_default_query FAILED', 'FAILED ../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_simple_query', 'FAILED ../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_takes_remaining_pool', '../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_default FAILED'}

All Test Cases On Generated code:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/small-text/small-text/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/small-text/small-text
configfile: pytest.ini
plugins: srcpaths-1.2.1, cov-6.0.0, approvaltests-14.2.0, approvaltests-0.2.4
collecting ... collected 8 items

../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_default_query FAILED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_init_with_invalid_distance_metric PASSED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_default FAILED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_empty_pool PASSED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_exhausts_pool PASSED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_takes_remaining_pool FAILED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_simple_query FAILED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_str PASSED

=================================== FAILURES ===================================
________ GreedyCoresetSamplingStrategyNormalizedTest.test_default_query ________

self = <tests.unit.small_text.query_strategies.test_coresets.GreedyCoresetSamplingStrategyNormalizedTest testMethod=test_default_query>
embedding_dim = 100

    def test_default_query(self, embedding_dim=100):
        embeddings = np.random.rand(SamplingStrategiesTests.DEFAULT_NUM_SAMPLES, embedding_dim)
>       indices = self._query(self._get_query_strategy(), num_samples=100, embeddings=embeddings)

../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py:102: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_strategies.py:144: in _query
    return strategy.query(clf_mock, dataset, indices_unlabeled, indices_labeled, y, n=n,
../publishablew/small-text/small-text/small_text/query_strategies/strategies.py:306: in query
    sampled_indices = self.sample(clf, subset, subset_indices_unlabeled, subset_indices_labeled,
../publishablew/small-text/small-text/small_text/query_strategies/coresets.py:114: in sample
    return greedy_coreset(embeddings, indices_unlabeled, indices_labeled, n, distance_metric=self.distance_metric, normalized=self.normalize)
../publishablew/small-text/small-text/small_text/query_strategies/coresets.py:22: in greedy_coreset
    return greedy_coreset(x, indices_unlabeled, indices_labeled, n, distance_metric, batch_size, normalized)
../publishablew/small-text/small-text/small_text/query_strategies/temp.py:21: in greedy_coreset
    batch_indices = np.argpartition(min_distances, -batch_size)[-batch_size:]
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/numpy/core/fromnumeric.py:858: in argpartition
    return _wrapfunc(a, 'argpartition', kth, axis=axis, kind=kind, order=order)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

obj = array([0.65293942, 0.63863563, 0.60357878, 0.65399936, 0.63595171,
       0.63359593, 0.55155591, 0.62979218, 0.630693...57, 0.63539886, 0.59450321, 0.64715665, 0.68521044,
       0.65668996, 0.65890449, 0.66406945, 0.60605075, 0.59453249])
method = 'argpartition', args = (-100,)
kwds = {'axis': -1, 'kind': 'introselect', 'order': None}
bound = <built-in method argpartition of numpy.ndarray object at 0x7c51e9f4c930>

    def _wrapfunc(obj, method, *args, **kwds):
        bound = getattr(obj, method, None)
        if bound is None:
            return _wrapit(obj, method, *args, **kwds)
    
        try:
>           return bound(*args, **kwds)
E           ValueError: kth(=-10) out of bounds (90)

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/numpy/core/fromnumeric.py:59: ValueError
________ GreedyCoresetSamplingStrategyNormalizedTest.test_query_default ________

self = <tests.unit.small_text.query_strategies.test_coresets.GreedyCoresetSamplingStrategyNormalizedTest testMethod=test_query_default>

    def test_query_default(self):
>       indices = query_random_data(self._get_query_strategy(), use_embeddings=True)

../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py:121: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_strategies.py:53: in query_random_data
    return strategy.query(clf,
../publishablew/small-text/small-text/small_text/query_strategies/strategies.py:306: in query
    sampled_indices = self.sample(clf, subset, subset_indices_unlabeled, subset_indices_labeled,
../publishablew/small-text/small-text/small_text/query_strategies/coresets.py:114: in sample
    return greedy_coreset(embeddings, indices_unlabeled, indices_labeled, n, distance_metric=self.distance_metric, normalized=self.normalize)
../publishablew/small-text/small-text/small_text/query_strategies/coresets.py:22: in greedy_coreset
    return greedy_coreset(x, indices_unlabeled, indices_labeled, n, distance_metric, batch_size, normalized)
../publishablew/small-text/small-text/small_text/query_strategies/temp.py:21: in greedy_coreset
    batch_indices = np.argpartition(min_distances, -batch_size)[-batch_size:]
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/numpy/core/fromnumeric.py:858: in argpartition
    return _wrapfunc(a, 'argpartition', kth, axis=axis, kind=kind, order=order)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

obj = array([0.61929998, 0.64512478, 0.69177486, 0.5687894 , 0.65885367,
       0.61303749, 0.62394953, 0.63546393, 0.599004...55, 0.69596165, 0.68424075, 0.64463355, 0.66899915,
       0.62618174, 0.64346228, 0.68782839, 0.6523818 , 0.65359089])
method = 'argpartition', args = (-100,)
kwds = {'axis': -1, 'kind': 'introselect', 'order': None}
bound = <built-in method argpartition of numpy.ndarray object at 0x7c51e9f70e70>

    def _wrapfunc(obj, method, *args, **kwds):
        bound = getattr(obj, method, None)
        if bound is None:
            return _wrapit(obj, method, *args, **kwds)
    
        try:
>           return bound(*args, **kwds)
E           ValueError: kth(=-10) out of bounds (90)

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/numpy/core/fromnumeric.py:59: ValueError
_ GreedyCoresetSamplingStrategyNormalizedTest.test_query_takes_remaining_pool __

self = <tests.unit.small_text.query_strategies.test_coresets.GreedyCoresetSamplingStrategyNormalizedTest testMethod=test_query_takes_remaining_pool>
embedding_dim = 100

    def test_query_takes_remaining_pool(self, embedding_dim=100):
        embeddings = np.random.rand(SamplingStrategiesTests.DEFAULT_NUM_SAMPLES, embedding_dim)
>       indices = self._query(self._get_query_strategy(),
                              num_samples=self.DEFAULT_NUM_SAMPLES,
                              n=10,
                              embeddings=embeddings)

../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py:108: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_strategies.py:144: in _query
    return strategy.query(clf_mock, dataset, indices_unlabeled, indices_labeled, y, n=n,
../publishablew/small-text/small-text/small_text/query_strategies/strategies.py:306: in query
    sampled_indices = self.sample(clf, subset, subset_indices_unlabeled, subset_indices_labeled,
../publishablew/small-text/small-text/small_text/query_strategies/coresets.py:114: in sample
    return greedy_coreset(embeddings, indices_unlabeled, indices_labeled, n, distance_metric=self.distance_metric, normalized=self.normalize)
../publishablew/small-text/small-text/small_text/query_strategies/coresets.py:22: in greedy_coreset
    return greedy_coreset(x, indices_unlabeled, indices_labeled, n, distance_metric, batch_size, normalized)
../publishablew/small-text/small-text/small_text/query_strategies/temp.py:21: in greedy_coreset
    batch_indices = np.argpartition(min_distances, -batch_size)[-batch_size:]
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/numpy/core/fromnumeric.py:858: in argpartition
    return _wrapfunc(a, 'argpartition', kth, axis=axis, kind=kind, order=order)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

obj = array([0.65380009, 0.67543213, 0.63398763, 0.67091948, 0.65415049,
       0.64093421, 0.58711799, 0.63965715, 0.621968...82, 0.60010403, 0.66283164, 0.63884388, 0.64746584,
       0.61085655, 0.62642959, 0.63652436, 0.63952607, 0.63386874])
method = 'argpartition', args = (-100,)
kwds = {'axis': -1, 'kind': 'introselect', 'order': None}
bound = <built-in method argpartition of numpy.ndarray object at 0x7c51e9f73e10>

    def _wrapfunc(obj, method, *args, **kwds):
        bound = getattr(obj, method, None)
        if bound is None:
            return _wrapit(obj, method, *args, **kwds)
    
        try:
>           return bound(*args, **kwds)
E           ValueError: kth(=-10) out of bounds (90)

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/numpy/core/fromnumeric.py:59: ValueError
________ GreedyCoresetSamplingStrategyNormalizedTest.test_simple_query _________

self = <tests.unit.small_text.query_strategies.test_coresets.GreedyCoresetSamplingStrategyNormalizedTest testMethod=test_simple_query>
embedding_dim = 100

    def test_simple_query(self, embedding_dim=100):
        embeddings = np.random.rand(SamplingStrategiesTests.DEFAULT_NUM_SAMPLES, embedding_dim)
>       indices = self._query(self._get_query_strategy(),
                              num_samples=self.DEFAULT_NUM_SAMPLES,
                              n=5,
                              embeddings=embeddings)

../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py:93: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_strategies.py:144: in _query
    return strategy.query(clf_mock, dataset, indices_unlabeled, indices_labeled, y, n=n,
../publishablew/small-text/small-text/small_text/query_strategies/strategies.py:306: in query
    sampled_indices = self.sample(clf, subset, subset_indices_unlabeled, subset_indices_labeled,
../publishablew/small-text/small-text/small_text/query_strategies/coresets.py:114: in sample
    return greedy_coreset(embeddings, indices_unlabeled, indices_labeled, n, distance_metric=self.distance_metric, normalized=self.normalize)
../publishablew/small-text/small-text/small_text/query_strategies/coresets.py:22: in greedy_coreset
    return greedy_coreset(x, indices_unlabeled, indices_labeled, n, distance_metric, batch_size, normalized)
../publishablew/small-text/small-text/small_text/query_strategies/temp.py:21: in greedy_coreset
    batch_indices = np.argpartition(min_distances, -batch_size)[-batch_size:]
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/numpy/core/fromnumeric.py:858: in argpartition
    return _wrapfunc(a, 'argpartition', kth, axis=axis, kind=kind, order=order)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

obj = array([0.65309543, 0.6312548 , 0.65753148, 0.58251637, 0.66685671,
       0.64413395, 0.62079573, 0.65959403, 0.664022...13, 0.6665124 , 0.66713543, 0.63011589, 0.62844992,
       0.61593731, 0.67113328, 0.59647192, 0.64363277, 0.63420459])
method = 'argpartition', args = (-100,)
kwds = {'axis': -1, 'kind': 'introselect', 'order': None}
bound = <built-in method argpartition of numpy.ndarray object at 0x7c51e9f71530>

    def _wrapfunc(obj, method, *args, **kwds):
        bound = getattr(obj, method, None)
        if bound is None:
            return _wrapit(obj, method, *args, **kwds)
    
        try:
>           return bound(*args, **kwds)
E           ValueError: kth(=-10) out of bounds (90)

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/numpy/core/fromnumeric.py:59: ValueError
=============================== warnings summary ===============================
tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_default_query
tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_empty_pool
tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_exhausts_pool
tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_takes_remaining_pool
tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_simple_query
  /local/data0/moved_data/publishablew/small-text/small-text/small_text/data/datasets.py:422: UserWarning: Passing target_labels=None is discouraged as it can lead to unintended results in combination with indexing and cloning. Moreover, explicit target labels might be required in the next major version.
    check_target_labels(target_labels)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED ../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_default_query
FAILED ../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_default
FAILED ../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_takes_remaining_pool
FAILED ../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_simple_query
=================== 4 failed, 4 passed, 5 warnings in 1.84s ====================


Final Test Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/small-text/small-text/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/small-text/small-text
configfile: pytest.ini
plugins: srcpaths-1.2.1, cov-6.0.0, approvaltests-14.2.0, approvaltests-0.2.4
collecting ... collected 8 items

../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_default_query PASSED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_init_with_invalid_distance_metric PASSED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_default PASSED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_empty_pool PASSED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_exhausts_pool PASSED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_takes_remaining_pool PASSED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_simple_query PASSED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_str PASSED

=============================== warnings summary ===============================
tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_default_query
tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_empty_pool
tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_exhausts_pool
tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_takes_remaining_pool
tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_simple_query
  /local/data0/moved_data/publishablew/small-text/small-text/small_text/data/datasets.py:422: UserWarning: Passing target_labels=None is discouraged as it can lead to unintended results in combination with indexing and cloning. Moreover, explicit target labels might be required in the next major version.
    check_target_labels(target_labels)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 8 passed, 5 warnings in 1.52s =========================


Initial Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/small-text/small-text/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/small-text/small-text
configfile: pytest.ini
plugins: srcpaths-1.2.1, cov-6.0.0, approvaltests-14.2.0, approvaltests-0.2.4
collecting ... collected 8 items

../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_default_query PASSED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_init_with_invalid_distance_metric PASSED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_default PASSED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_empty_pool PASSED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_exhausts_pool PASSED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_takes_remaining_pool PASSED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_simple_query PASSED
../publishablew/small-text/small-text/tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_str PASSED

=============================== warnings summary ===============================
tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_default_query
tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_empty_pool
tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_exhausts_pool
tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_query_takes_remaining_pool
tests/unit/small_text/query_strategies/test_coresets.py::GreedyCoresetSamplingStrategyNormalizedTest::test_simple_query
  /local/data0/moved_data/publishablew/small-text/small-text/small_text/data/datasets.py:422: UserWarning: Passing target_labels=None is discouraged as it can lead to unintended results in combination with indexing and cloning. Moreover, explicit target labels might be required in the next major version.
    check_target_labels(target_labels)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 8 passed, 5 warnings in 1.68s =========================
