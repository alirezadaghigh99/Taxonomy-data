output file:
processed_classes-korniaapply_transform94.json
function:
apply_transform
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range1-erase_scale_range0] FAILED [ 90%]', 'FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range1]', '../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range1] FAILED [ 19%]', '../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range1] FAILED [  9%]', 'FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range1-erase_scale_range0]', '../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range0] FAILED [ 23%]', 'FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range1]', 'FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range0]', 'FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range1]', '../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range0] FAILED [ 14%]', 'FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range0-erase_scale_range0]', '../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range0-erase_scale_range0] FAILED [ 80%]', '../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range0] FAILED [  4%]', '../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range1] FAILED [ 38%]', 'FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range0]', '../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range0] FAILED [ 33%]', 'FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range0]', 'FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range1]', 'FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range0]', '../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range1] FAILED [ 28%]'}

All Test Cases On Generated code:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python3
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'jit', 'inductor', 'openxla', 'cudagraphs', 'tvm', 'onnxrt', None}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 21 items

../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range0] FAILED [  4%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range1] FAILED [  9%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range0] FAILED [ 14%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range1] FAILED [ 19%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range0] FAILED [ 23%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range1] FAILED [ 28%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range0] FAILED [ 33%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range1] FAILED [ 38%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range0] PASSED [ 42%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range1] PASSED [ 47%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range0] PASSED [ 52%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range1] PASSED [ 57%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range0] PASSED [ 61%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range1] PASSED [ 66%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range0] PASSED [ 71%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range1] PASSED [ 76%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range0-erase_scale_range0] FAILED [ 80%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range0-erase_scale_range1] PASSED [ 85%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range1-erase_scale_range0] FAILED [ 90%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range1-erase_scale_range1] PASSED [ 95%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_gradcheck[cpu] SKIPPED [100%]

=================================== FAILURES ===================================
_ TestRectangleRandomErasing.test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range0] _

self = <test_augmentation.TestRectangleRandomErasing object at 0x7ed06ef68730>
batch_shape = (1, 4, 8, 15), erase_scale_range = (0.001, 0.001)
aspect_ratio_range = (0.1, 0.1)

    @pytest.mark.parametrize("erase_scale_range", [(0.001, 0.001), (1.0, 1.0)])
    @pytest.mark.parametrize("aspect_ratio_range", [(0.1, 0.1), (10.0, 10.0)])
    @pytest.mark.parametrize("batch_shape", [(1, 4, 8, 15), (2, 3, 11, 7)])
    def test_random_rectangle_erasing_shape(self, batch_shape, erase_scale_range, aspect_ratio_range):
        input = torch.rand(batch_shape)
        rand_rec = RandomErasing(erase_scale_range, aspect_ratio_range, p=1.0)
>       assert rand_rec(input).shape == batch_shape

../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py:2494: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/core/module.py:274: in __call__
    _output_image = decorated_forward(*inputs, **kwargs)
../publishablew/kornia/kornia/kornia/core/module.py:63: in wrapper
    tensor_outputs = func(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1736: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1747: in _call_impl
    return forward_call(*args, **kwargs)
../publishablew/kornia/kornia/kornia/augmentation/base.py:238: in forward
    output = self.apply_func(in_tensor, params, flags)
../publishablew/kornia/kornia/kornia/augmentation/_2d/base.py:129: in apply_func
    output = self.transform_inputs(in_tensor, params, flags, trans_matrix)
../publishablew/kornia/kornia/kornia/augmentation/base.py:297: in transform_inputs
    output = self.apply_transform(in_tensor, params, flags, transform=transform)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = RandomErasing(scale=(0.001, 0.001), resize_to=(0.1, 0.1), value=0.0, p=1.0, p_batch=1.0, same_on_batch=False)
input = tensor([[[[0.4963, 0.7682, 0.0885, 0.1320, 0.3074, 0.6341, 0.4901, 0.8964,
           0.4556, 0.6323, 0.3489, 0.4017, ... 0.1655, 0.1123, 0.3457, 0.7195, 0.9932, 0.7875,
           0.4437, 0.6753, 0.0095, 0.0729, 0.7333, 0.2168, 0.7405]]]])
params = {'batch_prob': tensor([1.]), 'forward_input_shape': tensor([ 1,  4,  8, 15]), 'heights': tensor([1.]), 'values': tensor([0.]), ...}
flags = {}
transform = tensor([[[1., 0., 0.],
         [0., 1., 0.],
         [0., 0., 1.]]])

    def apply_transform(self, input: Tensor, params: Dict[str, Tensor], flags: Dict[str, Any], transform: Optional[Tensor]=None) -> Tensor:
        batch_size, channels, height, width = input.shape
>       fill_value = torch.full((batch_size, channels, 1, 1), self.value, device=input.device, dtype=input.dtype)
E       NameError: name 'torch' is not defined

../publishablew/kornia/kornia/kornia/augmentation/_2d/intensity/erasing.py:62: NameError
_ TestRectangleRandomErasing.test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range1] _

self = <test_augmentation.TestRectangleRandomErasing object at 0x7ed06ef68640>
batch_shape = (1, 4, 8, 15), erase_scale_range = (1.0, 1.0)
aspect_ratio_range = (0.1, 0.1)

    @pytest.mark.parametrize("erase_scale_range", [(0.001, 0.001), (1.0, 1.0)])
    @pytest.mark.parametrize("aspect_ratio_range", [(0.1, 0.1), (10.0, 10.0)])
    @pytest.mark.parametrize("batch_shape", [(1, 4, 8, 15), (2, 3, 11, 7)])
    def test_random_rectangle_erasing_shape(self, batch_shape, erase_scale_range, aspect_ratio_range):
        input = torch.rand(batch_shape)
        rand_rec = RandomErasing(erase_scale_range, aspect_ratio_range, p=1.0)
>       assert rand_rec(input).shape == batch_shape

../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py:2494: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/core/module.py:274: in __call__
    _output_image = decorated_forward(*inputs, **kwargs)
../publishablew/kornia/kornia/kornia/core/module.py:63: in wrapper
    tensor_outputs = func(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1736: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1747: in _call_impl
    return forward_call(*args, **kwargs)
../publishablew/kornia/kornia/kornia/augmentation/base.py:238: in forward
    output = self.apply_func(in_tensor, params, flags)
../publishablew/kornia/kornia/kornia/augmentation/_2d/base.py:129: in apply_func
    output = self.transform_inputs(in_tensor, params, flags, trans_matrix)
../publishablew/kornia/kornia/kornia/augmentation/base.py:297: in transform_inputs
    output = self.apply_transform(in_tensor, params, flags, transform=transform)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = RandomErasing(scale=(1.0, 1.0), resize_to=(0.1, 0.1), value=0.0, p=1.0, p_batch=1.0, same_on_batch=False)
input = tensor([[[[4.4905e-01, 8.8480e-01, 8.0944e-01, 7.7667e-01, 5.1608e-01,
           3.4541e-01, 3.9128e-01, 5.6645e-01, ...412e-01, 5.6660e-01, 2.2687e-01, 6.6635e-01,
           5.2246e-01, 1.4266e-01, 6.0759e-01, 9.5527e-01, 8.1968e-03]]]])
params = {'batch_prob': tensor([1.]), 'forward_input_shape': tensor([ 1,  4,  8, 15]), 'heights': tensor([3.]), 'values': tensor([0.]), ...}
flags = {}
transform = tensor([[[1., 0., 0.],
         [0., 1., 0.],
         [0., 0., 1.]]])

    def apply_transform(self, input: Tensor, params: Dict[str, Tensor], flags: Dict[str, Any], transform: Optional[Tensor]=None) -> Tensor:
        batch_size, channels, height, width = input.shape
>       fill_value = torch.full((batch_size, channels, 1, 1), self.value, device=input.device, dtype=input.dtype)
E       NameError: name 'torch' is not defined

../publishablew/kornia/kornia/kornia/augmentation/_2d/intensity/erasing.py:62: NameError
_ TestRectangleRandomErasing.test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range0] _

self = <test_augmentation.TestRectangleRandomErasing object at 0x7ed06ef684c0>
batch_shape = (1, 4, 8, 15), erase_scale_range = (0.001, 0.001)
aspect_ratio_range = (10.0, 10.0)

    @pytest.mark.parametrize("erase_scale_range", [(0.001, 0.001), (1.0, 1.0)])
    @pytest.mark.parametrize("aspect_ratio_range", [(0.1, 0.1), (10.0, 10.0)])
    @pytest.mark.parametrize("batch_shape", [(1, 4, 8, 15), (2, 3, 11, 7)])
    def test_random_rectangle_erasing_shape(self, batch_shape, erase_scale_range, aspect_ratio_range):
        input = torch.rand(batch_shape)
        rand_rec = RandomErasing(erase_scale_range, aspect_ratio_range, p=1.0)
>       assert rand_rec(input).shape == batch_shape

../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py:2494: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/core/module.py:274: in __call__
    _output_image = decorated_forward(*inputs, **kwargs)
../publishablew/kornia/kornia/kornia/core/module.py:63: in wrapper
    tensor_outputs = func(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1736: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1747: in _call_impl
    return forward_call(*args, **kwargs)
../publishablew/kornia/kornia/kornia/augmentation/base.py:238: in forward
    output = self.apply_func(in_tensor, params, flags)
../publishablew/kornia/kornia/kornia/augmentation/_2d/base.py:129: in apply_func
    output = self.transform_inputs(in_tensor, params, flags, trans_matrix)
../publishablew/kornia/kornia/kornia/augmentation/base.py:297: in transform_inputs
    output = self.apply_transform(in_tensor, params, flags, transform=transform)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = RandomErasing(scale=(0.001, 0.001), resize_to=(10.0, 10.0), value=0.0, p=1.0, p_batch=1.0, same_on_batch=False)
input = tensor([[[[6.1007e-01, 8.5149e-01, 6.5416e-01, 6.0821e-01, 9.9886e-01,
           8.2574e-01, 2.1879e-01, 5.4322e-01, ...220e-01, 2.6154e-01, 4.0982e-01, 3.6622e-01,
           6.0747e-02, 4.1185e-01, 6.5306e-01, 2.9697e-01, 4.7869e-01]]]])
params = {'batch_prob': tensor([1.]), 'forward_input_shape': tensor([ 1,  4,  8, 15]), 'heights': tensor([1.]), 'values': tensor([0.]), ...}
flags = {}
transform = tensor([[[1., 0., 0.],
         [0., 1., 0.],
         [0., 0., 1.]]])

    def apply_transform(self, input: Tensor, params: Dict[str, Tensor], flags: Dict[str, Any], transform: Optional[Tensor]=None) -> Tensor:
        batch_size, channels, height, width = input.shape
>       fill_value = torch.full((batch_size, channels, 1, 1), self.value, device=input.device, dtype=input.dtype)
E       NameError: name 'torch' is not defined

../publishablew/kornia/kornia/kornia/augmentation/_2d/intensity/erasing.py:62: NameError
_ TestRectangleRandomErasing.test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range1] _

self = <test_augmentation.TestRectangleRandomErasing object at 0x7ed06ef68a30>
batch_shape = (1, 4, 8, 15), erase_scale_range = (1.0, 1.0)
aspect_ratio_range = (10.0, 10.0)

    @pytest.mark.parametrize("erase_scale_range", [(0.001, 0.001), (1.0, 1.0)])
    @pytest.mark.parametrize("aspect_ratio_range", [(0.1, 0.1), (10.0, 10.0)])
    @pytest.mark.parametrize("batch_shape", [(1, 4, 8, 15), (2, 3, 11, 7)])
    def test_random_rectangle_erasing_shape(self, batch_shape, erase_scale_range, aspect_ratio_range):
        input = torch.rand(batch_shape)
        rand_rec = RandomErasing(erase_scale_range, aspect_ratio_range, p=1.0)
>       assert rand_rec(input).shape == batch_shape

../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py:2494: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/core/module.py:274: in __call__
    _output_image = decorated_forward(*inputs, **kwargs)
../publishablew/kornia/kornia/kornia/core/module.py:63: in wrapper
    tensor_outputs = func(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1736: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1747: in _call_impl
    return forward_call(*args, **kwargs)
../publishablew/kornia/kornia/kornia/augmentation/base.py:238: in forward
    output = self.apply_func(in_tensor, params, flags)
../publishablew/kornia/kornia/kornia/augmentation/_2d/base.py:129: in apply_func
    output = self.transform_inputs(in_tensor, params, flags, trans_matrix)
../publishablew/kornia/kornia/kornia/augmentation/base.py:297: in transform_inputs
    output = self.apply_transform(in_tensor, params, flags, transform=transform)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = RandomErasing(scale=(1.0, 1.0), resize_to=(10.0, 10.0), value=0.0, p=1.0, p_batch=1.0, same_on_batch=False)
input = tensor([[[[0.8409, 0.3358, 0.7613, 0.0315, 0.3763, 0.3983, 0.3234, 0.7100,
           0.2722, 0.4420, 0.3556, 0.0305, ... 0.8779, 0.3466, 0.2186, 0.4609, 0.8910, 0.5430,
           0.8474, 0.4963, 0.6534, 0.5174, 0.5136, 0.0242, 0.0629]]]])
params = {'batch_prob': tensor([1.]), 'forward_input_shape': tensor([ 1,  4,  8, 15]), 'heights': tensor([8.]), 'values': tensor([0.]), ...}
flags = {}
transform = tensor([[[1., 0., 0.],
         [0., 1., 0.],
         [0., 0., 1.]]])

    def apply_transform(self, input: Tensor, params: Dict[str, Tensor], flags: Dict[str, Any], transform: Optional[Tensor]=None) -> Tensor:
        batch_size, channels, height, width = input.shape
>       fill_value = torch.full((batch_size, channels, 1, 1), self.value, device=input.device, dtype=input.dtype)
E       NameError: name 'torch' is not defined

../publishablew/kornia/kornia/kornia/augmentation/_2d/intensity/erasing.py:62: NameError
_ TestRectangleRandomErasing.test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range0] _

self = <test_augmentation.TestRectangleRandomErasing object at 0x7ed06ef68af0>
batch_shape = (2, 3, 11, 7), erase_scale_range = (0.001, 0.001)
aspect_ratio_range = (0.1, 0.1)

    @pytest.mark.parametrize("erase_scale_range", [(0.001, 0.001), (1.0, 1.0)])
    @pytest.mark.parametrize("aspect_ratio_range", [(0.1, 0.1), (10.0, 10.0)])
    @pytest.mark.parametrize("batch_shape", [(1, 4, 8, 15), (2, 3, 11, 7)])
    def test_random_rectangle_erasing_shape(self, batch_shape, erase_scale_range, aspect_ratio_range):
        input = torch.rand(batch_shape)
        rand_rec = RandomErasing(erase_scale_range, aspect_ratio_range, p=1.0)
>       assert rand_rec(input).shape == batch_shape

../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py:2494: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/core/module.py:274: in __call__
    _output_image = decorated_forward(*inputs, **kwargs)
../publishablew/kornia/kornia/kornia/core/module.py:63: in wrapper
    tensor_outputs = func(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1736: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1747: in _call_impl
    return forward_call(*args, **kwargs)
../publishablew/kornia/kornia/kornia/augmentation/base.py:238: in forward
    output = self.apply_func(in_tensor, params, flags)
../publishablew/kornia/kornia/kornia/augmentation/_2d/base.py:129: in apply_func
    output = self.transform_inputs(in_tensor, params, flags, trans_matrix)
../publishablew/kornia/kornia/kornia/augmentation/base.py:297: in transform_inputs
    output = self.apply_transform(in_tensor, params, flags, transform=transform)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = RandomErasing(scale=(0.001, 0.001), resize_to=(0.1, 0.1), value=0.0, p=1.0, p_batch=1.0, same_on_batch=False)
input = tensor([[[[7.1076e-01, 7.0912e-01, 6.8374e-02, 6.0533e-02, 1.1233e-01,
           5.0860e-01, 1.8384e-01],
          [...535e-01],
          [2.5962e-01, 6.3866e-02, 8.1778e-01, 3.9947e-01, 8.7335e-03,
           9.8239e-01, 7.4331e-01]]]])
params = {'batch_prob': tensor([1., 1.]), 'forward_input_shape': tensor([ 2,  3, 11,  7]), 'heights': tensor([1., 1.]), 'values': tensor([0., 0.]), ...}
flags = {}
transform = tensor([[[1., 0., 0.],
         [0., 1., 0.],
         [0., 0., 1.]],

        [[1., 0., 0.],
         [0., 1., 0.],
         [0., 0., 1.]]])

    def apply_transform(self, input: Tensor, params: Dict[str, Tensor], flags: Dict[str, Any], transform: Optional[Tensor]=None) -> Tensor:
        batch_size, channels, height, width = input.shape
>       fill_value = torch.full((batch_size, channels, 1, 1), self.value, device=input.device, dtype=input.dtype)
E       NameError: name 'torch' is not defined

../publishablew/kornia/kornia/kornia/augmentation/_2d/intensity/erasing.py:62: NameError
_ TestRectangleRandomErasing.test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range1] _

self = <test_augmentation.TestRectangleRandomErasing object at 0x7ed06ef68bb0>
batch_shape = (2, 3, 11, 7), erase_scale_range = (1.0, 1.0)
aspect_ratio_range = (0.1, 0.1)

    @pytest.mark.parametrize("erase_scale_range", [(0.001, 0.001), (1.0, 1.0)])
    @pytest.mark.parametrize("aspect_ratio_range", [(0.1, 0.1), (10.0, 10.0)])
    @pytest.mark.parametrize("batch_shape", [(1, 4, 8, 15), (2, 3, 11, 7)])
    def test_random_rectangle_erasing_shape(self, batch_shape, erase_scale_range, aspect_ratio_range):
        input = torch.rand(batch_shape)
        rand_rec = RandomErasing(erase_scale_range, aspect_ratio_range, p=1.0)
>       assert rand_rec(input).shape == batch_shape

../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py:2494: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/core/module.py:274: in __call__
    _output_image = decorated_forward(*inputs, **kwargs)
../publishablew/kornia/kornia/kornia/core/module.py:63: in wrapper
    tensor_outputs = func(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1736: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1747: in _call_impl
    return forward_call(*args, **kwargs)
../publishablew/kornia/kornia/kornia/augmentation/base.py:238: in forward
    output = self.apply_func(in_tensor, params, flags)
../publishablew/kornia/kornia/kornia/augmentation/_2d/base.py:129: in apply_func
    output = self.transform_inputs(in_tensor, params, flags, trans_matrix)
../publishablew/kornia/kornia/kornia/augmentation/base.py:297: in transform_inputs
    output = self.apply_transform(in_tensor, params, flags, transform=transform)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = RandomErasing(scale=(1.0, 1.0), resize_to=(0.1, 0.1), value=0.0, p=1.0, p_batch=1.0, same_on_batch=False)
input = tensor([[[[2.3953e-01, 7.6503e-02, 1.6794e-01, 4.4510e-01, 1.3803e-01,
           9.9280e-01, 5.0541e-01],
          [...219e-01],
          [7.5473e-01, 3.1071e-01, 5.9931e-01, 6.4610e-01, 2.6906e-01,
           8.0871e-01, 2.7251e-02]]]])
params = {'batch_prob': tensor([1., 1.]), 'forward_input_shape': tensor([ 2,  3, 11,  7]), 'heights': tensor([3., 3.]), 'values': tensor([0., 0.]), ...}
flags = {}
transform = tensor([[[1., 0., 0.],
         [0., 1., 0.],
         [0., 0., 1.]],

        [[1., 0., 0.],
         [0., 1., 0.],
         [0., 0., 1.]]])

    def apply_transform(self, input: Tensor, params: Dict[str, Tensor], flags: Dict[str, Any], transform: Optional[Tensor]=None) -> Tensor:
        batch_size, channels, height, width = input.shape
>       fill_value = torch.full((batch_size, channels, 1, 1), self.value, device=input.device, dtype=input.dtype)
E       NameError: name 'torch' is not defined

../publishablew/kornia/kornia/kornia/augmentation/_2d/intensity/erasing.py:62: NameError
_ TestRectangleRandomErasing.test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range0] _

self = <test_augmentation.TestRectangleRandomErasing object at 0x7ed06ef68c70>
batch_shape = (2, 3, 11, 7), erase_scale_range = (0.001, 0.001)
aspect_ratio_range = (10.0, 10.0)

    @pytest.mark.parametrize("erase_scale_range", [(0.001, 0.001), (1.0, 1.0)])
    @pytest.mark.parametrize("aspect_ratio_range", [(0.1, 0.1), (10.0, 10.0)])
    @pytest.mark.parametrize("batch_shape", [(1, 4, 8, 15), (2, 3, 11, 7)])
    def test_random_rectangle_erasing_shape(self, batch_shape, erase_scale_range, aspect_ratio_range):
        input = torch.rand(batch_shape)
        rand_rec = RandomErasing(erase_scale_range, aspect_ratio_range, p=1.0)
>       assert rand_rec(input).shape == batch_shape

../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py:2494: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/core/module.py:274: in __call__
    _output_image = decorated_forward(*inputs, **kwargs)
../publishablew/kornia/kornia/kornia/core/module.py:63: in wrapper
    tensor_outputs = func(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1736: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1747: in _call_impl
    return forward_call(*args, **kwargs)
../publishablew/kornia/kornia/kornia/augmentation/base.py:238: in forward
    output = self.apply_func(in_tensor, params, flags)
../publishablew/kornia/kornia/kornia/augmentation/_2d/base.py:129: in apply_func
    output = self.transform_inputs(in_tensor, params, flags, trans_matrix)
../publishablew/kornia/kornia/kornia/augmentation/base.py:297: in transform_inputs
    output = self.apply_transform(in_tensor, params, flags, transform=transform)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = RandomErasing(scale=(0.001, 0.001), resize_to=(10.0, 10.0), value=0.0, p=1.0, p_batch=1.0, same_on_batch=False)
input = tensor([[[[0.4998, 0.4167, 0.7063, 0.1084, 0.3593, 0.6029, 0.7119],
          [0.5378, 0.6355, 0.9998, 0.3268, 0.8408,...0.4056, 0.7753, 0.3516, 0.1296, 0.1452, 0.7351],
          [0.8819, 0.5202, 0.0152, 0.0087, 0.3871, 0.7699, 0.1668]]]])
params = {'batch_prob': tensor([1., 1.]), 'forward_input_shape': tensor([ 2,  3, 11,  7]), 'heights': tensor([1., 1.]), 'values': tensor([0., 0.]), ...}
flags = {}
transform = tensor([[[1., 0., 0.],
         [0., 1., 0.],
         [0., 0., 1.]],

        [[1., 0., 0.],
         [0., 1., 0.],
         [0., 0., 1.]]])

    def apply_transform(self, input: Tensor, params: Dict[str, Tensor], flags: Dict[str, Any], transform: Optional[Tensor]=None) -> Tensor:
        batch_size, channels, height, width = input.shape
>       fill_value = torch.full((batch_size, channels, 1, 1), self.value, device=input.device, dtype=input.dtype)
E       NameError: name 'torch' is not defined

../publishablew/kornia/kornia/kornia/augmentation/_2d/intensity/erasing.py:62: NameError
_ TestRectangleRandomErasing.test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range1] _

self = <test_augmentation.TestRectangleRandomErasing object at 0x7ed06ef68d30>
batch_shape = (2, 3, 11, 7), erase_scale_range = (1.0, 1.0)
aspect_ratio_range = (10.0, 10.0)

    @pytest.mark.parametrize("erase_scale_range", [(0.001, 0.001), (1.0, 1.0)])
    @pytest.mark.parametrize("aspect_ratio_range", [(0.1, 0.1), (10.0, 10.0)])
    @pytest.mark.parametrize("batch_shape", [(1, 4, 8, 15), (2, 3, 11, 7)])
    def test_random_rectangle_erasing_shape(self, batch_shape, erase_scale_range, aspect_ratio_range):
        input = torch.rand(batch_shape)
        rand_rec = RandomErasing(erase_scale_range, aspect_ratio_range, p=1.0)
>       assert rand_rec(input).shape == batch_shape

../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py:2494: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/core/module.py:274: in __call__
    _output_image = decorated_forward(*inputs, **kwargs)
../publishablew/kornia/kornia/kornia/core/module.py:63: in wrapper
    tensor_outputs = func(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1736: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1747: in _call_impl
    return forward_call(*args, **kwargs)
../publishablew/kornia/kornia/kornia/augmentation/base.py:238: in forward
    output = self.apply_func(in_tensor, params, flags)
../publishablew/kornia/kornia/kornia/augmentation/_2d/base.py:129: in apply_func
    output = self.transform_inputs(in_tensor, params, flags, trans_matrix)
../publishablew/kornia/kornia/kornia/augmentation/base.py:297: in transform_inputs
    output = self.apply_transform(in_tensor, params, flags, transform=transform)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = RandomErasing(scale=(1.0, 1.0), resize_to=(10.0, 10.0), value=0.0, p=1.0, p_batch=1.0, same_on_batch=False)
input = tensor([[[[0.5808, 0.7701, 0.0628, 0.5876, 0.4278, 0.7933, 0.2727],
          [0.6490, 0.7015, 0.7512, 0.3285, 0.6609,...0.5549, 0.7383, 0.8578, 0.0330, 0.9978, 0.3743],
          [0.7037, 0.1895, 0.1152, 0.1614, 0.7947, 0.2534, 0.7907]]]])
params = {'batch_prob': tensor([1., 1.]), 'forward_input_shape': tensor([ 2,  3, 11,  7]), 'heights': tensor([11., 11.]), 'values': tensor([0., 0.]), ...}
flags = {}
transform = tensor([[[1., 0., 0.],
         [0., 1., 0.],
         [0., 0., 1.]],

        [[1., 0., 0.],
         [0., 1., 0.],
         [0., 0., 1.]]])

    def apply_transform(self, input: Tensor, params: Dict[str, Tensor], flags: Dict[str, Any], transform: Optional[Tensor]=None) -> Tensor:
        batch_size, channels, height, width = input.shape
>       fill_value = torch.full((batch_size, channels, 1, 1), self.value, device=input.device, dtype=input.dtype)
E       NameError: name 'torch' is not defined

../publishablew/kornia/kornia/kornia/augmentation/_2d/intensity/erasing.py:62: NameError
_ TestRectangleRandomErasing.test_same_on_batch[shape0-aspect_ratio_range0-erase_scale_range0] _

self = <test_augmentation.TestRectangleRandomErasing object at 0x7ed06ef69c00>
shape = (3, 11, 7), erase_scale_range = (0.001, 0.001)
aspect_ratio_range = (0.1, 0.1)

    @pytest.mark.parametrize("erase_scale_range", [(0.001, 0.001), (1.0, 1.0)])
    @pytest.mark.parametrize("aspect_ratio_range", [(0.1, 0.1), (10.0, 10.0)])
    @pytest.mark.parametrize("shape", [(3, 11, 7)])
    def test_same_on_batch(self, shape, erase_scale_range, aspect_ratio_range):
        f = RandomErasing(erase_scale_range, aspect_ratio_range, same_on_batch=True, p=0.5)
        input = torch.rand(shape).unsqueeze(dim=0).repeat(2, 1, 1, 1)
>       res = f(input)

../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py:2510: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/core/module.py:274: in __call__
    _output_image = decorated_forward(*inputs, **kwargs)
../publishablew/kornia/kornia/kornia/core/module.py:63: in wrapper
    tensor_outputs = func(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1736: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1747: in _call_impl
    return forward_call(*args, **kwargs)
../publishablew/kornia/kornia/kornia/augmentation/base.py:238: in forward
    output = self.apply_func(in_tensor, params, flags)
../publishablew/kornia/kornia/kornia/augmentation/_2d/base.py:129: in apply_func
    output = self.transform_inputs(in_tensor, params, flags, trans_matrix)
../publishablew/kornia/kornia/kornia/augmentation/base.py:297: in transform_inputs
    output = self.apply_transform(in_tensor, params, flags, transform=transform)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = RandomErasing(scale=(0.001, 0.001), resize_to=(0.1, 0.1), value=0.0, p=0.5, p_batch=1.0, same_on_batch=True)
input = tensor([[[[8.8264e-01, 7.3749e-01, 2.2842e-01, 6.4655e-01, 2.7969e-01,
           2.5390e-01, 6.5872e-01],
          [...188e-01],
          [5.7041e-01, 9.8475e-01, 1.8643e-01, 2.3071e-01, 8.3879e-01,
           7.5189e-01, 8.9348e-01]]]])
params = {'batch_prob': tensor([1., 1.]), 'forward_input_shape': tensor([ 2,  3, 11,  7]), 'heights': tensor([1., 1.]), 'values': tensor([0., 0.]), ...}
flags = {}
transform = tensor([[[1., 0., 0.],
         [0., 1., 0.],
         [0., 0., 1.]],

        [[1., 0., 0.],
         [0., 1., 0.],
         [0., 0., 1.]]])

    def apply_transform(self, input: Tensor, params: Dict[str, Tensor], flags: Dict[str, Any], transform: Optional[Tensor]=None) -> Tensor:
        batch_size, channels, height, width = input.shape
>       fill_value = torch.full((batch_size, channels, 1, 1), self.value, device=input.device, dtype=input.dtype)
E       NameError: name 'torch' is not defined

../publishablew/kornia/kornia/kornia/augmentation/_2d/intensity/erasing.py:62: NameError
_ TestRectangleRandomErasing.test_same_on_batch[shape0-aspect_ratio_range1-erase_scale_range0] _

self = <test_augmentation.TestRectangleRandomErasing object at 0x7ed06ef69e10>
shape = (3, 11, 7), erase_scale_range = (0.001, 0.001)
aspect_ratio_range = (10.0, 10.0)

    @pytest.mark.parametrize("erase_scale_range", [(0.001, 0.001), (1.0, 1.0)])
    @pytest.mark.parametrize("aspect_ratio_range", [(0.1, 0.1), (10.0, 10.0)])
    @pytest.mark.parametrize("shape", [(3, 11, 7)])
    def test_same_on_batch(self, shape, erase_scale_range, aspect_ratio_range):
        f = RandomErasing(erase_scale_range, aspect_ratio_range, same_on_batch=True, p=0.5)
        input = torch.rand(shape).unsqueeze(dim=0).repeat(2, 1, 1, 1)
>       res = f(input)

../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py:2510: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/core/module.py:274: in __call__
    _output_image = decorated_forward(*inputs, **kwargs)
../publishablew/kornia/kornia/kornia/core/module.py:63: in wrapper
    tensor_outputs = func(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1736: in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/nn/modules/module.py:1747: in _call_impl
    return forward_call(*args, **kwargs)
../publishablew/kornia/kornia/kornia/augmentation/base.py:238: in forward
    output = self.apply_func(in_tensor, params, flags)
../publishablew/kornia/kornia/kornia/augmentation/_2d/base.py:129: in apply_func
    output = self.transform_inputs(in_tensor, params, flags, trans_matrix)
../publishablew/kornia/kornia/kornia/augmentation/base.py:297: in transform_inputs
    output = self.apply_transform(in_tensor, params, flags, transform=transform)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = RandomErasing(scale=(0.001, 0.001), resize_to=(10.0, 10.0), value=0.0, p=0.5, p_batch=1.0, same_on_batch=True)
input = tensor([[[[0.7312, 0.2482, 0.5167, 0.6376, 0.5724, 0.6040, 0.6138],
          [0.6325, 0.7706, 0.2463, 0.9137, 0.3716,...0.1784, 0.2652, 0.5974, 0.8549, 0.5801, 0.0725],
          [0.1595, 0.6854, 0.3629, 0.6366, 0.9360, 0.1742, 0.0682]]]])
params = {'batch_prob': tensor([1., 1.]), 'forward_input_shape': tensor([ 2,  3, 11,  7]), 'heights': tensor([1., 1.]), 'values': tensor([0., 0.]), ...}
flags = {}
transform = tensor([[[1., 0., 0.],
         [0., 1., 0.],
         [0., 0., 1.]],

        [[1., 0., 0.],
         [0., 1., 0.],
         [0., 0., 1.]]])

    def apply_transform(self, input: Tensor, params: Dict[str, Tensor], flags: Dict[str, Any], transform: Optional[Tensor]=None) -> Tensor:
        batch_size, channels, height, width = input.shape
>       fill_value = torch.full((batch_size, channels, 1, 1), self.value, device=input.device, dtype=input.dtype)
E       NameError: name 'torch' is not defined

../publishablew/kornia/kornia/kornia/augmentation/_2d/intensity/erasing.py:62: NameError
=========================== short test summary info ============================
FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range0]
FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range1]
FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range0]
FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range1]
FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range0]
FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range1]
FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range0]
FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range1]
FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range0-erase_scale_range0]
FAILED ../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range1-erase_scale_range0]
=================== 10 failed, 10 passed, 1 skipped in 1.74s ===================


Final Test Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python3
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'jit', 'inductor', 'openxla', 'tvm', 'cudagraphs', 'onnxrt', None}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 21 items

../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range0] PASSED [  4%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range1] PASSED [  9%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range0] PASSED [ 14%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range1] PASSED [ 19%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range0] PASSED [ 23%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range1] PASSED [ 28%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range0] PASSED [ 33%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range1] PASSED [ 38%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range0] PASSED [ 42%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range1] PASSED [ 47%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range0] PASSED [ 52%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range1] PASSED [ 57%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range0] PASSED [ 61%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range1] PASSED [ 66%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range0] PASSED [ 71%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range1] PASSED [ 76%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range0-erase_scale_range0] PASSED [ 80%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range0-erase_scale_range1] PASSED [ 85%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range1-erase_scale_range0] PASSED [ 90%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range1-erase_scale_range1] PASSED [ 95%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_gradcheck[cpu] SKIPPED [100%]

======================== 20 passed, 1 skipped in 0.23s =========================


Initial Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python3
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'openxla', 'cudagraphs', 'jit', 'inductor', 'tvm', 'onnxrt', None}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 21 items

../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range0] PASSED [  4%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range1] PASSED [  9%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range0] PASSED [ 14%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range1] PASSED [ 19%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range0] PASSED [ 23%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range1] PASSED [ 28%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range0] PASSED [ 33%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_random_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range1] PASSED [ 38%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range0] PASSED [ 42%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape0-aspect_ratio_range0-erase_scale_range1] PASSED [ 47%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range0] PASSED [ 52%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape0-aspect_ratio_range1-erase_scale_range1] PASSED [ 57%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range0] PASSED [ 61%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape1-aspect_ratio_range0-erase_scale_range1] PASSED [ 66%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range0] PASSED [ 71%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_no_rectangle_erasing_shape[batch_shape1-aspect_ratio_range1-erase_scale_range1] PASSED [ 76%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range0-erase_scale_range0] PASSED [ 80%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range0-erase_scale_range1] PASSED [ 85%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range1-erase_scale_range0] PASSED [ 90%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_same_on_batch[shape0-aspect_ratio_range1-erase_scale_range1] PASSED [ 95%]
../publishablew/kornia/kornia/tests/augmentation/test_augmentation.py::TestRectangleRandomErasing::test_gradcheck[cpu] SKIPPED [100%]

======================== 20 passed, 1 skipped in 0.33s =========================
