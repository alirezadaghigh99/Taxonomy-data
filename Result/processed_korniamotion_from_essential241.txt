output file:
processed_korniamotion_from_essential241.json
function:
motion_from_essential
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape1] FAILED', 'FAILED ../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape1]', '../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape3] FAILED', '../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape2] FAILED', 'FAILED ../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape3]', 'FAILED ../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape2]'}

All Test Cases On Generated code:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'jit', 'onnxrt', 'cudagraphs', 'tvm', 'inductor', 'openxla', None}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 7 items

../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_smoke[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape0] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape1] FAILED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape2] FAILED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape3] FAILED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_two_view[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_gradcheck[cpu] PASSED

=================================== FAILURES ===================================
_________ TestMotionFromEssential.test_shape[cpu-float32-batch_shape1] _________

self = <test_essential.TestMotionFromEssential object at 0x72170f302830>
batch_shape = (2, 3, 3), device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.parametrize("batch_shape", [(1, 3, 3), (2, 3, 3), (2, 1, 3, 3), (3, 2, 1, 3, 3)])
    def test_shape(self, batch_shape, device, dtype):
        E_mat = torch.rand(batch_shape, device=device, dtype=dtype)
>       Rs, Ts = epi.motion_from_essential(E_mat)

../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py:374: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/geometry/epipolar/essential.py:241: in motion_from_essential
    return motion_from_essential(E_mat)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

E_mat = tensor([[[0.3042, 0.2693, 0.5934],
         [0.1138, 0.7819, 0.2688],
         [0.7396, 0.5367, 0.8466]],

        [[0.4811, 0.6935, 0.4186],
         [0.4904, 0.1459, 0.8400],
         [0.9253, 0.6876, 0.4158]]])

    def motion_from_essential(E_mat: torch.Tensor):
        assert E_mat.shape[-2:] == (3, 3), 'E_mat must have shape (*, 3, 3)'
        W = torch.tensor([[0, -1, 0], [1, 0, 0], [0, 0, 1]], dtype=E_mat.dtype, device=E_mat.device)
        Z = torch.tensor([[0, 1, 0], [-1, 0, 0], [0, 0, 0]], dtype=E_mat.dtype, device=E_mat.device)
        U, _, Vt = torch.linalg.svd(E_mat)
>       if torch.det(U @ Vt) < 0:
E       RuntimeError: Boolean value of Tensor with more than one value is ambiguous

../publishablew/kornia/kornia/kornia/geometry/epipolar/temp.py:18: RuntimeError
_________ TestMotionFromEssential.test_shape[cpu-float32-batch_shape2] _________

self = <test_essential.TestMotionFromEssential object at 0x72170f302b90>
batch_shape = (2, 1, 3, 3), device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.parametrize("batch_shape", [(1, 3, 3), (2, 3, 3), (2, 1, 3, 3), (3, 2, 1, 3, 3)])
    def test_shape(self, batch_shape, device, dtype):
        E_mat = torch.rand(batch_shape, device=device, dtype=dtype)
>       Rs, Ts = epi.motion_from_essential(E_mat)

../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py:374: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/geometry/epipolar/essential.py:241: in motion_from_essential
    return motion_from_essential(E_mat)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

E_mat = tensor([[[[7.5054e-01, 4.4948e-01, 3.5394e-01],
          [3.1578e-01, 7.9011e-01, 3.1141e-01],
          [4.7851e-04,...19e-05, 8.7990e-01],
          [3.4244e-02, 8.5784e-01, 3.9649e-02],
          [1.2727e-01, 6.4423e-01, 8.6870e-01]]]])

    def motion_from_essential(E_mat: torch.Tensor):
        assert E_mat.shape[-2:] == (3, 3), 'E_mat must have shape (*, 3, 3)'
        W = torch.tensor([[0, -1, 0], [1, 0, 0], [0, 0, 1]], dtype=E_mat.dtype, device=E_mat.device)
        Z = torch.tensor([[0, 1, 0], [-1, 0, 0], [0, 0, 0]], dtype=E_mat.dtype, device=E_mat.device)
        U, _, Vt = torch.linalg.svd(E_mat)
>       if torch.det(U @ Vt) < 0:
E       RuntimeError: Boolean value of Tensor with more than one value is ambiguous

../publishablew/kornia/kornia/kornia/geometry/epipolar/temp.py:18: RuntimeError
_________ TestMotionFromEssential.test_shape[cpu-float32-batch_shape3] _________

self = <test_essential.TestMotionFromEssential object at 0x72170f302c50>
batch_shape = (3, 2, 1, 3, 3), device = device(type='cpu')
dtype = torch.float32

    @pytest.mark.parametrize("batch_shape", [(1, 3, 3), (2, 3, 3), (2, 1, 3, 3), (3, 2, 1, 3, 3)])
    def test_shape(self, batch_shape, device, dtype):
        E_mat = torch.rand(batch_shape, device=device, dtype=dtype)
>       Rs, Ts = epi.motion_from_essential(E_mat)

../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py:374: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/geometry/epipolar/essential.py:241: in motion_from_essential
    return motion_from_essential(E_mat)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

E_mat = tensor([[[[[0.6381, 0.1611, 0.5227],
           [0.3463, 0.7738, 0.5693],
           [0.3373, 0.8244, 0.2166]]],


   ...],


         [[[0.4691, 0.9585, 0.7856],
           [0.3692, 0.7367, 0.6734],
           [0.2133, 0.0207, 0.2696]]]]])

    def motion_from_essential(E_mat: torch.Tensor):
        assert E_mat.shape[-2:] == (3, 3), 'E_mat must have shape (*, 3, 3)'
        W = torch.tensor([[0, -1, 0], [1, 0, 0], [0, 0, 1]], dtype=E_mat.dtype, device=E_mat.device)
        Z = torch.tensor([[0, 1, 0], [-1, 0, 0], [0, 0, 0]], dtype=E_mat.dtype, device=E_mat.device)
        U, _, Vt = torch.linalg.svd(E_mat)
>       if torch.det(U @ Vt) < 0:
E       RuntimeError: Boolean value of Tensor with more than one value is ambiguous

../publishablew/kornia/kornia/kornia/geometry/epipolar/temp.py:18: RuntimeError
=========================== short test summary info ============================
FAILED ../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape1]
FAILED ../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape2]
FAILED ../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape3]
========================= 3 failed, 4 passed in 0.42s ==========================


Final Test Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'tvm', 'inductor', None, 'openxla', 'onnxrt', 'jit', 'cudagraphs'}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 7 items

../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_smoke[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape0] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape1] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape2] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape3] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_two_view[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_gradcheck[cpu] PASSED

============================== 7 passed in 0.18s ===============================


Initial Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'jit', 'inductor', 'tvm', 'openxla', 'onnxrt', 'cudagraphs', None}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 7 items

../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_smoke[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape0] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape1] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape2] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_shape[cpu-float32-batch_shape3] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_two_view[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_essential.py::TestMotionFromEssential::test_gradcheck[cpu] PASSED

============================== 7 passed in 0.23s ===============================
