output file:
processed_visiondraw_segmentation_masks168.json
function:
draw_segmentation_masks
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-blue]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-blue]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-blue] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors3]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors4] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-#FF00FF] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-#FF00FF]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-blue]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors4] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors5] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-None] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-blue]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-None]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-colors4] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors5]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-blue] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors4]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-None] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors3]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors5]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-None] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-None]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors4]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors5] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-colors4]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-#FF00FF] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-#FF00FF] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-blue] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-colors5] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-None] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors3] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-blue] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors5] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors3]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors4] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-#FF00FF] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors3] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors3] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors4]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors3]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors3]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-#FF00FF]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors4] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-None]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors4]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-blue]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-None]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors5] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-colors4]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors5]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-#FF00FF]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-colors5] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors5]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors5] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-None] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-blue] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-blue] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-#FF00FF]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors5]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-blue]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-#FF00FF] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-#FF00FF] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-colors5]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors3] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-blue] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors3]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-colors5]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-None]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors4] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-None] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-#FF00FF]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors4]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-colors4] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-blue]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-blue] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-#FF00FF]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-blue]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors5] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors4]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors4] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-#FF00FF] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-None]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-#FF00FF] FAILED', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors3] FAILED', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-#FF00FF]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-#FF00FF]', 'FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors5]', '../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors3] FAILED'}

All Test Cases On Generated code:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/vision/vision/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/vision/vision
configfile: pytest.ini
plugins: mock-3.14.0
collecting ... collected 48 items

../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-blue] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-#FF00FF] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-colors4] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-colors5] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-None] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-blue] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-#FF00FF] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors3] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors4] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors5] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-None] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-blue] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-#FF00FF] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors3] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors4] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors5] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-None] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-blue] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-#FF00FF] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors3] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors4] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors5] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-blue] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-#FF00FF] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-colors4] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-colors5] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-None] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-blue] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-#FF00FF] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors3] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors4] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors5] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-None] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-blue] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-#FF00FF] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors3] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors4] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors5] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-None] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-blue] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-#FF00FF] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors3] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors4] FAILED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors5] FAILED

=================================== FAILURES ===================================
___________________ test_draw_segmentation_masks[cpu-0-blue] ___________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   TypeError: new(): invalid data type 'str'
_________________ test_draw_segmentation_masks[cpu-0-#FF00FF] __________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   TypeError: new(): invalid data type 'str'
_________________ test_draw_segmentation_masks[cpu-0-colors4] __________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   ValueError: too many dimensions 'str'
_________________ test_draw_segmentation_masks[cpu-0-colors5] __________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   ValueError: too many dimensions 'str'
__________________ test_draw_segmentation_masks[cpu-0.5-None] __________________
../publishablew/vision/vision/test/test_utils.py:249: in test_draw_segmentation_masks
    assert out.dtype == dtype
E   assert torch.float32 == torch.uint8
E    +  where torch.float32 = tensor([[[222., 187., 212.,  ...,  37.,  75., 115.],\n         [ 72.,   2., 245.,  ..., 212.,  36., 171.],\n         [155., 216.,  76.,  ..., 191., 219.,  48.],\n         ...,\n         [ 71., 194.,  47.,  ..., 186., 214.,  78.],\n         [226., 150., 144.,  ..., 161., 225.,  61.],\n         [213.,  14.,   9.,  ...,  90.,  39., 248.]],\n\n        [[ 14.,  21., 243.,  ...,  19., 148., 134.],\n         [119., 106.,  22.,  ..., 137.,   0., 195.],\n         [151., 103., 133.,  ..., 217., 127.,  79.],\n         ...,\n         [ 88.,   3.,  13.,  ..., 206., 246.,   4.],\n         [ 83.,  99., 150.,  ..., 229., 226.,  30.],\n         [244.,  56.,   0.,  ..., 177., 193., 164.]],\n\n        [[238., 230., 188.,  ...,  94.,  74., 124.],\n         [ 71.,   5., 247.,  ..., 143., 137., 209.],\n         [ 60., 172., 155.,  ..., 237., 145., 242.],\n         ...,\n         [187., 235., 111.,  ..., 253., 127.,  73.],\n         [249., 139.,  39.,  ...,   7.,  16., 143.],\n         [  1., 232., 150.,  ..., 237.,  54., 203.]]]).dtype
__________________ test_draw_segmentation_masks[cpu-0.5-blue] __________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   TypeError: new(): invalid data type 'str'
________________ test_draw_segmentation_masks[cpu-0.5-#FF00FF] _________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   TypeError: new(): invalid data type 'str'
________________ test_draw_segmentation_masks[cpu-0.5-colors3] _________________
../publishablew/vision/vision/test/test_utils.py:249: in test_draw_segmentation_masks
    assert out.dtype == dtype
E   assert torch.float32 == torch.uint8
E    +  where torch.float32 = tensor([[[222., 187., 212.,  ...,  37.,  75., 115.],\n         [ 72.,   2., 245.,  ..., 212.,  36., 171.],\n         [155., 216.,  76.,  ..., 191., 219.,  48.],\n         ...,\n         [ 71., 194.,  47.,  ..., 186., 214.,  78.],\n         [226., 150., 144.,  ..., 161., 225.,  61.],\n         [213.,  14.,   9.,  ...,  90.,  39., 248.]],\n\n        [[ 14.,  21., 243.,  ...,  19., 148., 134.],\n         [119., 106.,  22.,  ..., 137.,   0., 195.],\n         [151., 103., 133.,  ..., 217., 127.,  79.],\n         ...,\n         [ 88.,   3.,  13.,  ..., 206., 246.,   4.],\n         [ 83.,  99., 150.,  ..., 229., 226.,  30.],\n         [244.,  56.,   0.,  ..., 177., 193., 164.]],\n\n        [[238., 230., 188.,  ...,  94.,  74., 124.],\n         [ 71.,   5., 247.,  ..., 143., 137., 209.],\n         [ 60., 172., 155.,  ..., 237., 145., 242.],\n         ...,\n         [187., 235., 111.,  ..., 253., 127.,  73.],\n         [249., 139.,  39.,  ...,   7.,  16., 143.],\n         [  1., 232., 150.,  ..., 237.,  54., 203.]]]).dtype
________________ test_draw_segmentation_masks[cpu-0.5-colors4] _________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   ValueError: too many dimensions 'str'
________________ test_draw_segmentation_masks[cpu-0.5-colors5] _________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   ValueError: too many dimensions 'str'
__________________ test_draw_segmentation_masks[cpu-0.7-None] __________________
../publishablew/vision/vision/test/test_utils.py:249: in test_draw_segmentation_masks
    assert out.dtype == dtype
E   assert torch.float32 == torch.uint8
E    +  where torch.float32 = tensor([[[222., 187., 212.,  ...,  37.,  75., 115.],\n         [ 72.,   2., 245.,  ..., 212.,  36., 171.],\n         [155., 216.,  76.,  ..., 191., 219.,  48.],\n         ...,\n         [ 71., 194.,  47.,  ..., 186., 214.,  78.],\n         [226., 150., 144.,  ..., 161., 225.,  61.],\n         [213.,  14.,   9.,  ...,  90.,  39., 248.]],\n\n        [[ 14.,  21., 243.,  ...,  19., 148., 134.],\n         [119., 106.,  22.,  ..., 137.,   0., 195.],\n         [151., 103., 133.,  ..., 217., 127.,  79.],\n         ...,\n         [ 88.,   3.,  13.,  ..., 206., 246.,   4.],\n         [ 83.,  99., 150.,  ..., 229., 226.,  30.],\n         [244.,  56.,   0.,  ..., 177., 193., 164.]],\n\n        [[238., 230., 188.,  ...,  94.,  74., 124.],\n         [ 71.,   5., 247.,  ..., 143., 137., 209.],\n         [ 60., 172., 155.,  ..., 237., 145., 242.],\n         ...,\n         [187., 235., 111.,  ..., 253., 127.,  73.],\n         [249., 139.,  39.,  ...,   7.,  16., 143.],\n         [  1., 232., 150.,  ..., 237.,  54., 203.]]]).dtype
__________________ test_draw_segmentation_masks[cpu-0.7-blue] __________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   TypeError: new(): invalid data type 'str'
________________ test_draw_segmentation_masks[cpu-0.7-#FF00FF] _________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   TypeError: new(): invalid data type 'str'
________________ test_draw_segmentation_masks[cpu-0.7-colors3] _________________
../publishablew/vision/vision/test/test_utils.py:249: in test_draw_segmentation_masks
    assert out.dtype == dtype
E   assert torch.float32 == torch.uint8
E    +  where torch.float32 = tensor([[[222., 187., 212.,  ...,  37.,  75., 115.],\n         [ 72.,   2., 245.,  ..., 212.,  36., 171.],\n         [155., 216.,  76.,  ..., 191., 219.,  48.],\n         ...,\n         [ 71., 194.,  47.,  ..., 186., 214.,  78.],\n         [226., 150., 144.,  ..., 161., 225.,  61.],\n         [213.,  14.,   9.,  ...,  90.,  39., 248.]],\n\n        [[ 14.,  21., 243.,  ...,  19., 148., 134.],\n         [119., 106.,  22.,  ..., 137.,   0., 195.],\n         [151., 103., 133.,  ..., 217., 127.,  79.],\n         ...,\n         [ 88.,   3.,  13.,  ..., 206., 246.,   4.],\n         [ 83.,  99., 150.,  ..., 229., 226.,  30.],\n         [244.,  56.,   0.,  ..., 177., 193., 164.]],\n\n        [[238., 230., 188.,  ...,  94.,  74., 124.],\n         [ 71.,   5., 247.,  ..., 143., 137., 209.],\n         [ 60., 172., 155.,  ..., 237., 145., 242.],\n         ...,\n         [187., 235., 111.,  ..., 253., 127.,  73.],\n         [249., 139.,  39.,  ...,   7.,  16., 143.],\n         [  1., 232., 150.,  ..., 237.,  54., 203.]]]).dtype
________________ test_draw_segmentation_masks[cpu-0.7-colors4] _________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   ValueError: too many dimensions 'str'
________________ test_draw_segmentation_masks[cpu-0.7-colors5] _________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   ValueError: too many dimensions 'str'
___________________ test_draw_segmentation_masks[cpu-1-None] ___________________
../publishablew/vision/vision/test/test_utils.py:268: in test_draw_segmentation_masks
    assert (out[:, mask & ~overlap] == color[:, None]).all()
E   AssertionError: assert tensor(False)
E    +  where tensor(False) = <built-in method all of Tensor object at 0x765d2b9470b0>()
E    +    where <built-in method all of Tensor object at 0x765d2b9470b0> = tensor([[24, ...e=torch.uint8) == tensor([[0],\n...e=torch.uint8)
E         
E         Full diff:
E         - tensor([[0],
E         -         [0],
E         + tensor([[24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
E         +          24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
E         +          24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,...
E         
E         ...Full output truncated (15 lines hidden), use '-vv' to show.all
___________________ test_draw_segmentation_masks[cpu-1-blue] ___________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   TypeError: new(): invalid data type 'str'
_________________ test_draw_segmentation_masks[cpu-1-#FF00FF] __________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   TypeError: new(): invalid data type 'str'
_________________ test_draw_segmentation_masks[cpu-1-colors3] __________________
../publishablew/vision/vision/test/test_utils.py:276: in test_draw_segmentation_masks
    torch.testing.assert_close(out[:, overlap], interpolated_overlap, rtol=0.0, atol=1.0)
E   AssertionError: Tensor-likes are not close!
E   
E   Mismatched elements: 50 / 75 (66.7%)
E   Greatest absolute difference: 122 at index (2, 0) (up to 1.0 allowed)
E   Greatest relative difference: inf at index (1, 0) (up to 0.0 allowed)
_________________ test_draw_segmentation_masks[cpu-1-colors4] __________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   ValueError: too many dimensions 'str'
_________________ test_draw_segmentation_masks[cpu-1-colors5] __________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   ValueError: too many dimensions 'str'
__________________ test_draw_segmentation_masks[cuda-0-blue] ___________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   TypeError: new(): invalid data type 'str'
_________________ test_draw_segmentation_masks[cuda-0-#FF00FF] _________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   TypeError: new(): invalid data type 'str'
_________________ test_draw_segmentation_masks[cuda-0-colors4] _________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   ValueError: too many dimensions 'str'
_________________ test_draw_segmentation_masks[cuda-0-colors5] _________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   ValueError: too many dimensions 'str'
_________________ test_draw_segmentation_masks[cuda-0.5-None] __________________
../publishablew/vision/vision/test/test_utils.py:249: in test_draw_segmentation_masks
    assert out.dtype == dtype
E   AssertionError: assert torch.float32 == torch.uint8
E    +  where torch.float32 = tensor([[[ 14., 176.,  30.,  ..., 180., 127.,  38.],\n         [242.,  12., 158.,  ..., 252.,   6., 250.],\n         [208., 244.,  63.,  ..., 136., 189.,  30.],\n         ...,\n         [ 79.,  31., 255.,  ...,  45., 204., 248.],\n         [  9.,  71., 165.,  ...,  99., 224., 216.],\n         [ 28., 119., 159.,  ..., 170.,  80.,  98.]],\n\n        [[ 84.,  52.,  44.,  ..., 249.,  39.,  67.],\n         [212., 145.,  25.,  ...,  86., 243.,  99.],\n         [ 61.,  47., 174.,  ..., 117., 118.,  67.],\n         ...,\n         [ 24., 126., 254.,  ..., 132., 241., 144.],\n         [ 12., 136., 163.,  ...,  76.,  92.,  27.],\n         [247., 204.,   2.,  ..., 230., 127.,  50.]],\n\n        [[229., 224.,  30.,  ...,  48.,  23., 133.],\n         [ 92.,  72.,  51.,  ...,  30.,  16.,  97.],\n         [167., 124., 128.,  ..., 116.,  94., 219.],\n         ...,\n         [ 98., 219., 141.,  ...,  94.,  11., 101.],\n         [146., 144.,  19.,  ..., 115., 234.,  41.],\n         [222., 205., 142.,  ..., 240., 232., 110.]]], device='cuda:0').dtype
_________________ test_draw_segmentation_masks[cuda-0.5-blue] __________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   TypeError: new(): invalid data type 'str'
________________ test_draw_segmentation_masks[cuda-0.5-#FF00FF] ________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   TypeError: new(): invalid data type 'str'
________________ test_draw_segmentation_masks[cuda-0.5-colors3] ________________
../publishablew/vision/vision/test/test_utils.py:249: in test_draw_segmentation_masks
    assert out.dtype == dtype
E   AssertionError: assert torch.float32 == torch.uint8
E    +  where torch.float32 = tensor([[[ 14., 176.,  30.,  ..., 180., 127.,  38.],\n         [242.,  12., 158.,  ..., 252.,   6., 250.],\n         [208., 244.,  63.,  ..., 136., 189.,  30.],\n         ...,\n         [ 79.,  31., 255.,  ...,  45., 204., 248.],\n         [  9.,  71., 165.,  ...,  99., 224., 216.],\n         [ 28., 119., 159.,  ..., 170.,  80.,  98.]],\n\n        [[ 84.,  52.,  44.,  ..., 249.,  39.,  67.],\n         [212., 145.,  25.,  ...,  86., 243.,  99.],\n         [ 61.,  47., 174.,  ..., 117., 118.,  67.],\n         ...,\n         [ 24., 126., 254.,  ..., 132., 241., 144.],\n         [ 12., 136., 163.,  ...,  76.,  92.,  27.],\n         [247., 204.,   2.,  ..., 230., 127.,  50.]],\n\n        [[229., 224.,  30.,  ...,  48.,  23., 133.],\n         [ 92.,  72.,  51.,  ...,  30.,  16.,  97.],\n         [167., 124., 128.,  ..., 116.,  94., 219.],\n         ...,\n         [ 98., 219., 141.,  ...,  94.,  11., 101.],\n         [146., 144.,  19.,  ..., 115., 234.,  41.],\n         [222., 205., 142.,  ..., 240., 232., 110.]]], device='cuda:0').dtype
________________ test_draw_segmentation_masks[cuda-0.5-colors4] ________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   ValueError: too many dimensions 'str'
________________ test_draw_segmentation_masks[cuda-0.5-colors5] ________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   ValueError: too many dimensions 'str'
_________________ test_draw_segmentation_masks[cuda-0.7-None] __________________
../publishablew/vision/vision/test/test_utils.py:249: in test_draw_segmentation_masks
    assert out.dtype == dtype
E   AssertionError: assert torch.float32 == torch.uint8
E    +  where torch.float32 = tensor([[[ 14., 176.,  30.,  ..., 180., 127.,  38.],\n         [242.,  12., 158.,  ..., 252.,   6., 250.],\n         [208., 244.,  63.,  ..., 136., 189.,  30.],\n         ...,\n         [ 79.,  31., 255.,  ...,  45., 204., 248.],\n         [  9.,  71., 165.,  ...,  99., 224., 216.],\n         [ 28., 119., 159.,  ..., 170.,  80.,  98.]],\n\n        [[ 84.,  52.,  44.,  ..., 249.,  39.,  67.],\n         [212., 145.,  25.,  ...,  86., 243.,  99.],\n         [ 61.,  47., 174.,  ..., 117., 118.,  67.],\n         ...,\n         [ 24., 126., 254.,  ..., 132., 241., 144.],\n         [ 12., 136., 163.,  ...,  76.,  92.,  27.],\n         [247., 204.,   2.,  ..., 230., 127.,  50.]],\n\n        [[229., 224.,  30.,  ...,  48.,  23., 133.],\n         [ 92.,  72.,  51.,  ...,  30.,  16.,  97.],\n         [167., 124., 128.,  ..., 116.,  94., 219.],\n         ...,\n         [ 98., 219., 141.,  ...,  94.,  11., 101.],\n         [146., 144.,  19.,  ..., 115., 234.,  41.],\n         [222., 205., 142.,  ..., 240., 232., 110.]]], device='cuda:0').dtype
_________________ test_draw_segmentation_masks[cuda-0.7-blue] __________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   TypeError: new(): invalid data type 'str'
________________ test_draw_segmentation_masks[cuda-0.7-#FF00FF] ________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   TypeError: new(): invalid data type 'str'
________________ test_draw_segmentation_masks[cuda-0.7-colors3] ________________
../publishablew/vision/vision/test/test_utils.py:249: in test_draw_segmentation_masks
    assert out.dtype == dtype
E   AssertionError: assert torch.float32 == torch.uint8
E    +  where torch.float32 = tensor([[[ 14., 176.,  30.,  ..., 180., 127.,  38.],\n         [242.,  12., 158.,  ..., 252.,   6., 250.],\n         [208., 244.,  63.,  ..., 136., 189.,  30.],\n         ...,\n         [ 79.,  31., 255.,  ...,  45., 204., 248.],\n         [  9.,  71., 165.,  ...,  99., 224., 216.],\n         [ 28., 119., 159.,  ..., 170.,  80.,  98.]],\n\n        [[ 84.,  52.,  44.,  ..., 249.,  39.,  67.],\n         [212., 145.,  25.,  ...,  86., 243.,  99.],\n         [ 61.,  47., 174.,  ..., 117., 118.,  67.],\n         ...,\n         [ 24., 126., 254.,  ..., 132., 241., 144.],\n         [ 12., 136., 163.,  ...,  76.,  92.,  27.],\n         [247., 204.,   2.,  ..., 230., 127.,  50.]],\n\n        [[229., 224.,  30.,  ...,  48.,  23., 133.],\n         [ 92.,  72.,  51.,  ...,  30.,  16.,  97.],\n         [167., 124., 128.,  ..., 116.,  94., 219.],\n         ...,\n         [ 98., 219., 141.,  ...,  94.,  11., 101.],\n         [146., 144.,  19.,  ..., 115., 234.,  41.],\n         [222., 205., 142.,  ..., 240., 232., 110.]]], device='cuda:0').dtype
________________ test_draw_segmentation_masks[cuda-0.7-colors4] ________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   ValueError: too many dimensions 'str'
________________ test_draw_segmentation_masks[cuda-0.7-colors5] ________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   ValueError: too many dimensions 'str'
__________________ test_draw_segmentation_masks[cuda-1-None] ___________________
../publishablew/vision/vision/test/test_utils.py:268: in test_draw_segmentation_masks
    assert (out[:, mask & ~overlap] == color[:, None]).all()
E   AssertionError: assert tensor(False, device='cuda:0')
E    +  where tensor(False, device='cuda:0') = <built-in method all of Tensor object at 0x765d2b940170>()
E    +    where <built-in method all of Tensor object at 0x765d2b940170> = tensor([[24, ...e=torch.uint8) == tensor([[0],\n...e=torch.uint8)
E         
E         Full diff:
E         - tensor([[0],
E         -         [0],
E         + tensor([[24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
E         +          24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
E         +          24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,...
E         
E         ...Full output truncated (15 lines hidden), use '-vv' to show.all
__________________ test_draw_segmentation_masks[cuda-1-blue] ___________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   TypeError: new(): invalid data type 'str'
_________________ test_draw_segmentation_masks[cuda-1-#FF00FF] _________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   TypeError: new(): invalid data type 'str'
_________________ test_draw_segmentation_masks[cuda-1-colors3] _________________
../publishablew/vision/vision/test/test_utils.py:276: in test_draw_segmentation_masks
    torch.testing.assert_close(out[:, overlap], interpolated_overlap, rtol=0.0, atol=1.0)
E   AssertionError: Tensor-likes are not close!
E   
E   Mismatched elements: 50 / 75 (66.7%)
E   Greatest absolute difference: 122 at index (2, 0) (up to 1.0 allowed)
E   Greatest relative difference: inf at index (1, 0) (up to 0.0 allowed)
_________________ test_draw_segmentation_masks[cuda-1-colors4] _________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   ValueError: too many dimensions 'str'
_________________ test_draw_segmentation_masks[cuda-1-colors5] _________________
../publishablew/vision/vision/test/test_utils.py:248: in test_draw_segmentation_masks
    out = utils.draw_segmentation_masks(img, masks, colors=colors, alpha=alpha)
../publishablew/vision/vision/venv/lib/python3.11/site-packages/torch/utils/_contextlib.py:116: in decorate_context
    return func(*args, **kwargs)
../publishablew/vision/vision/torchvision/utils.py:203: in draw_segmentation_masks
    return draw_segmentation_masks(image, masks, alpha, colors)
../publishablew/vision/vision/torchvision/temp.py:38: in draw_segmentation_masks
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
../publishablew/vision/vision/torchvision/temp.py:38: in <listcomp>
    colors = [torch.tensor(c, dtype=image.dtype, device=image.device) for c in colors]
E   ValueError: too many dimensions 'str'
=========================== short test summary info ============================
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-blue]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-#FF00FF]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-colors4]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-colors5]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-None]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-blue]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-#FF00FF]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors3]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors4]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors5]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-None]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-blue]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-#FF00FF]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors3]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors4]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors5]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-None]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-blue]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-#FF00FF]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors3]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors4]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors5]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-blue]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-#FF00FF]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-colors4]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-colors5]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-None]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-blue]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-#FF00FF]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors3]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors4]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors5]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-None]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-blue]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-#FF00FF]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors3]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors4]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors5]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-None]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-blue]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-#FF00FF]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors3]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors4]
FAILED ../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors5]
========================= 44 failed, 4 passed in 1.30s =========================


Final Test Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/vision/vision/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/vision/vision
configfile: pytest.ini
plugins: mock-3.14.0
collecting ... collected 48 items

../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-blue] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-#FF00FF] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-colors4] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-colors5] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-blue] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-#FF00FF] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors4] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors5] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-blue] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-#FF00FF] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors4] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors5] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-blue] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-#FF00FF] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors4] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors5] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-blue] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-#FF00FF] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-colors4] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-colors5] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-blue] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-#FF00FF] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors4] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors5] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-blue] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-#FF00FF] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors4] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors5] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-blue] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-#FF00FF] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors4] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors5] PASSED

============================== 48 passed in 0.44s ==============================


Initial Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/vision/vision/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/vision/vision
configfile: pytest.ini
plugins: mock-3.14.0
collecting ... collected 48 items

../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-blue] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-#FF00FF] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-colors4] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0-colors5] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-blue] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-#FF00FF] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors4] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.5-colors5] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-blue] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-#FF00FF] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors4] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-0.7-colors5] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-blue] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-#FF00FF] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors4] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cpu-1-colors5] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-blue] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-#FF00FF] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-colors4] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0-colors5] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-blue] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-#FF00FF] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors4] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.5-colors5] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-blue] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-#FF00FF] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors4] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-0.7-colors5] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-None] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-blue] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-#FF00FF] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors3] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors4] PASSED
../publishablew/vision/vision/test/test_utils.py::test_draw_segmentation_masks[cuda-1-colors5] PASSED

============================== 48 passed in 0.39s ==============================
