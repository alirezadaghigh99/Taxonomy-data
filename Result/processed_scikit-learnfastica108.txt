output file:
processed_scikit-learnfastica108.json
function:
fastica
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-unit-variance] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-False] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-unit-variance] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-arbitrary-variance]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-unit-variance]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_non_square_fastica[False]', '../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_errors FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-unit-variance] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-False]', '../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float64-42-False] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-False]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float64-42-False]', '../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-arbitrary-variance] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-False] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float64-42-True]', '../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-arbitrary-variance] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-arbitrary-variance] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-arbitrary-variance]', '../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_non_square_fastica[False] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-False]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-unit-variance]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-False]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-arbitrary-variance]', '../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-arbitrary-variance] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_non_square_fastica[True] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-False] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_return_dtypes[float64] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-unit-variance]', '../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float64-42-True] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_errors', '../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-False] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_return_dtypes[float64]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_non_square_fastica[True]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-arbitrary-variance]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-unit-variance]', '../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-unit-variance] FAILED'}

All Test Cases On Generated code:
============================= test session starts ==============================
platform linux -- Python 3.9.0, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/scikit-learn/scikit-learn/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/scikit-learn/scikit-learn
configfile: setup.cfg
plugins: cov-6.0.0
collecting ... collected 44 items

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_gs I: Seeding RNGs with 1663833015
PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_attributes_dtypes[float32] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_attributes_dtypes[float64] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_return_dtypes[float32] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_return_dtypes[float64] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float32-42-True] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float32-42-False] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float64-42-True] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float64-42-False] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_nowhiten PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_convergence_fail PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_non_square_fastica[True] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_non_square_fastica[False] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fit_transform[float32-42] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fit_transform[float64-42] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-arbitrary-variance-5-expected_mixing_shape0] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-arbitrary-variance-10-expected_mixing_shape1] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-unit-variance-5-expected_mixing_shape2] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-unit-variance-10-expected_mixing_shape3] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-False-5-expected_mixing_shape4] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-False-10-expected_mixing_shape5] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-arbitrary-variance-5-expected_mixing_shape0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-arbitrary-variance-10-expected_mixing_shape1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-unit-variance-5-expected_mixing_shape2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-unit-variance-10-expected_mixing_shape3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-False-5-expected_mixing_shape4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-False-10-expected_mixing_shape5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_errors FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_whiten_unit_variance PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-arbitrary-variance] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-unit-variance] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-False] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-arbitrary-variance] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-unit-variance] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-False] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-arbitrary-variance] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-unit-variance] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-False] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-arbitrary-variance] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-unit-variance] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-False] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple_different_solvers[42-True] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple_different_solvers[42-False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_eigh_low_rank_warning[42] PASSED

=================================== FAILURES ===================================
_____________________ test_fastica_return_dtypes[float64] ______________________

global_dtype = <class 'numpy.float64'>

    def test_fastica_return_dtypes(global_dtype):
        rng = np.random.RandomState(0)
        X = rng.random_sample((100, 10)).astype(global_dtype, copy=False)
>       k_, mixing_, s_ = fastica(
            X, max_iter=1000, whiten="unit-variance", random_state=rng
        )

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:64: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[5.48813504e-01, 7.15189366e-01, 6.02763376e-01, 5.44883183e-01,
        4.23654799e-01, 6.45894113e-01, 4.3758...e-01,
        7.36853162e-01, 9.76763674e-02, 5.14922202e-01, 9.38412022e-01,
        2.28646551e-01, 6.77141144e-01]])
n_components = 10, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
_____________________ test_fastica_simple[float64-42-True] _____________________

add_noise = True, global_random_seed = 42
global_dtype = <class 'numpy.float64'>

    @pytest.mark.parametrize("add_noise", [True, False])
    def test_fastica_simple(add_noise, global_random_seed, global_dtype):
        if (
            global_random_seed == 20
            and global_dtype == np.float32
            and not add_noise
            and os.getenv("DISTRIB") == "ubuntu"
        ):
            pytest.xfail(
                "FastICA instability with Ubuntu Atlas build with float32 "
                "global_dtype. For more details, see "
                "https://github.com/scikit-learn/scikit-learn/issues/24131#issuecomment-1208091119"  # noqa
            )
    
        # Test the FastICA algorithm on very simple data.
        rng = np.random.RandomState(global_random_seed)
        n_samples = 1000
        # Generate two sources:
        s1 = (2 * np.sin(np.linspace(0, 100, n_samples)) > 0) - 1
        s2 = stats.t.rvs(1, size=n_samples, random_state=global_random_seed)
        s = np.c_[s1, s2].T
        center_and_norm(s)
        s = s.astype(global_dtype)
        s1, s2 = s
    
        # Mixing angle
        phi = 0.6
        mixing = np.array([[np.cos(phi), np.sin(phi)], [np.sin(phi), -np.cos(phi)]])
        mixing = mixing.astype(global_dtype)
        m = np.dot(mixing, s)
    
        if add_noise:
            m += 0.1 * rng.randn(2, 1000)
    
        center_and_norm(m)
    
        # function as fun arg
        def g_test(x):
            return x**3, (3 * x**2).mean(axis=-1)
    
        algos = ["parallel", "deflation"]
        nls = ["logcosh", "exp", "cube", g_test]
        whitening = ["arbitrary-variance", "unit-variance", False]
        for algo, nl, whiten in itertools.product(algos, nls, whitening):
            if whiten:
>               k_, mixing_, s_ = fastica(
                    m.T, fun=nl, whiten=whiten, algorithm=algo, random_state=rng
                )

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[-0.77421405, -0.44262622],
       [ 0.82038213,  0.62271584],
       [ 1.09332522,  0.26233302],
       ...,
       [-0.76568212, -0.65764402],
       [-0.88574246, -0.59004679],
       [-0.76019433, -0.66180433]])
n_components = 2, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
____________________ test_fastica_simple[float64-42-False] _____________________

add_noise = False, global_random_seed = 42
global_dtype = <class 'numpy.float64'>

    @pytest.mark.parametrize("add_noise", [True, False])
    def test_fastica_simple(add_noise, global_random_seed, global_dtype):
        if (
            global_random_seed == 20
            and global_dtype == np.float32
            and not add_noise
            and os.getenv("DISTRIB") == "ubuntu"
        ):
            pytest.xfail(
                "FastICA instability with Ubuntu Atlas build with float32 "
                "global_dtype. For more details, see "
                "https://github.com/scikit-learn/scikit-learn/issues/24131#issuecomment-1208091119"  # noqa
            )
    
        # Test the FastICA algorithm on very simple data.
        rng = np.random.RandomState(global_random_seed)
        n_samples = 1000
        # Generate two sources:
        s1 = (2 * np.sin(np.linspace(0, 100, n_samples)) > 0) - 1
        s2 = stats.t.rvs(1, size=n_samples, random_state=global_random_seed)
        s = np.c_[s1, s2].T
        center_and_norm(s)
        s = s.astype(global_dtype)
        s1, s2 = s
    
        # Mixing angle
        phi = 0.6
        mixing = np.array([[np.cos(phi), np.sin(phi)], [np.sin(phi), -np.cos(phi)]])
        mixing = mixing.astype(global_dtype)
        m = np.dot(mixing, s)
    
        if add_noise:
            m += 0.1 * rng.randn(2, 1000)
    
        center_and_norm(m)
    
        # function as fun arg
        def g_test(x):
            return x**3, (3 * x**2).mean(axis=-1)
    
        algos = ["parallel", "deflation"]
        nls = ["logcosh", "exp", "cube", g_test]
        whitening = ["arbitrary-variance", "unit-variance", False]
        for algo, nl, whiten in itertools.product(algos, nls, whitening):
            if whiten:
>               k_, mixing_, s_ = fastica(
                    m.T, fun=nl, whiten=whiten, algorithm=algo, random_state=rng
                )

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[-0.827541  , -0.57701868],
       [ 0.84159506,  0.54302587],
       [ 1.03662881,  0.26537075],
       ...,
       [-0.83356141, -0.56844786],
       [-0.83155534, -0.57130376],
       [-0.82112068, -0.5861588 ]])
n_components = 2, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
________________________ test_non_square_fastica[True] _________________________

add_noise = True

    @pytest.mark.parametrize("add_noise", [True, False])
    def test_non_square_fastica(add_noise):
        # Test the FastICA algorithm on very simple data.
        rng = np.random.RandomState(0)
    
        n_samples = 1000
        # Generate two sources:
        t = np.linspace(0, 100, n_samples)
        s1 = np.sin(t)
        s2 = np.ceil(np.sin(np.pi * t))
        s = np.c_[s1, s2].T
        center_and_norm(s)
        s1, s2 = s
    
        # Mixing matrix
        mixing = rng.randn(6, 2)
        m = np.dot(mixing, s)
    
        if add_noise:
            m += 0.1 * rng.randn(6, n_samples)
    
        center_and_norm(m)
    
>       k_, mixing_, s_ = fastica(
            m.T, n_components=2, whiten="unit-variance", random_state=rng
        )

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:244: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[-0.17730298, -0.91034658,  0.49486058,  0.15670471, -0.91730373,
        -0.98203982],
       [ 0.36598119,  1...,
        -1.08273881],
       [-0.38098599,  0.58863834, -1.11380021, -0.92497723,  0.97199087,
         0.97730603]])
n_components = 2, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
________________________ test_non_square_fastica[False] ________________________

add_noise = False

    @pytest.mark.parametrize("add_noise", [True, False])
    def test_non_square_fastica(add_noise):
        # Test the FastICA algorithm on very simple data.
        rng = np.random.RandomState(0)
    
        n_samples = 1000
        # Generate two sources:
        t = np.linspace(0, 100, n_samples)
        s1 = np.sin(t)
        s2 = np.ceil(np.sin(np.pi * t))
        s = np.c_[s1, s2].T
        center_and_norm(s)
        s1, s2 = s
    
        # Mixing matrix
        mixing = rng.randn(6, 2)
        m = np.dot(mixing, s)
    
        if add_noise:
            m += 0.1 * rng.randn(6, n_samples)
    
        center_and_norm(m)
    
>       k_, mixing_, s_ = fastica(
            m.T, n_components=2, whiten="unit-variance", random_state=rng
        )

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:244: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[-0.22267876, -0.91644941,  0.46257822,  0.15580421, -0.96984176,
        -0.99511531],
       [ 0.35711866,  0...,
        -1.07719641],
       [-0.47725596,  0.62925823, -1.09918914, -0.86504474,  1.14496057,
         0.92435813]])
n_components = 2, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
_____________________________ test_fastica_errors ______________________________

    def test_fastica_errors():
        n_features = 3
        n_samples = 10
        rng = np.random.RandomState(0)
        X = rng.random_sample((n_samples, n_features))
        w_init = rng.randn(n_features + 1, n_features + 1)
        with pytest.raises(ValueError, match=r"alpha must be in \[1,2\]"):
>           fastica(X, fun_args={"alpha": 0})

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:368: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[0.5488135 , 0.71518937, 0.60276338],
       [0.54488318, 0.4236548 , 0.64589411],
       [0.43758721, 0.891773...56, 0.46147936, 0.78052918],
       [0.11827443, 0.63992102, 0.14335329],
       [0.94466892, 0.52184832, 0.41466194]])
n_components = 3, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
___________ test_fastica_output_shape[True-True-arbitrary-variance] ____________

whiten = 'arbitrary-variance', return_X_mean = True, return_n_iter = True

    @pytest.mark.parametrize("whiten", ["arbitrary-variance", "unit-variance", False])
    @pytest.mark.parametrize("return_X_mean", [True, False])
    @pytest.mark.parametrize("return_n_iter", [True, False])
    def test_fastica_output_shape(whiten, return_X_mean, return_n_iter):
        n_features = 3
        n_samples = 10
        rng = np.random.RandomState(0)
        X = rng.random_sample((n_samples, n_features))
    
        expected_len = 3 + return_X_mean + return_n_iter
    
>       out = fastica(
            X, whiten=whiten, return_n_iter=return_n_iter, return_X_mean=return_X_mean
        )

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[0.5488135 , 0.71518937, 0.60276338],
       [0.54488318, 0.4236548 , 0.64589411],
       [0.43758721, 0.891773...56, 0.46147936, 0.78052918],
       [0.11827443, 0.63992102, 0.14335329],
       [0.94466892, 0.52184832, 0.41466194]])
n_components = 3, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
______________ test_fastica_output_shape[True-True-unit-variance] ______________

whiten = 'unit-variance', return_X_mean = True, return_n_iter = True

    @pytest.mark.parametrize("whiten", ["arbitrary-variance", "unit-variance", False])
    @pytest.mark.parametrize("return_X_mean", [True, False])
    @pytest.mark.parametrize("return_n_iter", [True, False])
    def test_fastica_output_shape(whiten, return_X_mean, return_n_iter):
        n_features = 3
        n_samples = 10
        rng = np.random.RandomState(0)
        X = rng.random_sample((n_samples, n_features))
    
        expected_len = 3 + return_X_mean + return_n_iter
    
>       out = fastica(
            X, whiten=whiten, return_n_iter=return_n_iter, return_X_mean=return_X_mean
        )

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[0.5488135 , 0.71518937, 0.60276338],
       [0.54488318, 0.4236548 , 0.64589411],
       [0.43758721, 0.891773...56, 0.46147936, 0.78052918],
       [0.11827443, 0.63992102, 0.14335329],
       [0.94466892, 0.52184832, 0.41466194]])
n_components = 3, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
__________________ test_fastica_output_shape[True-True-False] __________________

whiten = False, return_X_mean = True, return_n_iter = True

    @pytest.mark.parametrize("whiten", ["arbitrary-variance", "unit-variance", False])
    @pytest.mark.parametrize("return_X_mean", [True, False])
    @pytest.mark.parametrize("return_n_iter", [True, False])
    def test_fastica_output_shape(whiten, return_X_mean, return_n_iter):
        n_features = 3
        n_samples = 10
        rng = np.random.RandomState(0)
        X = rng.random_sample((n_samples, n_features))
    
        expected_len = 3 + return_X_mean + return_n_iter
    
>       out = fastica(
            X, whiten=whiten, return_n_iter=return_n_iter, return_X_mean=return_X_mean
        )

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[0.5488135 , 0.71518937, 0.60276338],
       [0.54488318, 0.4236548 , 0.64589411],
       [0.43758721, 0.891773...56, 0.46147936, 0.78052918],
       [0.11827443, 0.63992102, 0.14335329],
       [0.94466892, 0.52184832, 0.41466194]])
n_components = 3, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
___________ test_fastica_output_shape[True-False-arbitrary-variance] ___________

whiten = 'arbitrary-variance', return_X_mean = False, return_n_iter = True

    @pytest.mark.parametrize("whiten", ["arbitrary-variance", "unit-variance", False])
    @pytest.mark.parametrize("return_X_mean", [True, False])
    @pytest.mark.parametrize("return_n_iter", [True, False])
    def test_fastica_output_shape(whiten, return_X_mean, return_n_iter):
        n_features = 3
        n_samples = 10
        rng = np.random.RandomState(0)
        X = rng.random_sample((n_samples, n_features))
    
        expected_len = 3 + return_X_mean + return_n_iter
    
>       out = fastica(
            X, whiten=whiten, return_n_iter=return_n_iter, return_X_mean=return_X_mean
        )

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[0.5488135 , 0.71518937, 0.60276338],
       [0.54488318, 0.4236548 , 0.64589411],
       [0.43758721, 0.891773...56, 0.46147936, 0.78052918],
       [0.11827443, 0.63992102, 0.14335329],
       [0.94466892, 0.52184832, 0.41466194]])
n_components = 3, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
_____________ test_fastica_output_shape[True-False-unit-variance] ______________

whiten = 'unit-variance', return_X_mean = False, return_n_iter = True

    @pytest.mark.parametrize("whiten", ["arbitrary-variance", "unit-variance", False])
    @pytest.mark.parametrize("return_X_mean", [True, False])
    @pytest.mark.parametrize("return_n_iter", [True, False])
    def test_fastica_output_shape(whiten, return_X_mean, return_n_iter):
        n_features = 3
        n_samples = 10
        rng = np.random.RandomState(0)
        X = rng.random_sample((n_samples, n_features))
    
        expected_len = 3 + return_X_mean + return_n_iter
    
>       out = fastica(
            X, whiten=whiten, return_n_iter=return_n_iter, return_X_mean=return_X_mean
        )

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[0.5488135 , 0.71518937, 0.60276338],
       [0.54488318, 0.4236548 , 0.64589411],
       [0.43758721, 0.891773...56, 0.46147936, 0.78052918],
       [0.11827443, 0.63992102, 0.14335329],
       [0.94466892, 0.52184832, 0.41466194]])
n_components = 3, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
_________________ test_fastica_output_shape[True-False-False] __________________

whiten = False, return_X_mean = False, return_n_iter = True

    @pytest.mark.parametrize("whiten", ["arbitrary-variance", "unit-variance", False])
    @pytest.mark.parametrize("return_X_mean", [True, False])
    @pytest.mark.parametrize("return_n_iter", [True, False])
    def test_fastica_output_shape(whiten, return_X_mean, return_n_iter):
        n_features = 3
        n_samples = 10
        rng = np.random.RandomState(0)
        X = rng.random_sample((n_samples, n_features))
    
        expected_len = 3 + return_X_mean + return_n_iter
    
>       out = fastica(
            X, whiten=whiten, return_n_iter=return_n_iter, return_X_mean=return_X_mean
        )

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[0.5488135 , 0.71518937, 0.60276338],
       [0.54488318, 0.4236548 , 0.64589411],
       [0.43758721, 0.891773...56, 0.46147936, 0.78052918],
       [0.11827443, 0.63992102, 0.14335329],
       [0.94466892, 0.52184832, 0.41466194]])
n_components = 3, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
___________ test_fastica_output_shape[False-True-arbitrary-variance] ___________

whiten = 'arbitrary-variance', return_X_mean = True, return_n_iter = False

    @pytest.mark.parametrize("whiten", ["arbitrary-variance", "unit-variance", False])
    @pytest.mark.parametrize("return_X_mean", [True, False])
    @pytest.mark.parametrize("return_n_iter", [True, False])
    def test_fastica_output_shape(whiten, return_X_mean, return_n_iter):
        n_features = 3
        n_samples = 10
        rng = np.random.RandomState(0)
        X = rng.random_sample((n_samples, n_features))
    
        expected_len = 3 + return_X_mean + return_n_iter
    
>       out = fastica(
            X, whiten=whiten, return_n_iter=return_n_iter, return_X_mean=return_X_mean
        )

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[0.5488135 , 0.71518937, 0.60276338],
       [0.54488318, 0.4236548 , 0.64589411],
       [0.43758721, 0.891773...56, 0.46147936, 0.78052918],
       [0.11827443, 0.63992102, 0.14335329],
       [0.94466892, 0.52184832, 0.41466194]])
n_components = 3, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
_____________ test_fastica_output_shape[False-True-unit-variance] ______________

whiten = 'unit-variance', return_X_mean = True, return_n_iter = False

    @pytest.mark.parametrize("whiten", ["arbitrary-variance", "unit-variance", False])
    @pytest.mark.parametrize("return_X_mean", [True, False])
    @pytest.mark.parametrize("return_n_iter", [True, False])
    def test_fastica_output_shape(whiten, return_X_mean, return_n_iter):
        n_features = 3
        n_samples = 10
        rng = np.random.RandomState(0)
        X = rng.random_sample((n_samples, n_features))
    
        expected_len = 3 + return_X_mean + return_n_iter
    
>       out = fastica(
            X, whiten=whiten, return_n_iter=return_n_iter, return_X_mean=return_X_mean
        )

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[0.5488135 , 0.71518937, 0.60276338],
       [0.54488318, 0.4236548 , 0.64589411],
       [0.43758721, 0.891773...56, 0.46147936, 0.78052918],
       [0.11827443, 0.63992102, 0.14335329],
       [0.94466892, 0.52184832, 0.41466194]])
n_components = 3, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
_________________ test_fastica_output_shape[False-True-False] __________________

whiten = False, return_X_mean = True, return_n_iter = False

    @pytest.mark.parametrize("whiten", ["arbitrary-variance", "unit-variance", False])
    @pytest.mark.parametrize("return_X_mean", [True, False])
    @pytest.mark.parametrize("return_n_iter", [True, False])
    def test_fastica_output_shape(whiten, return_X_mean, return_n_iter):
        n_features = 3
        n_samples = 10
        rng = np.random.RandomState(0)
        X = rng.random_sample((n_samples, n_features))
    
        expected_len = 3 + return_X_mean + return_n_iter
    
>       out = fastica(
            X, whiten=whiten, return_n_iter=return_n_iter, return_X_mean=return_X_mean
        )

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[0.5488135 , 0.71518937, 0.60276338],
       [0.54488318, 0.4236548 , 0.64589411],
       [0.43758721, 0.891773...56, 0.46147936, 0.78052918],
       [0.11827443, 0.63992102, 0.14335329],
       [0.94466892, 0.52184832, 0.41466194]])
n_components = 3, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
__________ test_fastica_output_shape[False-False-arbitrary-variance] ___________

whiten = 'arbitrary-variance', return_X_mean = False, return_n_iter = False

    @pytest.mark.parametrize("whiten", ["arbitrary-variance", "unit-variance", False])
    @pytest.mark.parametrize("return_X_mean", [True, False])
    @pytest.mark.parametrize("return_n_iter", [True, False])
    def test_fastica_output_shape(whiten, return_X_mean, return_n_iter):
        n_features = 3
        n_samples = 10
        rng = np.random.RandomState(0)
        X = rng.random_sample((n_samples, n_features))
    
        expected_len = 3 + return_X_mean + return_n_iter
    
>       out = fastica(
            X, whiten=whiten, return_n_iter=return_n_iter, return_X_mean=return_X_mean
        )

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[0.5488135 , 0.71518937, 0.60276338],
       [0.54488318, 0.4236548 , 0.64589411],
       [0.43758721, 0.891773...56, 0.46147936, 0.78052918],
       [0.11827443, 0.63992102, 0.14335329],
       [0.94466892, 0.52184832, 0.41466194]])
n_components = 3, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
_____________ test_fastica_output_shape[False-False-unit-variance] _____________

whiten = 'unit-variance', return_X_mean = False, return_n_iter = False

    @pytest.mark.parametrize("whiten", ["arbitrary-variance", "unit-variance", False])
    @pytest.mark.parametrize("return_X_mean", [True, False])
    @pytest.mark.parametrize("return_n_iter", [True, False])
    def test_fastica_output_shape(whiten, return_X_mean, return_n_iter):
        n_features = 3
        n_samples = 10
        rng = np.random.RandomState(0)
        X = rng.random_sample((n_samples, n_features))
    
        expected_len = 3 + return_X_mean + return_n_iter
    
>       out = fastica(
            X, whiten=whiten, return_n_iter=return_n_iter, return_X_mean=return_X_mean
        )

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[0.5488135 , 0.71518937, 0.60276338],
       [0.54488318, 0.4236548 , 0.64589411],
       [0.43758721, 0.891773...56, 0.46147936, 0.78052918],
       [0.11827443, 0.63992102, 0.14335329],
       [0.94466892, 0.52184832, 0.41466194]])
n_components = 3, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
_________________ test_fastica_output_shape[False-False-False] _________________

whiten = False, return_X_mean = False, return_n_iter = False

    @pytest.mark.parametrize("whiten", ["arbitrary-variance", "unit-variance", False])
    @pytest.mark.parametrize("return_X_mean", [True, False])
    @pytest.mark.parametrize("return_n_iter", [True, False])
    def test_fastica_output_shape(whiten, return_X_mean, return_n_iter):
        n_features = 3
        n_samples = 10
        rng = np.random.RandomState(0)
        X = rng.random_sample((n_samples, n_features))
    
        expected_len = 3 + return_X_mean + return_n_iter
    
>       out = fastica(
            X, whiten=whiten, return_n_iter=return_n_iter, return_X_mean=return_X_mean
        )

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/_fastica.py:116: in fastica
    return fastica(X, n_components)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

X = array([[0.5488135 , 0.71518937, 0.60276338],
       [0.54488318, 0.4236548 , 0.64589411],
       [0.43758721, 0.891773...56, 0.46147936, 0.78052918],
       [0.11827443, 0.63992102, 0.14335329],
       [0.94466892, 0.52184832, 0.41466194]])
n_components = 3, algorithm = 'parallel', whiten = 'unit-variance'
fun = 'logcosh', fun_args = None, max_iter = 200, tol = 0.0001, w_init = None
whiten_solver = 'svd', random_state = RandomState(MT19937) at 0x7B2468EE3040
return_X_mean = False, compute_sources = True, return_n_iter = False

    def fastica(X, n_components=None, algorithm='parallel', whiten='unit-variance', fun='logcosh', fun_args=None, max_iter=200, tol=0.0001, w_init=None, whiten_solver='svd', random_state=None, return_X_mean=False, compute_sources=True, return_n_iter=False):
        if not isinstance(X, (np.ndarray, list)):
            raise TypeError('X should be array-like.')
        X = np.array(X)
        n_samples, n_features = X.shape
        if n_components is None:
            n_components = n_features
        if whiten not in ['unit-variance', 'arbitrary-variance', False]:
            raise ValueError('Invalid whiten option.')
        random_state = check_random_state(random_state)
        if fun == 'logcosh':
>           g, g_prime = _logcosh
E           TypeError: cannot unpack non-iterable function object

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/temp.py:52: TypeError
=========================== short test summary info ============================
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_return_dtypes[float64]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float64-42-True]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float64-42-False]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_non_square_fastica[True]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_non_square_fastica[False]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_errors
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-arbitrary-variance]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-unit-variance]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-False]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-arbitrary-variance]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-unit-variance]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-False]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-arbitrary-variance]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-unit-variance]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-False]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-arbitrary-variance]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-unit-variance]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-False]
================== 18 failed, 15 passed, 11 skipped in 0.80s ===================


Final Test Result:
============================= test session starts ==============================
platform linux -- Python 3.9.0, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/scikit-learn/scikit-learn/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/scikit-learn/scikit-learn
configfile: setup.cfg
plugins: cov-6.0.0
collecting ... collected 44 items

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_gs I: Seeding RNGs with 102961701
PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_attributes_dtypes[float32] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_attributes_dtypes[float64] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_return_dtypes[float32] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_return_dtypes[float64] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float32-42-True] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float32-42-False] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float64-42-True] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float64-42-False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_nowhiten PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_convergence_fail PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_non_square_fastica[True] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_non_square_fastica[False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fit_transform[float32-42] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fit_transform[float64-42] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-arbitrary-variance-5-expected_mixing_shape0] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-arbitrary-variance-10-expected_mixing_shape1] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-unit-variance-5-expected_mixing_shape2] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-unit-variance-10-expected_mixing_shape3] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-False-5-expected_mixing_shape4] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-False-10-expected_mixing_shape5] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-arbitrary-variance-5-expected_mixing_shape0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-arbitrary-variance-10-expected_mixing_shape1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-unit-variance-5-expected_mixing_shape2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-unit-variance-10-expected_mixing_shape3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-False-5-expected_mixing_shape4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-False-10-expected_mixing_shape5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_errors PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_whiten_unit_variance PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-arbitrary-variance] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-unit-variance] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-arbitrary-variance] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-unit-variance] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-arbitrary-variance] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-unit-variance] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-arbitrary-variance] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-unit-variance] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple_different_solvers[42-True] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple_different_solvers[42-False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_eigh_low_rank_warning[42] PASSED

======================== 33 passed, 11 skipped in 0.53s ========================


Initial Result:
============================= test session starts ==============================
platform linux -- Python 3.9.0, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/scikit-learn/scikit-learn/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/scikit-learn/scikit-learn
configfile: setup.cfg
plugins: cov-6.0.0
collecting ... collected 44 items

../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_gs I: Seeding RNGs with 510204606
PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_attributes_dtypes[float32] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_attributes_dtypes[float64] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_return_dtypes[float32] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_return_dtypes[float64] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float32-42-True] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float32-42-False] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float64-42-True] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple[float64-42-False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_nowhiten PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_convergence_fail PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_non_square_fastica[True] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_non_square_fastica[False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fit_transform[float32-42] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fit_transform[float64-42] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-arbitrary-variance-5-expected_mixing_shape0] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-arbitrary-variance-10-expected_mixing_shape1] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-unit-variance-5-expected_mixing_shape2] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-unit-variance-10-expected_mixing_shape3] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-False-5-expected_mixing_shape4] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float32-42-False-10-expected_mixing_shape5] SKIPPED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-arbitrary-variance-5-expected_mixing_shape0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-arbitrary-variance-10-expected_mixing_shape1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-unit-variance-5-expected_mixing_shape2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-unit-variance-10-expected_mixing_shape3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-False-5-expected_mixing_shape4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_inverse_transform[float64-42-False-10-expected_mixing_shape5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_errors PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_whiten_unit_variance PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-arbitrary-variance] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-unit-variance] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-True-False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-arbitrary-variance] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-unit-variance] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[True-False-False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-arbitrary-variance] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-unit-variance] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-True-False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-arbitrary-variance] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-unit-variance] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_output_shape[False-False-False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple_different_solvers[42-True] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_simple_different_solvers[42-False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/decomposition/tests/test_fastica.py::test_fastica_eigh_low_rank_warning[42] PASSED

======================== 33 passed, 11 skipped in 0.54s ========================
