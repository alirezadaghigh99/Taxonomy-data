output file:
processed_korniashift_rgb52.json
function:
shift_rgb
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32] FAILED', '../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu] FAILED', 'FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32]', 'FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32]', 'FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32]', '../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32] FAILED', '../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32] FAILED', '../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32] FAILED', 'FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu]', '../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32] FAILED', 'FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32]', 'FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32]'}

All Test Cases On Generated code:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'jit', 'cudagraphs', 'tvm', 'inductor', 'onnxrt', 'openxla', None}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 6 items

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32] FAILED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32] FAILED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32] FAILED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32] FAILED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu] FAILED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32] FAILED

=================================== FAILURES ===================================
______________ TestRGBShift.test_rgb_shift_no_shift[cpu-float32] _______________

self = <test_shift_rgb.TestRGBShift object at 0x7f6c154fc3a0>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift_no_shift(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([0]), torch.Tensor([0]), torch.Tensor([0])
        image = torch.rand(2, 3, 5, 5, device=device, dtype=dtype)
        expected = image
>       shifted = kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[8.7981e-01, 5.4860e-01, 4.3211e-01, 6.0344e-01, 4.5297e-02],
          [4.3239e-01, 7.3199e-01, 4.1938e-01,...60e-01, 7.8862e-01, 4.5608e-02, 2.6651e-01],
          [4.2181e-01, 7.7263e-01, 5.7571e-02, 2.4035e-01, 3.0300e-01]]]])
r_shift = tensor([0.]), g_shift = tensor([0.]), b_shift = tensor([0.])

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor')
        if image.ndim != 4 or image.shape[1] != 3:
            raise ValueError('Image must have shape (N, 3, H, W)')
        if not isinstance(r_shift, torch.Tensor) or not isinstance(g_shift, torch.Tensor) or (not isinstance(b_shift, torch.Tensor)):
            raise TypeError('Shift values must be torch.Tensors')
        if r_shift.ndim != 1 or g_shift.ndim != 1 or b_shift.ndim != 1:
            raise ValueError('Shift values must have shape (N)')
        N, C, H, W = image.shape
        if r_shift.shape[0] != N or g_shift.shape[0] != N or b_shift.shape[0] != N:
>           raise ValueError('Shift values must have the same batch size as the image')
E           ValueError: Shift values must have the same batch size as the image

../publishablew/kornia/kornia/kornia/enhance/temp.py:16: ValueError
______________ TestRGBShift.test_rgb_shift_all_zeros[cpu-float32] ______________

self = <test_shift_rgb.TestRGBShift object at 0x7f6c154fc790>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift_all_zeros(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([-0.1]), torch.Tensor([-0.1]), torch.Tensor([-0.1])
        image = torch.zeros(2, 3, 5, 5, device=device, dtype=dtype)
        expected = image
>       shifted = kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:22: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0.,...0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.]]]])
r_shift = tensor([-0.1000]), g_shift = tensor([-0.1000])
b_shift = tensor([-0.1000])

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor')
        if image.ndim != 4 or image.shape[1] != 3:
            raise ValueError('Image must have shape (N, 3, H, W)')
        if not isinstance(r_shift, torch.Tensor) or not isinstance(g_shift, torch.Tensor) or (not isinstance(b_shift, torch.Tensor)):
            raise TypeError('Shift values must be torch.Tensors')
        if r_shift.ndim != 1 or g_shift.ndim != 1 or b_shift.ndim != 1:
            raise ValueError('Shift values must have shape (N)')
        N, C, H, W = image.shape
        if r_shift.shape[0] != N or g_shift.shape[0] != N or b_shift.shape[0] != N:
>           raise ValueError('Shift values must have the same batch size as the image')
E           ValueError: Shift values must have the same batch size as the image

../publishablew/kornia/kornia/kornia/enhance/temp.py:16: ValueError
______________ TestRGBShift.test_rgb_shift_all_ones[cpu-float32] _______________

self = <test_shift_rgb.TestRGBShift object at 0x7f6c154fcac0>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift_all_ones(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([1]), torch.Tensor([1]), torch.Tensor([1])
        image = torch.rand(2, 3, 5, 5, device=device, dtype=dtype)
        expected = torch.ones(2, 3, 5, 5, device=device, dtype=dtype)
>       shifted = kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[0.9648, 0.6522, 0.4710, 0.0046, 0.0523],
          [0.5894, 0.9058, 0.1351, 0.5998, 0.5451],
          [0.3...53, 0.7689],
          [0.1400, 0.4410, 0.7210, 0.0232, 0.9461],
          [0.7936, 0.1584, 0.8245, 0.0304, 0.5617]]]])
r_shift = tensor([1.]), g_shift = tensor([1.]), b_shift = tensor([1.])

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor')
        if image.ndim != 4 or image.shape[1] != 3:
            raise ValueError('Image must have shape (N, 3, H, W)')
        if not isinstance(r_shift, torch.Tensor) or not isinstance(g_shift, torch.Tensor) or (not isinstance(b_shift, torch.Tensor)):
            raise TypeError('Shift values must be torch.Tensors')
        if r_shift.ndim != 1 or g_shift.ndim != 1 or b_shift.ndim != 1:
            raise ValueError('Shift values must have shape (N)')
        N, C, H, W = image.shape
        if r_shift.shape[0] != N or g_shift.shape[0] != N or b_shift.shape[0] != N:
>           raise ValueError('Shift values must have the same batch size as the image')
E           ValueError: Shift values must have the same batch size as the image

../publishablew/kornia/kornia/kornia/enhance/temp.py:16: ValueError
_______ TestRGBShift.test_rgb_shift_invalid_parameter_shape[cpu-float32] _______

self = <test_shift_rgb.TestRGBShift object at 0x7f6c154fcdf0>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift_invalid_parameter_shape(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([0.5]), torch.Tensor([0.5]), torch.Tensor([0.5])
        image = torch.randn(3, 3, device=device, dtype=dtype)
        with pytest.raises(TypeError):
>           kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[-1.0324,  1.0711,  0.1726],
        [ 1.6237, -0.0722, -0.7559],
        [ 1.0506, -0.0098, -0.6884]])
r_shift = tensor([0.5000]), g_shift = tensor([0.5000])
b_shift = tensor([0.5000])

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor')
        if image.ndim != 4 or image.shape[1] != 3:
>           raise ValueError('Image must have shape (N, 3, H, W)')
E           ValueError: Image must have shape (N, 3, H, W)

../publishablew/kornia/kornia/kornia/enhance/temp.py:9: ValueError
__________________ TestRGBShift.test_rgb_shift_gradcheck[cpu] __________________

self = <test_shift_rgb.TestRGBShift object at 0x7f6c154fd0f0>
device = device(type='cpu')

    def test_rgb_shift_gradcheck(self, device):
        r_shift, g_shift, b_shift = torch.Tensor([0.4]), torch.Tensor([0.5]), torch.Tensor([0.2])
        image = torch.randn(2, 3, 5, 5, device=device, dtype=torch.float64)
>       self.gradcheck(kornia.enhance.shift_rgb, (image, r_shift, g_shift, b_shift))

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:43: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/testing/base.py:143: in gradcheck
    return gradcheck(func, inputs, raise_exception=raise_exception, fast_mode=fast_mode, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2052: in gradcheck
    return _gradcheck_helper(**args)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2074: in _gradcheck_helper
    func_out = func(*tupled_inputs)
../publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[ 1.1548,  0.1079,  1.1993, -0.0951, -0.2186],
          [-1.8137, -0.3301, -0.8327, -0.2076,  1.2930],
    ...,  0.7842],
          [ 1.4569,  1.1173,  0.5253, -0.9735, -0.5287]]]],
       dtype=torch.float64, requires_grad=True)
r_shift = tensor([0.4000], dtype=torch.float64, requires_grad=True)
g_shift = tensor([0.5000], dtype=torch.float64, requires_grad=True)
b_shift = tensor([0.2000], dtype=torch.float64, requires_grad=True)

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor')
        if image.ndim != 4 or image.shape[1] != 3:
            raise ValueError('Image must have shape (N, 3, H, W)')
        if not isinstance(r_shift, torch.Tensor) or not isinstance(g_shift, torch.Tensor) or (not isinstance(b_shift, torch.Tensor)):
            raise TypeError('Shift values must be torch.Tensors')
        if r_shift.ndim != 1 or g_shift.ndim != 1 or b_shift.ndim != 1:
            raise ValueError('Shift values must have shape (N)')
        N, C, H, W = image.shape
        if r_shift.shape[0] != N or g_shift.shape[0] != N or b_shift.shape[0] != N:
>           raise ValueError('Shift values must have the same batch size as the image')
E           ValueError: Shift values must have the same batch size as the image

../publishablew/kornia/kornia/kornia/enhance/temp.py:16: ValueError
___________________ TestRGBShift.test_rgb_shift[cpu-float32] ___________________

self = <test_shift_rgb.TestRGBShift object at 0x7f6c154fd3f0>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([0.1]), torch.Tensor([0.3]), torch.Tensor([-0.3])
        image = torch.tensor(
            [[[[0.2, 0.0]], [[0.3, 0.5]], [[0.4, 0.7]]], [[[0.2, 0.7]], [[0.0, 0.8]], [[0.2, 0.3]]]],
            device=device,
            dtype=dtype,
        )
>       shifted = kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:52: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[0.2000, 0.0000]],

         [[0.3000, 0.5000]],

         [[0.4000, 0.7000]]],


        [[[0.2000, 0.7000]],

         [[0.0000, 0.8000]],

         [[0.2000, 0.3000]]]])
r_shift = tensor([0.1000]), g_shift = tensor([0.3000])
b_shift = tensor([-0.3000])

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('Image must be a torch.Tensor')
        if image.ndim != 4 or image.shape[1] != 3:
            raise ValueError('Image must have shape (N, 3, H, W)')
        if not isinstance(r_shift, torch.Tensor) or not isinstance(g_shift, torch.Tensor) or (not isinstance(b_shift, torch.Tensor)):
            raise TypeError('Shift values must be torch.Tensors')
        if r_shift.ndim != 1 or g_shift.ndim != 1 or b_shift.ndim != 1:
            raise ValueError('Shift values must have shape (N)')
        N, C, H, W = image.shape
        if r_shift.shape[0] != N or g_shift.shape[0] != N or b_shift.shape[0] != N:
>           raise ValueError('Shift values must have the same batch size as the image')
E           ValueError: Shift values must have the same batch size as the image

../publishablew/kornia/kornia/kornia/enhance/temp.py:16: ValueError
=========================== short test summary info ============================
FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32]
FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32]
FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32]
FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32]
FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu]
FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32]
============================== 6 failed in 0.38s ===============================


Final Test Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'jit', 'onnxrt', 'openxla', 'tvm', 'cudagraphs', None, 'inductor'}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 6 items

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32] PASSED

============================== 6 passed in 0.18s ===============================


Initial Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'cudagraphs', 'jit', 'tvm', 'openxla', 'inductor', 'onnxrt', None}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 6 items

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32] PASSED

============================== 6 passed in 0.17s ===============================
