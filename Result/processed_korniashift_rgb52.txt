output file:
processed_korniashift_rgb52.json
function:
shift_rgb
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu]', 'FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32]', '../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32] FAILED', '../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32] FAILED', 'FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32]', '../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu] FAILED', '../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32] FAILED', '../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32] FAILED', '../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32] FAILED', 'FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32]', 'FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32]', 'FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32]'}

All Test Cases On Generated code:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'tvm', 'jit', 'onnxrt', 'inductor', 'openxla', 'cudagraphs', None}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 6 items

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32] FAILED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32] FAILED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32] FAILED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32] FAILED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu] FAILED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32] FAILED

=================================== FAILURES ===================================
______________ TestRGBShift.test_rgb_shift_no_shift[cpu-float32] _______________

self = <test_shift_rgb.TestRGBShift object at 0x7abfb6900520>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift_no_shift(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([0]), torch.Tensor([0]), torch.Tensor([0])
        image = torch.rand(2, 3, 5, 5, device=device, dtype=dtype)
        expected = image
>       shifted = kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[0.6793, 0.9045, 0.4822, 0.0775, 0.5320],
          [0.2151, 0.5927, 0.1631, 0.4315, 0.2483],
          [0.5...01, 0.4392],
          [0.4807, 0.7933, 0.8482, 0.7022, 0.4104],
          [0.6672, 0.6362, 0.1705, 0.2403, 0.3922]]]])
r_shift = tensor([0.]), g_shift = tensor([0.]), b_shift = tensor([0.])

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('The image must be a torch.Tensor.')
        if image.ndim != 4 or image.shape[1] != 3:
            raise ValueError('The image must have shape (N, 3, H, W) for an RGB image.')
        if not (isinstance(r_shift, torch.Tensor) and isinstance(g_shift, torch.Tensor) and isinstance(b_shift, torch.Tensor)):
            raise TypeError('The shift values must be torch.Tensors.')
        if r_shift.ndim != 1 or g_shift.ndim != 1 or b_shift.ndim != 1:
            raise ValueError('The shift tensors must be 1-dimensional.')
        if r_shift.shape[0] != image.shape[0] or g_shift.shape[0] != image.shape[0] or b_shift.shape[0] != image.shape[0]:
>           raise ValueError('The shift tensors must have the same length as the batch size of the image.')
E           ValueError: The shift tensors must have the same length as the batch size of the image.

../publishablew/kornia/kornia/kornia/enhance/temp.py:15: ValueError
______________ TestRGBShift.test_rgb_shift_all_zeros[cpu-float32] ______________

self = <test_shift_rgb.TestRGBShift object at 0x7abfb6900910>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift_all_zeros(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([-0.1]), torch.Tensor([-0.1]), torch.Tensor([-0.1])
        image = torch.zeros(2, 3, 5, 5, device=device, dtype=dtype)
        expected = image
>       shifted = kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:22: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0.,...0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0.]]]])
r_shift = tensor([-0.1000]), g_shift = tensor([-0.1000])
b_shift = tensor([-0.1000])

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('The image must be a torch.Tensor.')
        if image.ndim != 4 or image.shape[1] != 3:
            raise ValueError('The image must have shape (N, 3, H, W) for an RGB image.')
        if not (isinstance(r_shift, torch.Tensor) and isinstance(g_shift, torch.Tensor) and isinstance(b_shift, torch.Tensor)):
            raise TypeError('The shift values must be torch.Tensors.')
        if r_shift.ndim != 1 or g_shift.ndim != 1 or b_shift.ndim != 1:
            raise ValueError('The shift tensors must be 1-dimensional.')
        if r_shift.shape[0] != image.shape[0] or g_shift.shape[0] != image.shape[0] or b_shift.shape[0] != image.shape[0]:
>           raise ValueError('The shift tensors must have the same length as the batch size of the image.')
E           ValueError: The shift tensors must have the same length as the batch size of the image.

../publishablew/kornia/kornia/kornia/enhance/temp.py:15: ValueError
______________ TestRGBShift.test_rgb_shift_all_ones[cpu-float32] _______________

self = <test_shift_rgb.TestRGBShift object at 0x7abfb6900c40>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift_all_ones(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([1]), torch.Tensor([1]), torch.Tensor([1])
        image = torch.rand(2, 3, 5, 5, device=device, dtype=dtype)
        expected = torch.ones(2, 3, 5, 5, device=device, dtype=dtype)
>       shifted = kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[0.1091, 0.0534, 0.6334, 0.4737, 0.5735],
          [0.0675, 0.3988, 0.3841, 0.4306, 0.4869],
          [0.5...09, 0.4939],
          [0.6649, 0.5044, 0.9384, 0.6865, 0.7079],
          [0.1241, 0.9239, 0.2584, 0.0327, 0.2061]]]])
r_shift = tensor([1.]), g_shift = tensor([1.]), b_shift = tensor([1.])

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('The image must be a torch.Tensor.')
        if image.ndim != 4 or image.shape[1] != 3:
            raise ValueError('The image must have shape (N, 3, H, W) for an RGB image.')
        if not (isinstance(r_shift, torch.Tensor) and isinstance(g_shift, torch.Tensor) and isinstance(b_shift, torch.Tensor)):
            raise TypeError('The shift values must be torch.Tensors.')
        if r_shift.ndim != 1 or g_shift.ndim != 1 or b_shift.ndim != 1:
            raise ValueError('The shift tensors must be 1-dimensional.')
        if r_shift.shape[0] != image.shape[0] or g_shift.shape[0] != image.shape[0] or b_shift.shape[0] != image.shape[0]:
>           raise ValueError('The shift tensors must have the same length as the batch size of the image.')
E           ValueError: The shift tensors must have the same length as the batch size of the image.

../publishablew/kornia/kornia/kornia/enhance/temp.py:15: ValueError
_______ TestRGBShift.test_rgb_shift_invalid_parameter_shape[cpu-float32] _______

self = <test_shift_rgb.TestRGBShift object at 0x7abfb6900f70>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift_invalid_parameter_shape(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([0.5]), torch.Tensor([0.5]), torch.Tensor([0.5])
        image = torch.randn(3, 3, device=device, dtype=dtype)
        with pytest.raises(TypeError):
>           kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[ 0.6346,  1.5817, -0.0224],
        [-1.2224,  0.8749, -0.4435],
        [-2.0940, -1.7260, -0.3135]])
r_shift = tensor([0.5000]), g_shift = tensor([0.5000])
b_shift = tensor([0.5000])

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('The image must be a torch.Tensor.')
        if image.ndim != 4 or image.shape[1] != 3:
>           raise ValueError('The image must have shape (N, 3, H, W) for an RGB image.')
E           ValueError: The image must have shape (N, 3, H, W) for an RGB image.

../publishablew/kornia/kornia/kornia/enhance/temp.py:9: ValueError
__________________ TestRGBShift.test_rgb_shift_gradcheck[cpu] __________________

self = <test_shift_rgb.TestRGBShift object at 0x7abfb6901270>
device = device(type='cpu')

    def test_rgb_shift_gradcheck(self, device):
        r_shift, g_shift, b_shift = torch.Tensor([0.4]), torch.Tensor([0.5]), torch.Tensor([0.2])
        image = torch.randn(2, 3, 5, 5, device=device, dtype=torch.float64)
>       self.gradcheck(kornia.enhance.shift_rgb, (image, r_shift, g_shift, b_shift))

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:43: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/testing/base.py:143: in gradcheck
    return gradcheck(func, inputs, raise_exception=raise_exception, fast_mode=fast_mode, **kwargs)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2052: in gradcheck
    return _gradcheck_helper(**args)
../publishablew/kornia/kornia/venv/lib/python3.10/site-packages/torch/autograd/gradcheck.py:2074: in _gradcheck_helper
    func_out = func(*tupled_inputs)
../publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[ 1.1815,  1.2997,  0.7198, -0.4346, -0.1296],
          [-2.4191, -1.1027,  1.0209,  0.2200, -1.8822],
    ...,  0.7628],
          [-1.4994,  0.0457,  1.5083, -0.6456,  1.9201]]]],
       dtype=torch.float64, requires_grad=True)
r_shift = tensor([0.4000], dtype=torch.float64, requires_grad=True)
g_shift = tensor([0.5000], dtype=torch.float64, requires_grad=True)
b_shift = tensor([0.2000], dtype=torch.float64, requires_grad=True)

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('The image must be a torch.Tensor.')
        if image.ndim != 4 or image.shape[1] != 3:
            raise ValueError('The image must have shape (N, 3, H, W) for an RGB image.')
        if not (isinstance(r_shift, torch.Tensor) and isinstance(g_shift, torch.Tensor) and isinstance(b_shift, torch.Tensor)):
            raise TypeError('The shift values must be torch.Tensors.')
        if r_shift.ndim != 1 or g_shift.ndim != 1 or b_shift.ndim != 1:
            raise ValueError('The shift tensors must be 1-dimensional.')
        if r_shift.shape[0] != image.shape[0] or g_shift.shape[0] != image.shape[0] or b_shift.shape[0] != image.shape[0]:
>           raise ValueError('The shift tensors must have the same length as the batch size of the image.')
E           ValueError: The shift tensors must have the same length as the batch size of the image.

../publishablew/kornia/kornia/kornia/enhance/temp.py:15: ValueError
___________________ TestRGBShift.test_rgb_shift[cpu-float32] ___________________

self = <test_shift_rgb.TestRGBShift object at 0x7abfb6901570>
device = device(type='cpu'), dtype = torch.float32

    def test_rgb_shift(self, device, dtype):
        r_shift, g_shift, b_shift = torch.Tensor([0.1]), torch.Tensor([0.3]), torch.Tensor([-0.3])
        image = torch.tensor(
            [[[[0.2, 0.0]], [[0.3, 0.5]], [[0.4, 0.7]]], [[[0.2, 0.7]], [[0.0, 0.8]], [[0.2, 0.3]]]],
            device=device,
            dtype=dtype,
        )
>       shifted = kornia.enhance.shift_rgb(image, r_shift, g_shift, b_shift)

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py:52: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/kornia/enhance/shift_rgb.py:6: in shift_rgb
    return shift_rgb(image, r_shift, g_shift, b_shift)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

image = tensor([[[[0.2000, 0.0000]],

         [[0.3000, 0.5000]],

         [[0.4000, 0.7000]]],


        [[[0.2000, 0.7000]],

         [[0.0000, 0.8000]],

         [[0.2000, 0.3000]]]])
r_shift = tensor([0.1000]), g_shift = tensor([0.3000])
b_shift = tensor([-0.3000])

    def shift_rgb(image, r_shift, g_shift, b_shift):
        if not isinstance(image, torch.Tensor):
            raise TypeError('The image must be a torch.Tensor.')
        if image.ndim != 4 or image.shape[1] != 3:
            raise ValueError('The image must have shape (N, 3, H, W) for an RGB image.')
        if not (isinstance(r_shift, torch.Tensor) and isinstance(g_shift, torch.Tensor) and isinstance(b_shift, torch.Tensor)):
            raise TypeError('The shift values must be torch.Tensors.')
        if r_shift.ndim != 1 or g_shift.ndim != 1 or b_shift.ndim != 1:
            raise ValueError('The shift tensors must be 1-dimensional.')
        if r_shift.shape[0] != image.shape[0] or g_shift.shape[0] != image.shape[0] or b_shift.shape[0] != image.shape[0]:
>           raise ValueError('The shift tensors must have the same length as the batch size of the image.')
E           ValueError: The shift tensors must have the same length as the batch size of the image.

../publishablew/kornia/kornia/kornia/enhance/temp.py:15: ValueError
=========================== short test summary info ============================
FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32]
FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32]
FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32]
FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32]
FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu]
FAILED ../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32]
============================== 6 failed in 0.46s ===============================


Final Test Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'openxla', 'tvm', 'inductor', 'jit', 'cudagraphs', None, 'onnxrt'}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 6 items

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32] PASSED

============================== 6 passed in 0.24s ===============================


Initial Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'tvm', 'cudagraphs', 'onnxrt', 'openxla', 'inductor', None, 'jit'}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 6 items

../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_no_shift[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_zeros[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_all_ones[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_invalid_parameter_shape[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift_gradcheck[cpu] PASSED
../publishablew/kornia/kornia/tests/enhance/test_shift_rgb.py::TestRGBShift::test_rgb_shift[cpu-float32] PASSED

============================== 6 passed in 0.13s ===============================
