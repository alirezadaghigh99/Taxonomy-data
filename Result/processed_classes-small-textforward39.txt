output file:
processed_classes-small-textforward39.json
function:
forward
Error Cases:

Pass or Failed: 1

Related Failed Test Cases:
set()

All Test Cases On Generated code:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/small-text/small-text/venv/bin/python3
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/small-text/small-text
configfile: pytest.ini
plugins: srcpaths-1.2.1, cov-6.0.0, approvaltests-14.2.0, approvaltests-0.2.4
collecting ... collected 8 items

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed FAILED [ 12%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_and_predict FAILED [ 25%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_model_not_trained FAILED [ 37%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_with_amp_enabled FAILED [ 50%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed FAILED [ 62%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_and_predict FAILED [ 75%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_model_not_trained FAILED [ 87%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_with_amp_enabled FAILED [100%]

=================================== FAILURES ===================================
_____________________ KimCNNEmbeddingPooledTest.test_embed _____________________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingPooledTest testMethod=test_embed>

    def test_embed(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
_______________ KimCNNEmbeddingPooledTest.test_embed_and_predict _______________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingPooledTest testMethod=test_embed_and_predict>

    def test_embed_and_predict(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:75: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
____________ KimCNNEmbeddingPooledTest.test_embed_model_not_trained ____________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingPooledTest testMethod=test_embed_model_not_trained>

    def test_embed_model_not_trained(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
____________ KimCNNEmbeddingPooledTest.test_embed_with_amp_enabled _____________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingPooledTest testMethod=test_embed_with_amp_enabled>

    def test_embed_with_amp_enabled(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:115: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
____________________ KimCNNEmbeddingGradientTest.test_embed ____________________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingGradientTest testMethod=test_embed>

    def test_embed(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
______________ KimCNNEmbeddingGradientTest.test_embed_and_predict ______________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingGradientTest testMethod=test_embed_and_predict>

    def test_embed_and_predict(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:75: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
___________ KimCNNEmbeddingGradientTest.test_embed_model_not_trained ___________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingGradientTest testMethod=test_embed_model_not_trained>

    def test_embed_model_not_trained(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
___________ KimCNNEmbeddingGradientTest.test_embed_with_amp_enabled ____________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingGradientTest testMethod=test_embed_with_amp_enabled>

    def test_embed_with_amp_enabled(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:115: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
=========================== short test summary info ============================
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_and_predict
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_model_not_trained
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_with_amp_enabled
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_and_predict
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_model_not_trained
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_with_amp_enabled
============================== 8 failed in 5.02s ===============================


Final Test Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/small-text/small-text/venv/bin/python3
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/small-text/small-text
configfile: pytest.ini
plugins: srcpaths-1.2.1, cov-6.0.0, approvaltests-14.2.0, approvaltests-0.2.4
collecting ... collected 8 items

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed FAILED [ 12%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_and_predict FAILED [ 25%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_model_not_trained FAILED [ 37%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_with_amp_enabled FAILED [ 50%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed FAILED [ 62%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_and_predict FAILED [ 75%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_model_not_trained FAILED [ 87%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_with_amp_enabled FAILED [100%]

=================================== FAILURES ===================================
_____________________ KimCNNEmbeddingPooledTest.test_embed _____________________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingPooledTest testMethod=test_embed>

    def test_embed(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
_______________ KimCNNEmbeddingPooledTest.test_embed_and_predict _______________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingPooledTest testMethod=test_embed_and_predict>

    def test_embed_and_predict(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:75: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
____________ KimCNNEmbeddingPooledTest.test_embed_model_not_trained ____________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingPooledTest testMethod=test_embed_model_not_trained>

    def test_embed_model_not_trained(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
____________ KimCNNEmbeddingPooledTest.test_embed_with_amp_enabled _____________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingPooledTest testMethod=test_embed_with_amp_enabled>

    def test_embed_with_amp_enabled(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:115: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
____________________ KimCNNEmbeddingGradientTest.test_embed ____________________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingGradientTest testMethod=test_embed>

    def test_embed(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
______________ KimCNNEmbeddingGradientTest.test_embed_and_predict ______________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingGradientTest testMethod=test_embed_and_predict>

    def test_embed_and_predict(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:75: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
___________ KimCNNEmbeddingGradientTest.test_embed_model_not_trained ___________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingGradientTest testMethod=test_embed_model_not_trained>

    def test_embed_model_not_trained(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
___________ KimCNNEmbeddingGradientTest.test_embed_with_amp_enabled ____________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingGradientTest testMethod=test_embed_with_amp_enabled>

    def test_embed_with_amp_enabled(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:115: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
=========================== short test summary info ============================
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_and_predict
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_model_not_trained
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_with_amp_enabled
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_and_predict
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_model_not_trained
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_with_amp_enabled
============================== 8 failed in 4.91s ===============================


Initial Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/small-text/small-text/venv/bin/python3
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/small-text/small-text
configfile: pytest.ini
plugins: srcpaths-1.2.1, cov-6.0.0, approvaltests-14.2.0, approvaltests-0.2.4
collecting ... collected 8 items

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed FAILED [ 12%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_and_predict FAILED [ 25%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_model_not_trained FAILED [ 37%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_with_amp_enabled FAILED [ 50%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed FAILED [ 62%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_and_predict FAILED [ 75%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_model_not_trained FAILED [ 87%]
../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_with_amp_enabled FAILED [100%]

=================================== FAILURES ===================================
_____________________ KimCNNEmbeddingPooledTest.test_embed _____________________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingPooledTest testMethod=test_embed>

    def test_embed(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
_______________ KimCNNEmbeddingPooledTest.test_embed_and_predict _______________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingPooledTest testMethod=test_embed_and_predict>

    def test_embed_and_predict(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:75: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
____________ KimCNNEmbeddingPooledTest.test_embed_model_not_trained ____________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingPooledTest testMethod=test_embed_model_not_trained>

    def test_embed_model_not_trained(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
____________ KimCNNEmbeddingPooledTest.test_embed_with_amp_enabled _____________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingPooledTest testMethod=test_embed_with_amp_enabled>

    def test_embed_with_amp_enabled(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:115: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
____________________ KimCNNEmbeddingGradientTest.test_embed ____________________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingGradientTest testMethod=test_embed>

    def test_embed(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
______________ KimCNNEmbeddingGradientTest.test_embed_and_predict ______________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingGradientTest testMethod=test_embed_and_predict>

    def test_embed_and_predict(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:75: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
___________ KimCNNEmbeddingGradientTest.test_embed_model_not_trained ___________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingGradientTest testMethod=test_embed_model_not_trained>

    def test_embed_model_not_trained(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
___________ KimCNNEmbeddingGradientTest.test_embed_with_amp_enabled ____________

self = <tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings.KimCNNEmbeddingGradientTest testMethod=test_embed_with_amp_enabled>

    def test_embed_with_amp_enabled(self):
>       _, train, tokenizer = trec_dataset()  # use small test set as train

../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py:115: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/tests/utils/datasets.py:88: in trec_dataset
    trec_dataset = datasets.load_dataset('trec')
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:2132: in load_dataset
    builder_instance = load_dataset_builder(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1853: in load_dataset_builder
    dataset_module = dataset_module_factory(
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1729: in dataset_module_factory
    raise e1 from None
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1679: in dataset_module_factory
    ).get_module()
../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:1329: in get_module
    trust_remote_code = resolve_trust_remote_code(self.trust_remote_code, self.name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

trust_remote_code = None, repo_id = 'trec'

    def resolve_trust_remote_code(trust_remote_code: Optional[bool], repo_id: str) -> bool:
        """
        Copied and adapted from Transformers
        https://github.com/huggingface/transformers/blob/2098d343cc4b4b9d2aea84b3cf1eb5a1e610deff/src/transformers/dynamic_module_utils.py#L589
        """
        trust_remote_code = trust_remote_code if trust_remote_code is not None else config.HF_DATASETS_TRUST_REMOTE_CODE
        if trust_remote_code is None:
            if config.TIME_OUT_REMOTE_CODE > 0:
                try:
                    signal.signal(signal.SIGALRM, _raise_timeout_error)
                    signal.alarm(config.TIME_OUT_REMOTE_CODE)
                    while trust_remote_code is None:
                        answer = input(
                            f"The repository for {repo_id} contains custom code which must be executed to correctly "
                            f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                            f"You can avoid this prompt in future by passing the argument `trust_remote_code=True`.\n\n"
                            f"Do you wish to run the custom code? [y/N] "
                        )
                        if answer.lower() in ["yes", "y", "1"]:
                            trust_remote_code = True
                        elif answer.lower() in ["no", "n", "0", ""]:
                            trust_remote_code = False
                    signal.alarm(0)
                except Exception:
                    # OS which does not support signal.SIGALRM
>                   raise ValueError(
                        f"The repository for {repo_id} contains custom code which must be executed to correctly "
                        f"load the dataset. You can inspect the repository content at https://hf.co/datasets/{repo_id}.\n"
                        f"Please pass the argument `trust_remote_code=True` to allow custom code to be run."
                    )
E                   ValueError: The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
E                   Please pass the argument `trust_remote_code=True` to allow custom code to be run.

../publishablew/small-text/small-text/venv/lib/python3.11/site-packages/datasets/load.py:138: ValueError
----------------------------- Captured stdout call -----------------------------
The repository for trec contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/trec.
You can avoid this prompt in future by passing the argument `trust_remote_code=True`.

Do you wish to run the custom code? [y/N] 
=========================== short test summary info ============================
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_and_predict
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_model_not_trained
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingPooledTest::test_embed_with_amp_enabled
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_and_predict
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_model_not_trained
FAILED ../publishablew/small-text/small-text/tests/integration/small_text/integrations/pytorch/classifiers/test_kimcnn_embeddings.py::KimCNNEmbeddingGradientTest::test_embed_with_amp_enabled
============================== 8 failed in 6.62s ===============================
