output file:
processed_scikit-learndet_curve292.json
function:
det_curve
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.75] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_zero_sample_weight[det_curve] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true4] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true15-y_score15-expected_fpr15-expected_fnr15] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true17-y_score17-expected_fpr17-expected_fnr17] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true4]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true1-y_score1-expected_fpr1-expected_fnr1]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true18-y_score18-expected_fpr18-expected_fnr18]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.5]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true6-y_score6-expected_fpr6-expected_fnr6] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true15-y_score15-expected_fpr15-expected_fnr15]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true3-y_score3-expected_fpr3-expected_fnr3] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true3-y_score3-expected_fpr3-expected_fnr3]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true7-y_score7-expected_fpr7-expected_fnr7] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true0-y_score0-expected_fpr0-expected_fnr0]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true4-y_score4-expected_fpr4-expected_fnr4]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true2-y_pred2-Only one class is present in y_true] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true13-y_score13-expected_fpr13-expected_fnr13] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true3-y_score3-expected_fpr3-expected_fnr3]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true0-y_score0-expected_fpr0-expected_fnr0] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true0] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true2]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_pos_label', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true3-y_pred3-Only one class is present in y_true]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true9-y_score9-expected_fpr9-expected_fnr9]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true19-y_score19-expected_fpr19-expected_fnr19] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true0]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true5-y_score5-expected_fpr5-expected_fnr5]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true9-y_score9-expected_fpr9-expected_fnr9] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true1-y_score1-expected_fpr1-expected_fnr1]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true3-y_pred3-Only one class is present in y_true] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true5-y_score5-expected_fpr5-expected_fnr5] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true14-y_score14-expected_fpr14-expected_fnr14]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true2-y_score2-expected_fpr2-expected_fnr2] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true4-y_score4-expected_fpr4-expected_fnr4] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.25] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[1]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true2] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true2-y_score2-expected_fpr2-expected_fnr2]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true4-y_score4-expected_fpr4-expected_fnr4] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true10-y_score10-expected_fpr10-expected_fnr10]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true6-y_score6-expected_fpr6-expected_fnr6]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true18-y_score18-expected_fpr18-expected_fnr18] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true11-y_score11-expected_fpr11-expected_fnr11] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_pos_label FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true2-y_score2-expected_fpr2-expected_fnr2]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true3]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-det_curve]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true7-y_score7-expected_fpr7-expected_fnr7] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true0-y_score0-expected_fpr0-expected_fnr0] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_zero_sample_weight[det_curve]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true12-y_score12-expected_fpr12-expected_fnr12] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true3] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true17-y_score17-expected_fpr17-expected_fnr17]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true12-y_score12-expected_fpr12-expected_fnr12]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true0-y_score0-expected_fpr0-expected_fnr0]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true5-y_score5-expected_fpr5-expected_fnr5] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true1-y_score1-expected_fpr1-expected_fnr1] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true2-y_pred2-Only one class is present in y_true]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true19-y_score19-expected_fpr19-expected_fnr19]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true10-y_score10-expected_fpr10-expected_fnr10] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true3-y_score3-expected_fpr3-expected_fnr3] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.5] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true4-y_score4-expected_fpr4-expected_fnr4]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true7-y_score7-expected_fpr7-expected_fnr7]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_multiclass_error[det_curve]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true11-y_score11-expected_fpr11-expected_fnr11]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-det_curve] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_pos_label[det_curve]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[1] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true8-y_score8-expected_fpr8-expected_fnr8] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true4-y_pred4-pos_label is not specified]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_sanity_check FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true2-y_score2-expected_fpr2-expected_fnr2] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true6-y_score6-expected_fpr6-expected_fnr6] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true1-y_score1-expected_fpr1-expected_fnr1] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true7-y_score7-expected_fpr7-expected_fnr7]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_pos_label[det_curve] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true16-y_score16-expected_fpr16-expected_fnr16]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.75]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true8-y_score8-expected_fpr8-expected_fnr8]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true16-y_score16-expected_fpr16-expected_fnr16] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true6-y_score6-expected_fpr6-expected_fnr6]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.25]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true13-y_score13-expected_fpr13-expected_fnr13]', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true5-y_score5-expected_fpr5-expected_fnr5]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_multiclass_error[det_curve] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true1]', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true14-y_score14-expected_fpr14-expected_fnr14] FAILED', 'FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_sanity_check', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true4-y_pred4-pos_label is not specified] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true1] FAILED', '../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0] FAILED'}

All Test Cases On Generated code:
============================= test session starts ==============================
platform linux -- Python 3.9.0, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/scikit-learn/scikit-learn/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/scikit-learn/scikit-learn
configfile: setup.cfg
plugins: cov-6.0.0
collecting ... collected 215 items

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve[True] I: Seeding RNGs with 1001783816
PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve[False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_end_points PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_returns_consistency PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_multi PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_confidence PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_hard PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_one_label PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_toydata PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_drop_intermediate PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_fpr_tpr_increasing PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_auc PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_auc_errors PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true0-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true1-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true2-labels2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true3-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata_binary[y_true0-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata_binary[y_true1-labels1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true0-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true1-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true2-labels2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true3-labels3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_perfect_imperfect_chance_multiclass_roc_auc[ovr-macro] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_perfect_imperfect_chance_multiclass_roc_auc[ovr-micro] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_perfect_imperfect_chance_multiclass_roc_auc[ovo-macro] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_micro_averaged_ovr_roc_auc[42] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Parameter 'labels' must be unique-y_true0-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Parameter 'labels' must be unique-y_true1-labels1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of classes in y_true not equal to the number of columns in 'y_score'-y_true2-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Parameter 'labels' must be ordered-y_true3-labels3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of given labels, 2, not equal to the number of columns in 'y_score', 3-y_true4-labels4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of given labels, 2, not equal to the number of columns in 'y_score', 3-y_true5-labels5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of given labels, 4, not equal to the number of columns in 'y_score', 3-y_true6-labels6] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of given labels, 4, not equal to the number of columns in 'y_score', 3-y_true7-labels7] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-'y_true' contains labels not in parameter 'labels'-y_true8-labels8] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-'y_true' contains labels not in parameter 'labels'-y_true9-labels9] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-'y_true' contains labels not in parameter 'labels'-y_true10-labels10] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Parameter 'labels' must be unique-y_true0-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Parameter 'labels' must be unique-y_true1-labels1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of classes in y_true not equal to the number of columns in 'y_score'-y_true2-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Parameter 'labels' must be ordered-y_true3-labels3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of given labels, 2, not equal to the number of columns in 'y_score', 3-y_true4-labels4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of given labels, 2, not equal to the number of columns in 'y_score', 3-y_true5-labels5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of given labels, 4, not equal to the number of columns in 'y_score', 3-y_true6-labels6] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of given labels, 4, not equal to the number of columns in 'y_score', 3-y_true7-labels7] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-'y_true' contains labels not in parameter 'labels'-y_true8-labels8] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-'y_true' contains labels not in parameter 'labels'-y_true9-labels9] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-'y_true' contains labels not in parameter 'labels'-y_true10-labels10] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[average must be one of \\('macro', 'weighted', None\\) for multiclass problems-kwargs0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[average must be one of \\('micro', 'macro', 'weighted', None\\) for multiclass problems-kwargs1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[sample_weight is not supported for multiclass one-vs-one ROC AUC, 'sample_weight' must be None in this case-kwargs2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[Partial AUC computation not available in multiclass setting, 'max_fpr' must be set to `None`, received `max_fpr=0.5` instead-kwargs3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[multi_class must be in \\('ovo', 'ovr'\\)-kwargs4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_auc_score_non_binary_class PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_multiclass_error[det_curve] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_multiclass_error[precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_multiclass_error[roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_pos_label[det_curve] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_pos_label[precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_pos_label[roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_bytes_pos_label[list-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_bytes_pos_label[list-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_bytes_pos_label[array-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_bytes_pos_label[array-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_zero_sample_weight[det_curve] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_zero_sample_weight[precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_zero_sample_weight[roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve[True] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve[False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve_toydata[True] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve_toydata[False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve_drop_intermediate PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_average_precision_constant_values PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_average_precision_score_binary_pos_label_errors PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_average_precision_score_multilabel_pos_label_errors PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_average_precision_score_multiclass_pos_label_errors PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_score_scale_invariance PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true0-y_score0-expected_fpr0-expected_fnr0] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true1-y_score1-expected_fpr1-expected_fnr1] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true2-y_score2-expected_fpr2-expected_fnr2] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true3-y_score3-expected_fpr3-expected_fnr3] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true4-y_score4-expected_fpr4-expected_fnr4] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true5-y_score5-expected_fpr5-expected_fnr5] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true6-y_score6-expected_fpr6-expected_fnr6] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true7-y_score7-expected_fpr7-expected_fnr7] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true8-y_score8-expected_fpr8-expected_fnr8] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true9-y_score9-expected_fpr9-expected_fnr9] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true10-y_score10-expected_fpr10-expected_fnr10] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true11-y_score11-expected_fpr11-expected_fnr11] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true12-y_score12-expected_fpr12-expected_fnr12] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true13-y_score13-expected_fpr13-expected_fnr13] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true14-y_score14-expected_fpr14-expected_fnr14] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true15-y_score15-expected_fpr15-expected_fnr15] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true16-y_score16-expected_fpr16-expected_fnr16] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true17-y_score17-expected_fpr17-expected_fnr17] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true18-y_score18-expected_fpr18-expected_fnr18] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true19-y_score19-expected_fpr19-expected_fnr19] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true0-y_score0-expected_fpr0-expected_fnr0] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true1-y_score1-expected_fpr1-expected_fnr1] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true2-y_score2-expected_fpr2-expected_fnr2] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true3-y_score3-expected_fpr3-expected_fnr3] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true4-y_score4-expected_fpr4-expected_fnr4] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true5-y_score5-expected_fpr5-expected_fnr5] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true6-y_score6-expected_fpr6-expected_fnr6] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true7-y_score7-expected_fpr7-expected_fnr7] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_sanity_check FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.25] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.5] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.75] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[1] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true0] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true1] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true2] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true3] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true4] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true0-y_pred0-inconsistent numbers of samples] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true1-y_pred1-inconsistent numbers of samples] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true2-y_pred2-Only one class is present in y_true] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true3-y_pred3-Only one class is present in y_true] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true4-y_pred4-pos_label is not specified] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_pos_label FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_lrap_toy] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_lrap_without_tie_and_increasing_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_lrap_only_ties] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_zero_or_all_relevant_labels] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[_my_lrap-check_lrap_toy] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[_my_lrap-check_lrap_without_tie_and_increasing_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[_my_lrap-check_lrap_only_ties] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[_my_lrap-check_zero_or_all_relevant_labels] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_lrap_error_raised PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-2-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-2-2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-2-8] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-2-20] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-5-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-5-2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-5-8] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-5-20] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-10-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-10-2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-10-8] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-10-20] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_lrap_sample_weighting_zero_labels PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_coverage_error PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_coverage_tie_handling PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_coverage_1d_error_message[y_true0-y_score0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_coverage_1d_error_message[y_true1-y_score1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_coverage_1d_error_message[y_true2-y_score2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_loss PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_loss_sparse[csr_matrix] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_loss_sparse[csr_array] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_appropriate_input_shape PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_loss_ties_handling PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_dcg_score PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_dcg_ties PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_ignore_ties_with_k PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_negative_ndarray_error PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_invariant PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_toy_examples[True] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_toy_examples[False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_error_single_document PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_score PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_partial_roc_auc_score PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score[y_true0-1-0.25] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score[y_true1-2-0.5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score[y_true2-3-0.75] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score0-1-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score1-1-0.5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score2-2-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score3-1-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score4-1-0.5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score5-2-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true0-0.75-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true1-0.5-labels1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true2-0.5-labels2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true3-0.75-labels3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true0-0.75-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true1-0.5-labels1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true2-0.5-labels2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true3-0.75-labels3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_increasing PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_ties[y_true0-1-0.25] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_ties[y_true1-2-0.5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_ties[y_true2-3-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_warning[y_true0-4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_warning[y_true1-5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true0-y_score0-None-y type must be 'binary' or 'multiclass', got 'continuous'] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true1-y_score1-None-Number of classes in 'y_true' \\(4\\) not equal to the number of classes in 'y_score' \\(3\\).] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true2-y_score2-labels2-Parameter 'labels' must be unique.] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true3-y_score3-labels3-Parameter 'labels' must be ordered.] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true4-y_score4-labels4-Number of given labels \\(4\\) not equal to the number of classes in 'y_score' \\(3\\).] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true5-y_score5-labels5-'y_true' contains labels not in parameter 'labels'.] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true6-y_score6-None-`y_true` is binary while y_score is 2d with 3 classes. If `y_true` does not contain all the labels, `labels` must be provided] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avg_precision_score_should_allow_csr_matrix_for_y_true_input[csr_matrix] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avg_precision_score_should_allow_csr_matrix_for_y_true_input[csr_array] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes0-average_precision_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes0-det_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes0-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes0-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes1-average_precision_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes1-det_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes1-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes1-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes2-average_precision_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes2-det_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes2-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes2-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-average_precision_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-det_curve] FAILED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_with_probablity_estimates[42] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve_deprecation_warning PASSED

=================================== FAILURES ===================================
______________ test_binary_clf_curve_multiclass_error[det_curve] _______________

curve_func = <function det_curve at 0x7da478cf10d0>

    @pytest.mark.parametrize("curve_func", CURVE_FUNCS)
    def test_binary_clf_curve_multiclass_error(curve_func):
        rng = check_random_state(404)
        y_true = rng.randint(0, 3, size=10)
        y_pred = rng.rand(10)
        msg = "multiclass format is not supported"
        with pytest.raises(ValueError, match=msg):
>           curve_func(y_true, y_pred)
E           Failed: DID NOT RAISE <class 'ValueError'>

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:848: Failed
_____________ test_binary_clf_curve_implicit_pos_label[det_curve] ______________

curve_func = <function det_curve at 0x7da478cf10d0>

    @pytest.mark.parametrize("curve_func", CURVE_FUNCS)
    def test_binary_clf_curve_implicit_pos_label(curve_func):
        # Check that using string class labels raises an informative
        # error for any supported string dtype:
        msg = (
            "y_true takes value in {'a', 'b'} and pos_label is "
            "not specified: either make y_true take "
            "value in {0, 1} or {-1, 1} or pass pos_label "
            "explicitly."
        )
        with pytest.raises(ValueError, match=msg):
>           curve_func(np.array(["a", "b"], dtype="<U1"), [0.0, 1.0])

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:862: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/_ranking.py:201: in det_curve
    return det_curve(y_true, y_score, pos_label, sample_weight)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

y_true = array(['b', 'a'], dtype='<U1'), y_score = array([1., 0.])
pos_label = 1.0, sample_weight = array([1., 1.])

    def det_curve(y_true, y_score, pos_label=None, sample_weight=None):
        """
        Compute error rates for different probability thresholds in a binary classification task.
    
        Parameters:
        - y_true: ndarray of shape (n_samples), representing the true binary labels.
        - y_score: ndarray of shape (n_samples), representing target scores.
        - pos_label: int, float, bool, or str, default=None, indicating the label of the positive class.
        - sample_weight: array-like of shape (n_samples), default=None, representing sample weights.
    
        Returns:
        - fpr: ndarray of shape (n_thresholds), representing the false positive rate.
        - fnr: ndarray of shape (n_thresholds), representing the false negative rate.
        - thresholds: ndarray of shape (n_thresholds), representing decreasing score values.
        """
        y_true = column_or_1d(y_true)
        y_score = column_or_1d(y_score)
        check_consistent_length(y_true, y_score, sample_weight)
        if sample_weight is None:
            sample_weight = np.ones_like(y_true, dtype=np.float64)
        else:
            sample_weight = np.asarray(sample_weight)
        if pos_label is None:
            pos_label = 1.0
        desc_score_indices = np.argsort(y_score, kind='mergesort')[::-1]
        y_score = y_score[desc_score_indices]
        y_true = y_true[desc_score_indices]
        sample_weight = sample_weight[desc_score_indices]
        distinct_value_indices = np.where(np.diff(y_score))[0]
        threshold_idxs = np.r_[distinct_value_indices, y_true.size - 1]
>       tps = stable_cumsum(y_true * sample_weight)[threshold_idxs]
E       numpy._core._exceptions._UFuncNoLoopError: ufunc 'multiply' did not contain a loop with signature matching types (dtype('<U1'), dtype('float64')) -> None

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/temp.py:52: UFuncTypeError
_____________ test_binary_clf_curve_zero_sample_weight[det_curve] ______________

curve_func = <function det_curve at 0x7da478cf10d0>

    @pytest.mark.parametrize("curve_func", CURVE_FUNCS)
    def test_binary_clf_curve_zero_sample_weight(curve_func):
        y_true = [0, 0, 1, 1, 1]
        y_score = [0.1, 0.2, 0.3, 0.4, 0.5]
        sample_weight = [1, 1, 1, 0.5, 0]
    
        result_1 = curve_func(y_true, y_score, sample_weight=sample_weight)
        result_2 = curve_func(y_true[:-1], y_score[:-1], sample_weight=sample_weight[:-1])
    
        for arr_1, arr_2 in zip(result_1, result_2):
>           assert_allclose(arr_1, arr_2)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:903: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46e095c10>, array([0. , 0. , 0. , 0. , 0.5, 1. ]), array([0. , 0. , 0. , 0.5, 1. ]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (6,), (5,) mismatch)
E            ACTUAL: array([0. , 0. , 0. , 0. , 0.5, 1. ])
E            DESIRED: array([0. , 0. , 0. , 0.5, 1. ])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
_____ test_det_curve_toydata[y_true0-y_score0-expected_fpr0-expected_fnr0] _____

y_true = [0, 0, 1], y_score = [0, 0.5, 1], expected_fpr = [0]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46e095940>, array([0. , 0. , 0.5, 1. ]), array([0]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (1,) mismatch)
E            ACTUAL: array([0. , 0. , 0.5, 1. ])
E            DESIRED: array([0])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
_____ test_det_curve_toydata[y_true1-y_score1-expected_fpr1-expected_fnr1] _____

y_true = [0, 0, 1], y_score = [0, 0.25, 0.5], expected_fpr = [0]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd6af0>, array([0. , 0. , 0.5, 1. ]), array([0]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (1,) mismatch)
E            ACTUAL: array([0. , 0. , 0.5, 1. ])
E            DESIRED: array([0])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
_____ test_det_curve_toydata[y_true2-y_score2-expected_fpr2-expected_fnr2] _____

y_true = [0, 0, 1], y_score = [0.5, 0.75, 1], expected_fpr = [0]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd21f0>, array([0. , 0. , 0.5, 1. ]), array([0]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (1,) mismatch)
E            ACTUAL: array([0. , 0. , 0.5, 1. ])
E            DESIRED: array([0])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
_____ test_det_curve_toydata[y_true3-y_score3-expected_fpr3-expected_fnr3] _____

y_true = [0, 0, 1], y_score = [0.25, 0.5, 0.75], expected_fpr = [0]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46e0badc0>, array([0. , 0. , 0.5, 1. ]), array([0]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (1,) mismatch)
E            ACTUAL: array([0. , 0. , 0.5, 1. ])
E            DESIRED: array([0])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
_____ test_det_curve_toydata[y_true4-y_score4-expected_fpr4-expected_fnr4] _____

y_true = [0, 1, 0], y_score = [0, 0.5, 1], expected_fpr = [0.5]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46e095a60>, array([0. , 0.5, 0.5, 1. ]), array([0.5]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (1,) mismatch)
E            ACTUAL: array([0. , 0.5, 0.5, 1. ])
E            DESIRED: array([0.5])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
_____ test_det_curve_toydata[y_true5-y_score5-expected_fpr5-expected_fnr5] _____

y_true = [0, 1, 0], y_score = [0, 0.25, 0.5], expected_fpr = [0.5]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd2e50>, array([0. , 0.5, 0.5, 1. ]), array([0.5]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (1,) mismatch)
E            ACTUAL: array([0. , 0.5, 0.5, 1. ])
E            DESIRED: array([0.5])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
_____ test_det_curve_toydata[y_true6-y_score6-expected_fpr6-expected_fnr6] _____

y_true = [0, 1, 0], y_score = [0.5, 0.75, 1], expected_fpr = [0.5]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd6e50>, array([0. , 0.5, 0.5, 1. ]), array([0.5]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (1,) mismatch)
E            ACTUAL: array([0. , 0.5, 0.5, 1. ])
E            DESIRED: array([0.5])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
_____ test_det_curve_toydata[y_true7-y_score7-expected_fpr7-expected_fnr7] _____

y_true = [0, 1, 0], y_score = [0.25, 0.5, 0.75], expected_fpr = [0.5]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46e0baf70>, array([0. , 0.5, 0.5, 1. ]), array([0.5]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (1,) mismatch)
E            ACTUAL: array([0. , 0.5, 0.5, 1. ])
E            DESIRED: array([0.5])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
_____ test_det_curve_toydata[y_true8-y_score8-expected_fpr8-expected_fnr8] _____

y_true = [0, 1, 1], y_score = [0, 0.5, 1], expected_fpr = [0.0]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd2f70>, array([0., 0., 0., 1.]), array([0.]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (1,) mismatch)
E            ACTUAL: array([0., 0., 0., 1.])
E            DESIRED: array([0.])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
_____ test_det_curve_toydata[y_true9-y_score9-expected_fpr9-expected_fnr9] _____

y_true = [0, 1, 1], y_score = [0, 0.25, 0.5], expected_fpr = [0]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd6dc0>, array([0., 0., 0., 1.]), array([0]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (1,) mismatch)
E            ACTUAL: array([0., 0., 0., 1.])
E            DESIRED: array([0])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
___ test_det_curve_toydata[y_true10-y_score10-expected_fpr10-expected_fnr10] ___

y_true = [0, 1, 1], y_score = [0.5, 0.75, 1], expected_fpr = [0]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46e0badc0>, array([0., 0., 0., 1.]), array([0]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (1,) mismatch)
E            ACTUAL: array([0., 0., 0., 1.])
E            DESIRED: array([0])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
___ test_det_curve_toydata[y_true11-y_score11-expected_fpr11-expected_fnr11] ___

y_true = [0, 1, 1], y_score = [0.25, 0.5, 0.75], expected_fpr = [0]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd6ee0>, array([0., 0., 0., 1.]), array([0]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (1,) mismatch)
E            ACTUAL: array([0., 0., 0., 1.])
E            DESIRED: array([0])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
___ test_det_curve_toydata[y_true12-y_score12-expected_fpr12-expected_fnr12] ___

y_true = [1, 0, 0], y_score = [0, 0.5, 1], expected_fpr = [1, 1, 0.5]
expected_fnr = [0, 1, 1]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46e0bae50>, array([0. , 0.5, 1. , 1. ]), array([1. , 1. , 0.5]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (3,) mismatch)
E            ACTUAL: array([0. , 0.5, 1. , 1. ])
E            DESIRED: array([1. , 1. , 0.5])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
___ test_det_curve_toydata[y_true13-y_score13-expected_fpr13-expected_fnr13] ___

y_true = [1, 0, 0], y_score = [0, 0.25, 0.5], expected_fpr = [1, 1, 0.5]
expected_fnr = [0, 1, 1]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd2c10>, array([0. , 0.5, 1. , 1. ]), array([1. , 1. , 0.5]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (3,) mismatch)
E            ACTUAL: array([0. , 0.5, 1. , 1. ])
E            DESIRED: array([1. , 1. , 0.5])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
___ test_det_curve_toydata[y_true14-y_score14-expected_fpr14-expected_fnr14] ___

y_true = [1, 0, 0], y_score = [0.5, 0.75, 1], expected_fpr = [1, 1, 0.5]
expected_fnr = [0, 1, 1]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46e0bae50>, array([0. , 0.5, 1. , 1. ]), array([1. , 1. , 0.5]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (3,) mismatch)
E            ACTUAL: array([0. , 0.5, 1. , 1. ])
E            DESIRED: array([1. , 1. , 0.5])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
___ test_det_curve_toydata[y_true15-y_score15-expected_fpr15-expected_fnr15] ___

y_true = [1, 0, 0], y_score = [0.25, 0.5, 0.75], expected_fpr = [1, 1, 0.5]
expected_fnr = [0, 1, 1]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46e095c10>, array([0. , 0.5, 1. , 1. ]), array([1. , 1. , 0.5]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (3,) mismatch)
E            ACTUAL: array([0. , 0.5, 1. , 1. ])
E            DESIRED: array([1. , 1. , 0.5])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
___ test_det_curve_toydata[y_true16-y_score16-expected_fpr16-expected_fnr16] ___

y_true = [1, 0, 1], y_score = [0, 0.5, 1], expected_fpr = [1, 1, 0]
expected_fnr = [0, 0.5, 0.5]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd6940>, array([0., 0., 1., 1.]), array([1, 1, 0]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (3,) mismatch)
E            ACTUAL: array([0., 0., 1., 1.])
E            DESIRED: array([1, 1, 0])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
___ test_det_curve_toydata[y_true17-y_score17-expected_fpr17-expected_fnr17] ___

y_true = [1, 0, 1], y_score = [0, 0.25, 0.5], expected_fpr = [1, 1, 0]
expected_fnr = [0, 0.5, 0.5]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd6c10>, array([0., 0., 1., 1.]), array([1, 1, 0]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (3,) mismatch)
E            ACTUAL: array([0., 0., 1., 1.])
E            DESIRED: array([1, 1, 0])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
___ test_det_curve_toydata[y_true18-y_score18-expected_fpr18-expected_fnr18] ___

y_true = [1, 0, 1], y_score = [0.5, 0.75, 1], expected_fpr = [1, 1, 0]
expected_fnr = [0, 0.5, 0.5]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd2040>, array([0., 0., 1., 1.]), array([1, 1, 0]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (3,) mismatch)
E            ACTUAL: array([0., 0., 1., 1.])
E            DESIRED: array([1, 1, 0])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
___ test_det_curve_toydata[y_true19-y_score19-expected_fpr19-expected_fnr19] ___

y_true = [1, 0, 1], y_score = [0.25, 0.5, 0.75], expected_fpr = [1, 1, 0]
expected_fnr = [0, 0.5, 0.5]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([0, 0, 1], [0, 0.5, 1], [0], [0]),
            ([0, 0, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 0, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([0, 1, 0], [0, 0.5, 1], [0.5], [0]),
            ([0, 1, 0], [0, 0.25, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.5, 0.75, 1], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.75], [0.5], [0]),
            ([0, 1, 1], [0, 0.5, 1], [0.0], [0]),
            ([0, 1, 1], [0, 0.25, 0.5], [0], [0]),
            ([0, 1, 1], [0.5, 0.75, 1], [0], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.75], [0], [0]),
            ([1, 0, 0], [0, 0.5, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0, 0.25, 0.5], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.5, 0.75, 1], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 0], [0.25, 0.5, 0.75], [1, 1, 0.5], [0, 1, 1]),
            ([1, 0, 1], [0, 0.5, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0, 0.25, 0.5], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.5, 0.75, 1], [1, 1, 0], [0, 0.5, 0.5]),
            ([1, 0, 1], [0.25, 0.5, 0.75], [1, 1, 0], [0, 0.5, 0.5]),
        ],
    )
    def test_det_curve_toydata(y_true, y_score, expected_fpr, expected_fnr):
        # Check on a batch of small examples.
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1269: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46e0badc0>, array([0., 0., 1., 1.]), array([1, 1, 0]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (4,), (3,) mismatch)
E            ACTUAL: array([0., 0., 1., 1.])
E            DESIRED: array([1, 1, 0])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
__ test_det_curve_tie_handling[y_true0-y_score0-expected_fpr0-expected_fnr0] ___

y_true = [1, 0], y_score = [0.5, 0.5], expected_fpr = [1], expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([1, 0], [0.5, 0.5], [1], [0]),
            ([0, 1], [0.5, 0.5], [1], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.5], [0.5], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.5], [0], [0]),
            ([1, 0, 0], [0.25, 0.5, 0.5], [1], [0]),
            ([1, 0, 1], [0.25, 0.5, 0.5], [1], [0]),
            ([1, 1, 0], [0.25, 0.5, 0.5], [1], [0]),
        ],
    )
    def test_det_curve_tie_handling(y_true, y_score, expected_fpr, expected_fnr):
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1289: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd6dc0>, array([0., 1.]), array([1]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (2,), (1,) mismatch)
E            ACTUAL: array([0., 1.])
E            DESIRED: array([1])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
__ test_det_curve_tie_handling[y_true1-y_score1-expected_fpr1-expected_fnr1] ___

y_true = [0, 1], y_score = [0.5, 0.5], expected_fpr = [1], expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([1, 0], [0.5, 0.5], [1], [0]),
            ([0, 1], [0.5, 0.5], [1], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.5], [0.5], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.5], [0], [0]),
            ([1, 0, 0], [0.25, 0.5, 0.5], [1], [0]),
            ([1, 0, 1], [0.25, 0.5, 0.5], [1], [0]),
            ([1, 1, 0], [0.25, 0.5, 0.5], [1], [0]),
        ],
    )
    def test_det_curve_tie_handling(y_true, y_score, expected_fpr, expected_fnr):
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1289: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd6a60>, array([0., 1.]), array([1]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (2,), (1,) mismatch)
E            ACTUAL: array([0., 1.])
E            DESIRED: array([1])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
__ test_det_curve_tie_handling[y_true2-y_score2-expected_fpr2-expected_fnr2] ___

y_true = [0, 0, 1], y_score = [0.25, 0.5, 0.5], expected_fpr = [0.5]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([1, 0], [0.5, 0.5], [1], [0]),
            ([0, 1], [0.5, 0.5], [1], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.5], [0.5], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.5], [0], [0]),
            ([1, 0, 0], [0.25, 0.5, 0.5], [1], [0]),
            ([1, 0, 1], [0.25, 0.5, 0.5], [1], [0]),
            ([1, 1, 0], [0.25, 0.5, 0.5], [1], [0]),
        ],
    )
    def test_det_curve_tie_handling(y_true, y_score, expected_fpr, expected_fnr):
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1289: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46e0baf70>, array([0. , 0.5, 1. ]), array([0.5]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (3,), (1,) mismatch)
E            ACTUAL: array([0. , 0.5, 1. ])
E            DESIRED: array([0.5])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
__ test_det_curve_tie_handling[y_true3-y_score3-expected_fpr3-expected_fnr3] ___

y_true = [0, 1, 0], y_score = [0.25, 0.5, 0.5], expected_fpr = [0.5]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([1, 0], [0.5, 0.5], [1], [0]),
            ([0, 1], [0.5, 0.5], [1], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.5], [0.5], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.5], [0], [0]),
            ([1, 0, 0], [0.25, 0.5, 0.5], [1], [0]),
            ([1, 0, 1], [0.25, 0.5, 0.5], [1], [0]),
            ([1, 1, 0], [0.25, 0.5, 0.5], [1], [0]),
        ],
    )
    def test_det_curve_tie_handling(y_true, y_score, expected_fpr, expected_fnr):
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1289: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd6ee0>, array([0. , 0.5, 1. ]), array([0.5]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (3,), (1,) mismatch)
E            ACTUAL: array([0. , 0.5, 1. ])
E            DESIRED: array([0.5])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
__ test_det_curve_tie_handling[y_true4-y_score4-expected_fpr4-expected_fnr4] ___

y_true = [0, 1, 1], y_score = [0.25, 0.5, 0.5], expected_fpr = [0]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([1, 0], [0.5, 0.5], [1], [0]),
            ([0, 1], [0.5, 0.5], [1], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.5], [0.5], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.5], [0], [0]),
            ([1, 0, 0], [0.25, 0.5, 0.5], [1], [0]),
            ([1, 0, 1], [0.25, 0.5, 0.5], [1], [0]),
            ([1, 1, 0], [0.25, 0.5, 0.5], [1], [0]),
        ],
    )
    def test_det_curve_tie_handling(y_true, y_score, expected_fpr, expected_fnr):
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1289: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd6c10>, array([0., 0., 1.]), array([0]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (3,), (1,) mismatch)
E            ACTUAL: array([0., 0., 1.])
E            DESIRED: array([0])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
__ test_det_curve_tie_handling[y_true5-y_score5-expected_fpr5-expected_fnr5] ___

y_true = [1, 0, 0], y_score = [0.25, 0.5, 0.5], expected_fpr = [1]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([1, 0], [0.5, 0.5], [1], [0]),
            ([0, 1], [0.5, 0.5], [1], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.5], [0.5], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.5], [0], [0]),
            ([1, 0, 0], [0.25, 0.5, 0.5], [1], [0]),
            ([1, 0, 1], [0.25, 0.5, 0.5], [1], [0]),
            ([1, 1, 0], [0.25, 0.5, 0.5], [1], [0]),
        ],
    )
    def test_det_curve_tie_handling(y_true, y_score, expected_fpr, expected_fnr):
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1289: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46e095ca0>, array([0., 1., 1.]), array([1]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (3,), (1,) mismatch)
E            ACTUAL: array([0., 1., 1.])
E            DESIRED: array([1])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
__ test_det_curve_tie_handling[y_true6-y_score6-expected_fpr6-expected_fnr6] ___

y_true = [1, 0, 1], y_score = [0.25, 0.5, 0.5], expected_fpr = [1]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([1, 0], [0.5, 0.5], [1], [0]),
            ([0, 1], [0.5, 0.5], [1], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.5], [0.5], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.5], [0], [0]),
            ([1, 0, 0], [0.25, 0.5, 0.5], [1], [0]),
            ([1, 0, 1], [0.25, 0.5, 0.5], [1], [0]),
            ([1, 1, 0], [0.25, 0.5, 0.5], [1], [0]),
        ],
    )
    def test_det_curve_tie_handling(y_true, y_score, expected_fpr, expected_fnr):
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1289: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd6c10>, array([0., 1., 1.]), array([1]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (3,), (1,) mismatch)
E            ACTUAL: array([0., 1., 1.])
E            DESIRED: array([1])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
__ test_det_curve_tie_handling[y_true7-y_score7-expected_fpr7-expected_fnr7] ___

y_true = [1, 1, 0], y_score = [0.25, 0.5, 0.5], expected_fpr = [1]
expected_fnr = [0]

    @pytest.mark.parametrize(
        "y_true,y_score,expected_fpr,expected_fnr",
        [
            ([1, 0], [0.5, 0.5], [1], [0]),
            ([0, 1], [0.5, 0.5], [1], [0]),
            ([0, 0, 1], [0.25, 0.5, 0.5], [0.5], [0]),
            ([0, 1, 0], [0.25, 0.5, 0.5], [0.5], [0]),
            ([0, 1, 1], [0.25, 0.5, 0.5], [0], [0]),
            ([1, 0, 0], [0.25, 0.5, 0.5], [1], [0]),
            ([1, 0, 1], [0.25, 0.5, 0.5], [1], [0]),
            ([1, 1, 0], [0.25, 0.5, 0.5], [1], [0]),
        ],
    )
    def test_det_curve_tie_handling(y_true, y_score, expected_fpr, expected_fnr):
        fpr, fnr, _ = det_curve(y_true, y_score)
    
>       assert_allclose(fpr, expected_fpr)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1289: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd6af0>, array([0., 1., 1.]), array([1]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (3,), (1,) mismatch)
E            ACTUAL: array([0., 1., 1.])
E            DESIRED: array([1])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
_________________________ test_det_curve_sanity_check __________________________

    def test_det_curve_sanity_check():
        # Exactly duplicated inputs yield the same result.
>       assert_allclose(
            det_curve([0, 0, 1], [0, 0.5, 1]),
            det_curve([0, 0, 0, 0, 1, 1], [0, 0, 0.5, 0.5, 1, 1]),
        )

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = (array([0. , 0. , 0.5, 1. ]), array([1., 0., 0., 0.]), array([1. , 0.5, 0. ]))
desired = (array([0. , 0. , 0.5, 1. ]), array([1., 0., 0., 0.]), array([1. , 0.5, 0. ]))
rtol = None, atol = 0.0, equal_nan = True, err_msg = '', verbose = True

    def assert_allclose(
        actual, desired, rtol=None, atol=0.0, equal_nan=True, err_msg="", verbose=True
    ):
        """dtype-aware variant of numpy.testing.assert_allclose
    
        This variant introspects the least precise floating point dtype
        in the input argument and automatically sets the relative tolerance
        parameter to 1e-4 float32 and use 1e-7 otherwise (typically float64
        in scikit-learn).
    
        `atol` is always left to 0. by default. It should be adjusted manually
        to an assertion-specific value in case there are null values expected
        in `desired`.
    
        The aggregate tolerance is `atol + rtol * abs(desired)`.
    
        Parameters
        ----------
        actual : array_like
            Array obtained.
        desired : array_like
            Array desired.
        rtol : float, optional, default=None
            Relative tolerance.
            If None, it is set based on the provided arrays' dtypes.
        atol : float, optional, default=0.
            Absolute tolerance.
        equal_nan : bool, optional, default=True
            If True, NaNs will compare equal.
        err_msg : str, optional, default=''
            The error message to be printed in case of failure.
        verbose : bool, optional, default=True
            If True, the conflicting values are appended to the error message.
    
        Raises
        ------
        AssertionError
            If actual and desired are not equal up to specified precision.
    
        See Also
        --------
        numpy.testing.assert_allclose
    
        Examples
        --------
        >>> import numpy as np
        >>> from sklearn.utils._testing import assert_allclose
        >>> x = [1e-5, 1e-3, 1e-1]
        >>> y = np.arccos(np.cos(x))
        >>> assert_allclose(x, y, rtol=1e-5, atol=0)
        >>> a = np.full(shape=10, fill_value=1e-5, dtype=np.float32)
        >>> assert_allclose(a, 1e-5)
        """
        dtypes = []
    
>       actual, desired = np.asanyarray(actual), np.asanyarray(desired)
E       ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (3,) + inhomogeneous part.

../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:232: ValueError
______________________ test_det_curve_constant_scores[0] _______________________

y_score = 0

    @pytest.mark.parametrize("y_score", [(0), (0.25), (0.5), (0.75), (1)])
    def test_det_curve_constant_scores(y_score):
        fpr, fnr, threshold = det_curve(
            y_true=[0, 1, 0, 1, 0, 1], y_score=np.full(6, y_score)
        )
    
>       assert_allclose(fpr, [1])

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1307: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd6af0>, array([0., 1.]), array([1]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (2,), (1,) mismatch)
E            ACTUAL: array([0., 1.])
E            DESIRED: array([1])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
_____________________ test_det_curve_constant_scores[0.25] _____________________

y_score = 0.25

    @pytest.mark.parametrize("y_score", [(0), (0.25), (0.5), (0.75), (1)])
    def test_det_curve_constant_scores(y_score):
        fpr, fnr, threshold = det_curve(
            y_true=[0, 1, 0, 1, 0, 1], y_score=np.full(6, y_score)
        )
    
>       assert_allclose(fpr, [1])

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1307: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46e095a60>, array([0., 1.]), array([1]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (2,), (1,) mismatch)
E            ACTUAL: array([0., 1.])
E            DESIRED: array([1])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
_____________________ test_det_curve_constant_scores[0.5] ______________________

y_score = 0.5

    @pytest.mark.parametrize("y_score", [(0), (0.25), (0.5), (0.75), (1)])
    def test_det_curve_constant_scores(y_score):
        fpr, fnr, threshold = det_curve(
            y_true=[0, 1, 0, 1, 0, 1], y_score=np.full(6, y_score)
        )
    
>       assert_allclose(fpr, [1])

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1307: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46db3f040>, array([0., 1.]), array([1]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (2,), (1,) mismatch)
E            ACTUAL: array([0., 1.])
E            DESIRED: array([1])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
_____________________ test_det_curve_constant_scores[0.75] _____________________

y_score = 0.75

    @pytest.mark.parametrize("y_score", [(0), (0.25), (0.5), (0.75), (1)])
    def test_det_curve_constant_scores(y_score):
        fpr, fnr, threshold = det_curve(
            y_true=[0, 1, 0, 1, 0, 1], y_score=np.full(6, y_score)
        )
    
>       assert_allclose(fpr, [1])

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1307: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46e0bae50>, array([0., 1.]), array([1]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (2,), (1,) mismatch)
E            ACTUAL: array([0., 1.])
E            DESIRED: array([1])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
______________________ test_det_curve_constant_scores[1] _______________________

y_score = 1

    @pytest.mark.parametrize("y_score", [(0), (0.25), (0.5), (0.75), (1)])
    def test_det_curve_constant_scores(y_score):
        fpr, fnr, threshold = det_curve(
            y_true=[0, 1, 0, 1, 0, 1], y_score=np.full(6, y_score)
        )
    
>       assert_allclose(fpr, [1])

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1307: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46db3f820>, array([0., 1.]), array([1]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (2,), (1,) mismatch)
E            ACTUAL: array([0., 1.])
E            DESIRED: array([1])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
____________________ test_det_curve_perfect_scores[y_true0] ____________________

y_true = [0, 0, 0, 0, 0, 1]

    @pytest.mark.parametrize(
        "y_true",
        [
            ([0, 0, 0, 0, 0, 1]),
            ([0, 0, 0, 0, 1, 1]),
            ([0, 0, 0, 1, 1, 1]),
            ([0, 0, 1, 1, 1, 1]),
            ([0, 1, 1, 1, 1, 1]),
        ],
    )
    def test_det_curve_perfect_scores(y_true):
        fpr, fnr, _ = det_curve(y_true=y_true, y_score=y_true)
    
>       assert_allclose(fpr, [0])

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1325: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46e0bae50>, array([0., 0., 1.]), array([0]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (3,), (1,) mismatch)
E            ACTUAL: array([0., 0., 1.])
E            DESIRED: array([0])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
____________________ test_det_curve_perfect_scores[y_true1] ____________________

y_true = [0, 0, 0, 0, 1, 1]

    @pytest.mark.parametrize(
        "y_true",
        [
            ([0, 0, 0, 0, 0, 1]),
            ([0, 0, 0, 0, 1, 1]),
            ([0, 0, 0, 1, 1, 1]),
            ([0, 0, 1, 1, 1, 1]),
            ([0, 1, 1, 1, 1, 1]),
        ],
    )
    def test_det_curve_perfect_scores(y_true):
        fpr, fnr, _ = det_curve(y_true=y_true, y_score=y_true)
    
>       assert_allclose(fpr, [0])

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1325: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da478dd2ee0>, array([0., 0., 1.]), array([0]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (3,), (1,) mismatch)
E            ACTUAL: array([0., 0., 1.])
E            DESIRED: array([0])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
____________________ test_det_curve_perfect_scores[y_true2] ____________________

y_true = [0, 0, 0, 1, 1, 1]

    @pytest.mark.parametrize(
        "y_true",
        [
            ([0, 0, 0, 0, 0, 1]),
            ([0, 0, 0, 0, 1, 1]),
            ([0, 0, 0, 1, 1, 1]),
            ([0, 0, 1, 1, 1, 1]),
            ([0, 1, 1, 1, 1, 1]),
        ],
    )
    def test_det_curve_perfect_scores(y_true):
        fpr, fnr, _ = det_curve(y_true=y_true, y_score=y_true)
    
>       assert_allclose(fpr, [0])

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1325: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46e095af0>, array([0., 0., 1.]), array([0]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (3,), (1,) mismatch)
E            ACTUAL: array([0., 0., 1.])
E            DESIRED: array([0])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
____________________ test_det_curve_perfect_scores[y_true3] ____________________

y_true = [0, 0, 1, 1, 1, 1]

    @pytest.mark.parametrize(
        "y_true",
        [
            ([0, 0, 0, 0, 0, 1]),
            ([0, 0, 0, 0, 1, 1]),
            ([0, 0, 0, 1, 1, 1]),
            ([0, 0, 1, 1, 1, 1]),
            ([0, 1, 1, 1, 1, 1]),
        ],
    )
    def test_det_curve_perfect_scores(y_true):
        fpr, fnr, _ = det_curve(y_true=y_true, y_score=y_true)
    
>       assert_allclose(fpr, [0])

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1325: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46e0baf70>, array([0., 0., 1.]), array([0]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (3,), (1,) mismatch)
E            ACTUAL: array([0., 0., 1.])
E            DESIRED: array([0])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
____________________ test_det_curve_perfect_scores[y_true4] ____________________

y_true = [0, 1, 1, 1, 1, 1]

    @pytest.mark.parametrize(
        "y_true",
        [
            ([0, 0, 0, 0, 0, 1]),
            ([0, 0, 0, 0, 1, 1]),
            ([0, 0, 0, 1, 1, 1]),
            ([0, 0, 1, 1, 1, 1]),
            ([0, 1, 1, 1, 1, 1]),
        ],
    )
    def test_det_curve_perfect_scores(y_true):
        fpr, fnr, _ = det_curve(y_true=y_true, y_score=y_true)
    
>       assert_allclose(fpr, [0])

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1325: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_testing.py:239: in assert_allclose
    np_assert_allclose(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (<function assert_allclose.<locals>.compare at 0x7da46db3fd30>, array([0., 0., 1.]), array([0]))
kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'strict': False, ...}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           AssertionError: 
E           Not equal to tolerance rtol=1e-07, atol=0
E           
E           (shapes (3,), (1,) mismatch)
E            ACTUAL: array([0., 0., 1.])
E            DESIRED: array([0])

/usr/local/lib/python3.9/contextlib.py:79: AssertionError
_ test_det_curve_bad_input[y_true2-y_pred2-Only one class is present in y_true] _

y_true = [0, 0, 0], y_pred = [0, 0.5, 1]
err_msg = 'Only one class is present in y_true'

    @pytest.mark.parametrize(
        "y_true, y_pred, err_msg",
        [
            ([0, 1], [0, 0.5, 1], "inconsistent numbers of samples"),
            ([0, 1, 1], [0, 0.5], "inconsistent numbers of samples"),
            ([0, 0, 0], [0, 0.5, 1], "Only one class is present in y_true"),
            ([1, 1, 1], [0, 0.5, 1], "Only one class is present in y_true"),
            (
                ["cancer", "cancer", "not cancer"],
                [0.2, 0.3, 0.8],
                "pos_label is not specified",
            ),
        ],
    )
    def test_det_curve_bad_input(y_true, y_pred, err_msg):
        # input variables with inconsistent numbers of samples
        with pytest.raises(ValueError, match=err_msg):
>           det_curve(y_true, y_pred)
E           Failed: DID NOT RAISE <class 'ValueError'>

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1346: Failed
_ test_det_curve_bad_input[y_true3-y_pred3-Only one class is present in y_true] _

y_true = [1, 1, 1], y_pred = [0, 0.5, 1]
err_msg = 'Only one class is present in y_true'

    @pytest.mark.parametrize(
        "y_true, y_pred, err_msg",
        [
            ([0, 1], [0, 0.5, 1], "inconsistent numbers of samples"),
            ([0, 1, 1], [0, 0.5], "inconsistent numbers of samples"),
            ([0, 0, 0], [0, 0.5, 1], "Only one class is present in y_true"),
            ([1, 1, 1], [0, 0.5, 1], "Only one class is present in y_true"),
            (
                ["cancer", "cancer", "not cancer"],
                [0.2, 0.3, 0.8],
                "pos_label is not specified",
            ),
        ],
    )
    def test_det_curve_bad_input(y_true, y_pred, err_msg):
        # input variables with inconsistent numbers of samples
        with pytest.raises(ValueError, match=err_msg):
>           det_curve(y_true, y_pred)
E           Failed: DID NOT RAISE <class 'ValueError'>

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1346: Failed
_____ test_det_curve_bad_input[y_true4-y_pred4-pos_label is not specified] _____

y_true = ['cancer', 'cancer', 'not cancer'], y_pred = [0.2, 0.3, 0.8]
err_msg = 'pos_label is not specified'

    @pytest.mark.parametrize(
        "y_true, y_pred, err_msg",
        [
            ([0, 1], [0, 0.5, 1], "inconsistent numbers of samples"),
            ([0, 1, 1], [0, 0.5], "inconsistent numbers of samples"),
            ([0, 0, 0], [0, 0.5, 1], "Only one class is present in y_true"),
            ([1, 1, 1], [0, 0.5, 1], "Only one class is present in y_true"),
            (
                ["cancer", "cancer", "not cancer"],
                [0.2, 0.3, 0.8],
                "pos_label is not specified",
            ),
        ],
    )
    def test_det_curve_bad_input(y_true, y_pred, err_msg):
        # input variables with inconsistent numbers of samples
        with pytest.raises(ValueError, match=err_msg):
>           det_curve(y_true, y_pred)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1346: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/_ranking.py:201: in det_curve
    return det_curve(y_true, y_score, pos_label, sample_weight)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

y_true = array(['not cancer', 'cancer', 'cancer'], dtype='<U10')
y_score = array([0.8, 0.3, 0.2]), pos_label = 1.0
sample_weight = array([1., 1., 1.])

    def det_curve(y_true, y_score, pos_label=None, sample_weight=None):
        """
        Compute error rates for different probability thresholds in a binary classification task.
    
        Parameters:
        - y_true: ndarray of shape (n_samples), representing the true binary labels.
        - y_score: ndarray of shape (n_samples), representing target scores.
        - pos_label: int, float, bool, or str, default=None, indicating the label of the positive class.
        - sample_weight: array-like of shape (n_samples), default=None, representing sample weights.
    
        Returns:
        - fpr: ndarray of shape (n_thresholds), representing the false positive rate.
        - fnr: ndarray of shape (n_thresholds), representing the false negative rate.
        - thresholds: ndarray of shape (n_thresholds), representing decreasing score values.
        """
        y_true = column_or_1d(y_true)
        y_score = column_or_1d(y_score)
        check_consistent_length(y_true, y_score, sample_weight)
        if sample_weight is None:
            sample_weight = np.ones_like(y_true, dtype=np.float64)
        else:
            sample_weight = np.asarray(sample_weight)
        if pos_label is None:
            pos_label = 1.0
        desc_score_indices = np.argsort(y_score, kind='mergesort')[::-1]
        y_score = y_score[desc_score_indices]
        y_true = y_true[desc_score_indices]
        sample_weight = sample_weight[desc_score_indices]
        distinct_value_indices = np.where(np.diff(y_score))[0]
        threshold_idxs = np.r_[distinct_value_indices, y_true.size - 1]
>       tps = stable_cumsum(y_true * sample_weight)[threshold_idxs]
E       numpy._core._exceptions._UFuncNoLoopError: ufunc 'multiply' did not contain a loop with signature matching types (dtype('<U10'), dtype('float64')) -> None

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/temp.py:52: UFuncTypeError
___________________________ test_det_curve_pos_label ___________________________

    def test_det_curve_pos_label():
        y_true = ["cancer"] * 3 + ["not cancer"] * 7
        y_pred_pos_not_cancer = np.array([0.1, 0.4, 0.6, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.9])
        y_pred_pos_cancer = 1 - y_pred_pos_not_cancer
    
>       fpr_pos_cancer, fnr_pos_cancer, th_pos_cancer = det_curve(
            y_true,
            y_pred_pos_cancer,
            pos_label="cancer",
        )

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:1354: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/_ranking.py:201: in det_curve
    return det_curve(y_true, y_score, pos_label, sample_weight)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

y_true = array(['cancer', 'not cancer', 'not cancer', 'not cancer', 'cancer',
       'not cancer', 'not cancer', 'cancer', 'not cancer', 'not cancer'],
      dtype='<U10')
y_score = array([0.9, 0.8, 0.7, 0.6, 0.6, 0.5, 0.4, 0.4, 0.3, 0.1])
pos_label = 'cancer'
sample_weight = array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])

    def det_curve(y_true, y_score, pos_label=None, sample_weight=None):
        """
        Compute error rates for different probability thresholds in a binary classification task.
    
        Parameters:
        - y_true: ndarray of shape (n_samples), representing the true binary labels.
        - y_score: ndarray of shape (n_samples), representing target scores.
        - pos_label: int, float, bool, or str, default=None, indicating the label of the positive class.
        - sample_weight: array-like of shape (n_samples), default=None, representing sample weights.
    
        Returns:
        - fpr: ndarray of shape (n_thresholds), representing the false positive rate.
        - fnr: ndarray of shape (n_thresholds), representing the false negative rate.
        - thresholds: ndarray of shape (n_thresholds), representing decreasing score values.
        """
        y_true = column_or_1d(y_true)
        y_score = column_or_1d(y_score)
        check_consistent_length(y_true, y_score, sample_weight)
        if sample_weight is None:
            sample_weight = np.ones_like(y_true, dtype=np.float64)
        else:
            sample_weight = np.asarray(sample_weight)
        if pos_label is None:
            pos_label = 1.0
        desc_score_indices = np.argsort(y_score, kind='mergesort')[::-1]
        y_score = y_score[desc_score_indices]
        y_true = y_true[desc_score_indices]
        sample_weight = sample_weight[desc_score_indices]
        distinct_value_indices = np.where(np.diff(y_score))[0]
        threshold_idxs = np.r_[distinct_value_indices, y_true.size - 1]
>       tps = stable_cumsum(y_true * sample_weight)[threshold_idxs]
E       numpy._core._exceptions._UFuncNoLoopError: ufunc 'multiply' did not contain a loop with signature matching types (dtype('<U10'), dtype('float64')) -> None

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/temp.py:52: UFuncTypeError
___________ test_ranking_metric_pos_label_types[classes3-det_curve] ____________

metric = <function det_curve at 0x7da478cf10d0>, classes = ('zero', 'one')

    @pytest.mark.parametrize(
        "metric", [average_precision_score, det_curve, precision_recall_curve, roc_curve]
    )
    @pytest.mark.parametrize(
        "classes", [(False, True), (0, 1), (0.0, 1.0), ("zero", "one")]
    )
    def test_ranking_metric_pos_label_types(metric, classes):
        """Check that the metric works with different types of `pos_label`.
    
        We can expect `pos_label` to be a bool, an integer, a float, a string.
        No error should be raised for those types.
        """
        rng = np.random.RandomState(42)
        n_samples, pos_label = 10, classes[-1]
        y_true = rng.choice(classes, size=n_samples, replace=True)
        y_proba = rng.rand(n_samples)
>       result = metric(y_true, y_proba, pos_label=pos_label)

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py:2229: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/scikit-learn/scikit-learn/sklearn/utils/_param_validation.py:216: in wrapper
    return func(*args, **kwargs)
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/_ranking.py:201: in det_curve
    return det_curve(y_true, y_score, pos_label, sample_weight)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

y_true = array(['zero', 'zero', 'zero', 'zero', 'zero', 'zero', 'one', 'zero',
       'one', 'one'], dtype='<U4')
y_score = array([0.96990985, 0.86617615, 0.83244264, 0.70807258, 0.60111501,
       0.21233911, 0.18182497, 0.15599452, 0.05808361, 0.02058449])
pos_label = 'one'
sample_weight = array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])

    def det_curve(y_true, y_score, pos_label=None, sample_weight=None):
        """
        Compute error rates for different probability thresholds in a binary classification task.
    
        Parameters:
        - y_true: ndarray of shape (n_samples), representing the true binary labels.
        - y_score: ndarray of shape (n_samples), representing target scores.
        - pos_label: int, float, bool, or str, default=None, indicating the label of the positive class.
        - sample_weight: array-like of shape (n_samples), default=None, representing sample weights.
    
        Returns:
        - fpr: ndarray of shape (n_thresholds), representing the false positive rate.
        - fnr: ndarray of shape (n_thresholds), representing the false negative rate.
        - thresholds: ndarray of shape (n_thresholds), representing decreasing score values.
        """
        y_true = column_or_1d(y_true)
        y_score = column_or_1d(y_score)
        check_consistent_length(y_true, y_score, sample_weight)
        if sample_weight is None:
            sample_weight = np.ones_like(y_true, dtype=np.float64)
        else:
            sample_weight = np.asarray(sample_weight)
        if pos_label is None:
            pos_label = 1.0
        desc_score_indices = np.argsort(y_score, kind='mergesort')[::-1]
        y_score = y_score[desc_score_indices]
        y_true = y_true[desc_score_indices]
        sample_weight = sample_weight[desc_score_indices]
        distinct_value_indices = np.where(np.diff(y_score))[0]
        threshold_idxs = np.r_[distinct_value_indices, y_true.size - 1]
>       tps = stable_cumsum(y_true * sample_weight)[threshold_idxs]
E       numpy._core._exceptions._UFuncNoLoopError: ufunc 'multiply' did not contain a loop with signature matching types (dtype('<U4'), dtype('float64')) -> None

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/temp.py:52: UFuncTypeError
=========================== short test summary info ============================
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_multiclass_error[det_curve]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_pos_label[det_curve]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_zero_sample_weight[det_curve]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true0-y_score0-expected_fpr0-expected_fnr0]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true1-y_score1-expected_fpr1-expected_fnr1]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true2-y_score2-expected_fpr2-expected_fnr2]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true3-y_score3-expected_fpr3-expected_fnr3]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true4-y_score4-expected_fpr4-expected_fnr4]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true5-y_score5-expected_fpr5-expected_fnr5]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true6-y_score6-expected_fpr6-expected_fnr6]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true7-y_score7-expected_fpr7-expected_fnr7]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true8-y_score8-expected_fpr8-expected_fnr8]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true9-y_score9-expected_fpr9-expected_fnr9]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true10-y_score10-expected_fpr10-expected_fnr10]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true11-y_score11-expected_fpr11-expected_fnr11]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true12-y_score12-expected_fpr12-expected_fnr12]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true13-y_score13-expected_fpr13-expected_fnr13]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true14-y_score14-expected_fpr14-expected_fnr14]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true15-y_score15-expected_fpr15-expected_fnr15]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true16-y_score16-expected_fpr16-expected_fnr16]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true17-y_score17-expected_fpr17-expected_fnr17]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true18-y_score18-expected_fpr18-expected_fnr18]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true19-y_score19-expected_fpr19-expected_fnr19]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true0-y_score0-expected_fpr0-expected_fnr0]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true1-y_score1-expected_fpr1-expected_fnr1]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true2-y_score2-expected_fpr2-expected_fnr2]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true3-y_score3-expected_fpr3-expected_fnr3]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true4-y_score4-expected_fpr4-expected_fnr4]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true5-y_score5-expected_fpr5-expected_fnr5]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true6-y_score6-expected_fpr6-expected_fnr6]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true7-y_score7-expected_fpr7-expected_fnr7]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_sanity_check
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.25]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.5]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.75]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[1]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true0]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true1]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true2]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true3]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true4]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true2-y_pred2-Only one class is present in y_true]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true3-y_pred3-Only one class is present in y_true]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true4-y_pred4-pos_label is not specified]
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_pos_label
FAILED ../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-det_curve]
================== 47 failed, 168 passed, 7 warnings in 3.29s ==================


Final Test Result:
============================= test session starts ==============================
platform linux -- Python 3.9.0, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/scikit-learn/scikit-learn/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/scikit-learn/scikit-learn
configfile: setup.cfg
plugins: cov-6.0.0
collecting ... collected 215 items

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve[True] I: Seeding RNGs with 447524424
PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve[False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_end_points PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_returns_consistency PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_multi PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_confidence PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_hard PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_one_label PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_toydata PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_drop_intermediate PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_fpr_tpr_increasing PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_auc PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_auc_errors PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true0-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true1-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true2-labels2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true3-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata_binary[y_true0-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata_binary[y_true1-labels1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true0-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true1-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true2-labels2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true3-labels3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_perfect_imperfect_chance_multiclass_roc_auc[ovr-macro] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_perfect_imperfect_chance_multiclass_roc_auc[ovr-micro] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_perfect_imperfect_chance_multiclass_roc_auc[ovo-macro] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_micro_averaged_ovr_roc_auc[42] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Parameter 'labels' must be unique-y_true0-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Parameter 'labels' must be unique-y_true1-labels1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of classes in y_true not equal to the number of columns in 'y_score'-y_true2-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Parameter 'labels' must be ordered-y_true3-labels3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of given labels, 2, not equal to the number of columns in 'y_score', 3-y_true4-labels4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of given labels, 2, not equal to the number of columns in 'y_score', 3-y_true5-labels5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of given labels, 4, not equal to the number of columns in 'y_score', 3-y_true6-labels6] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of given labels, 4, not equal to the number of columns in 'y_score', 3-y_true7-labels7] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-'y_true' contains labels not in parameter 'labels'-y_true8-labels8] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-'y_true' contains labels not in parameter 'labels'-y_true9-labels9] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-'y_true' contains labels not in parameter 'labels'-y_true10-labels10] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Parameter 'labels' must be unique-y_true0-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Parameter 'labels' must be unique-y_true1-labels1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of classes in y_true not equal to the number of columns in 'y_score'-y_true2-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Parameter 'labels' must be ordered-y_true3-labels3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of given labels, 2, not equal to the number of columns in 'y_score', 3-y_true4-labels4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of given labels, 2, not equal to the number of columns in 'y_score', 3-y_true5-labels5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of given labels, 4, not equal to the number of columns in 'y_score', 3-y_true6-labels6] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of given labels, 4, not equal to the number of columns in 'y_score', 3-y_true7-labels7] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-'y_true' contains labels not in parameter 'labels'-y_true8-labels8] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-'y_true' contains labels not in parameter 'labels'-y_true9-labels9] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-'y_true' contains labels not in parameter 'labels'-y_true10-labels10] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[average must be one of \\('macro', 'weighted', None\\) for multiclass problems-kwargs0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[average must be one of \\('micro', 'macro', 'weighted', None\\) for multiclass problems-kwargs1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[sample_weight is not supported for multiclass one-vs-one ROC AUC, 'sample_weight' must be None in this case-kwargs2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[Partial AUC computation not available in multiclass setting, 'max_fpr' must be set to `None`, received `max_fpr=0.5` instead-kwargs3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[multi_class must be in \\('ovo', 'ovr'\\)-kwargs4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_auc_score_non_binary_class PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_multiclass_error[det_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_multiclass_error[precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_multiclass_error[roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_pos_label[det_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_pos_label[precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_pos_label[roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_bytes_pos_label[list-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_bytes_pos_label[list-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_bytes_pos_label[array-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_bytes_pos_label[array-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_zero_sample_weight[det_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_zero_sample_weight[precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_zero_sample_weight[roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve[True] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve[False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve_toydata[True] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve_toydata[False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve_drop_intermediate PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_average_precision_constant_values PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_average_precision_score_binary_pos_label_errors PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_average_precision_score_multilabel_pos_label_errors PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_average_precision_score_multiclass_pos_label_errors PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_score_scale_invariance PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true0-y_score0-expected_fpr0-expected_fnr0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true1-y_score1-expected_fpr1-expected_fnr1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true2-y_score2-expected_fpr2-expected_fnr2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true3-y_score3-expected_fpr3-expected_fnr3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true4-y_score4-expected_fpr4-expected_fnr4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true5-y_score5-expected_fpr5-expected_fnr5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true6-y_score6-expected_fpr6-expected_fnr6] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true7-y_score7-expected_fpr7-expected_fnr7] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true8-y_score8-expected_fpr8-expected_fnr8] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true9-y_score9-expected_fpr9-expected_fnr9] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true10-y_score10-expected_fpr10-expected_fnr10] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true11-y_score11-expected_fpr11-expected_fnr11] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true12-y_score12-expected_fpr12-expected_fnr12] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true13-y_score13-expected_fpr13-expected_fnr13] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true14-y_score14-expected_fpr14-expected_fnr14] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true15-y_score15-expected_fpr15-expected_fnr15] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true16-y_score16-expected_fpr16-expected_fnr16] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true17-y_score17-expected_fpr17-expected_fnr17] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true18-y_score18-expected_fpr18-expected_fnr18] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true19-y_score19-expected_fpr19-expected_fnr19] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true0-y_score0-expected_fpr0-expected_fnr0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true1-y_score1-expected_fpr1-expected_fnr1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true2-y_score2-expected_fpr2-expected_fnr2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true3-y_score3-expected_fpr3-expected_fnr3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true4-y_score4-expected_fpr4-expected_fnr4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true5-y_score5-expected_fpr5-expected_fnr5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true6-y_score6-expected_fpr6-expected_fnr6] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true7-y_score7-expected_fpr7-expected_fnr7] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_sanity_check PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.25] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.75] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true0-y_pred0-inconsistent numbers of samples] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true1-y_pred1-inconsistent numbers of samples] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true2-y_pred2-Only one class is present in y_true] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true3-y_pred3-Only one class is present in y_true] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true4-y_pred4-pos_label is not specified] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_pos_label PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_lrap_toy] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_lrap_without_tie_and_increasing_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_lrap_only_ties] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_zero_or_all_relevant_labels] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[_my_lrap-check_lrap_toy] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[_my_lrap-check_lrap_without_tie_and_increasing_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[_my_lrap-check_lrap_only_ties] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[_my_lrap-check_zero_or_all_relevant_labels] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_lrap_error_raised PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-2-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-2-2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-2-8] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-2-20] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-5-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-5-2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-5-8] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-5-20] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-10-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-10-2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-10-8] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-10-20] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_lrap_sample_weighting_zero_labels PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_coverage_error PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_coverage_tie_handling PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_coverage_1d_error_message[y_true0-y_score0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_coverage_1d_error_message[y_true1-y_score1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_coverage_1d_error_message[y_true2-y_score2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_loss PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_loss_sparse[csr_matrix] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_loss_sparse[csr_array] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_appropriate_input_shape PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_loss_ties_handling PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_dcg_score PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_dcg_ties PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_ignore_ties_with_k PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_negative_ndarray_error PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_invariant PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_toy_examples[True] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_toy_examples[False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_error_single_document PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_score PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_partial_roc_auc_score PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score[y_true0-1-0.25] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score[y_true1-2-0.5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score[y_true2-3-0.75] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score0-1-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score1-1-0.5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score2-2-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score3-1-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score4-1-0.5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score5-2-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true0-0.75-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true1-0.5-labels1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true2-0.5-labels2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true3-0.75-labels3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true0-0.75-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true1-0.5-labels1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true2-0.5-labels2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true3-0.75-labels3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_increasing PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_ties[y_true0-1-0.25] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_ties[y_true1-2-0.5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_ties[y_true2-3-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_warning[y_true0-4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_warning[y_true1-5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true0-y_score0-None-y type must be 'binary' or 'multiclass', got 'continuous'] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true1-y_score1-None-Number of classes in 'y_true' \\(4\\) not equal to the number of classes in 'y_score' \\(3\\).] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true2-y_score2-labels2-Parameter 'labels' must be unique.] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true3-y_score3-labels3-Parameter 'labels' must be ordered.] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true4-y_score4-labels4-Number of given labels \\(4\\) not equal to the number of classes in 'y_score' \\(3\\).] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true5-y_score5-labels5-'y_true' contains labels not in parameter 'labels'.] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true6-y_score6-None-`y_true` is binary while y_score is 2d with 3 classes. If `y_true` does not contain all the labels, `labels` must be provided] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avg_precision_score_should_allow_csr_matrix_for_y_true_input[csr_matrix] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avg_precision_score_should_allow_csr_matrix_for_y_true_input[csr_array] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes0-average_precision_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes0-det_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes0-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes0-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes1-average_precision_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes1-det_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes1-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes1-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes2-average_precision_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes2-det_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes2-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes2-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-average_precision_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-det_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_with_probablity_estimates[42] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve_deprecation_warning PASSED

======================= 215 passed, 3 warnings in 1.04s ========================


Initial Result:
============================= test session starts ==============================
platform linux -- Python 3.9.0, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/scikit-learn/scikit-learn/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/scikit-learn/scikit-learn
configfile: setup.cfg
plugins: cov-6.0.0
collecting ... collected 215 items

../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve[True] I: Seeding RNGs with 1246547459
PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve[False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_end_points PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_returns_consistency PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_multi PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_confidence PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_hard PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_one_label PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_toydata PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_drop_intermediate PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_fpr_tpr_increasing PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_auc PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_auc_errors PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true0-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true1-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true2-labels2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true3-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata_binary[y_true0-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata_binary[y_true1-labels1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true0-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true1-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true2-labels2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true3-labels3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_perfect_imperfect_chance_multiclass_roc_auc[ovr-macro] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_perfect_imperfect_chance_multiclass_roc_auc[ovr-micro] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_perfect_imperfect_chance_multiclass_roc_auc[ovo-macro] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_micro_averaged_ovr_roc_auc[42] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Parameter 'labels' must be unique-y_true0-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Parameter 'labels' must be unique-y_true1-labels1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of classes in y_true not equal to the number of columns in 'y_score'-y_true2-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Parameter 'labels' must be ordered-y_true3-labels3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of given labels, 2, not equal to the number of columns in 'y_score', 3-y_true4-labels4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of given labels, 2, not equal to the number of columns in 'y_score', 3-y_true5-labels5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of given labels, 4, not equal to the number of columns in 'y_score', 3-y_true6-labels6] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number of given labels, 4, not equal to the number of columns in 'y_score', 3-y_true7-labels7] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-'y_true' contains labels not in parameter 'labels'-y_true8-labels8] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-'y_true' contains labels not in parameter 'labels'-y_true9-labels9] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-'y_true' contains labels not in parameter 'labels'-y_true10-labels10] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Parameter 'labels' must be unique-y_true0-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Parameter 'labels' must be unique-y_true1-labels1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of classes in y_true not equal to the number of columns in 'y_score'-y_true2-None] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Parameter 'labels' must be ordered-y_true3-labels3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of given labels, 2, not equal to the number of columns in 'y_score', 3-y_true4-labels4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of given labels, 2, not equal to the number of columns in 'y_score', 3-y_true5-labels5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of given labels, 4, not equal to the number of columns in 'y_score', 3-y_true6-labels6] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number of given labels, 4, not equal to the number of columns in 'y_score', 3-y_true7-labels7] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-'y_true' contains labels not in parameter 'labels'-y_true8-labels8] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-'y_true' contains labels not in parameter 'labels'-y_true9-labels9] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-'y_true' contains labels not in parameter 'labels'-y_true10-labels10] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[average must be one of \\('macro', 'weighted', None\\) for multiclass problems-kwargs0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[average must be one of \\('micro', 'macro', 'weighted', None\\) for multiclass problems-kwargs1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[sample_weight is not supported for multiclass one-vs-one ROC AUC, 'sample_weight' must be None in this case-kwargs2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[Partial AUC computation not available in multiclass setting, 'max_fpr' must be set to `None`, received `max_fpr=0.5` instead-kwargs3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[multi_class must be in \\('ovo', 'ovr'\\)-kwargs4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_auc_score_non_binary_class PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_multiclass_error[det_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_multiclass_error[precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_multiclass_error[roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_pos_label[det_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_pos_label[precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_pos_label[roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_bytes_pos_label[list-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_bytes_pos_label[list-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_bytes_pos_label[array-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_bytes_pos_label[array-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_zero_sample_weight[det_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_zero_sample_weight[precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_zero_sample_weight[roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve[True] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve[False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve_toydata[True] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve_toydata[False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve_drop_intermediate PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_average_precision_constant_values PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_average_precision_score_binary_pos_label_errors PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_average_precision_score_multilabel_pos_label_errors PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_average_precision_score_multiclass_pos_label_errors PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_score_scale_invariance PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true0-y_score0-expected_fpr0-expected_fnr0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true1-y_score1-expected_fpr1-expected_fnr1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true2-y_score2-expected_fpr2-expected_fnr2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true3-y_score3-expected_fpr3-expected_fnr3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true4-y_score4-expected_fpr4-expected_fnr4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true5-y_score5-expected_fpr5-expected_fnr5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true6-y_score6-expected_fpr6-expected_fnr6] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true7-y_score7-expected_fpr7-expected_fnr7] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true8-y_score8-expected_fpr8-expected_fnr8] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true9-y_score9-expected_fpr9-expected_fnr9] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true10-y_score10-expected_fpr10-expected_fnr10] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true11-y_score11-expected_fpr11-expected_fnr11] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true12-y_score12-expected_fpr12-expected_fnr12] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true13-y_score13-expected_fpr13-expected_fnr13] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true14-y_score14-expected_fpr14-expected_fnr14] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true15-y_score15-expected_fpr15-expected_fnr15] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true16-y_score16-expected_fpr16-expected_fnr16] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true17-y_score17-expected_fpr17-expected_fnr17] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true18-y_score18-expected_fpr18-expected_fnr18] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true19-y_score19-expected_fpr19-expected_fnr19] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true0-y_score0-expected_fpr0-expected_fnr0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true1-y_score1-expected_fpr1-expected_fnr1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true2-y_score2-expected_fpr2-expected_fnr2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true3-y_score3-expected_fpr3-expected_fnr3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true4-y_score4-expected_fpr4-expected_fnr4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true5-y_score5-expected_fpr5-expected_fnr5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true6-y_score6-expected_fpr6-expected_fnr6] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true7-y_score7-expected_fpr7-expected_fnr7] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_sanity_check PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.25] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.75] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true0-y_pred0-inconsistent numbers of samples] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true1-y_pred1-inconsistent numbers of samples] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true2-y_pred2-Only one class is present in y_true] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true3-y_pred3-Only one class is present in y_true] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true4-y_pred4-pos_label is not specified] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_det_curve_pos_label PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_lrap_toy] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_lrap_without_tie_and_increasing_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_lrap_only_ties] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_zero_or_all_relevant_labels] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[_my_lrap-check_lrap_toy] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[_my_lrap-check_lrap_without_tie_and_increasing_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[_my_lrap-check_lrap_only_ties] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[_my_lrap-check_zero_or_all_relevant_labels] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_lrap_error_raised PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-2-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-2-2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-2-8] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-2-20] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-5-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-5-2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-5-8] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-5-20] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-10-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-10-2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-10-8] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-10-20] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_lrap_sample_weighting_zero_labels PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_coverage_error PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_coverage_tie_handling PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_coverage_1d_error_message[y_true0-y_score0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_coverage_1d_error_message[y_true1-y_score1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_coverage_1d_error_message[y_true2-y_score2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_loss PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_loss_sparse[csr_matrix] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_loss_sparse[csr_array] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_appropriate_input_shape PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_loss_ties_handling PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_dcg_score PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_dcg_ties PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_ignore_ties_with_k PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_negative_ndarray_error PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_invariant PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_toy_examples[True] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_toy_examples[False] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_error_single_document PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ndcg_score PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_partial_roc_auc_score PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score[y_true0-1-0.25] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score[y_true1-2-0.5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score[y_true2-3-0.75] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score0-1-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score1-1-0.5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score2-2-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score3-1-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score4-1-0.5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score5-2-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true0-0.75-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true1-0.5-labels1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true2-0.5-labels2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true3-0.75-labels3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true0-0.75-labels0] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true1-0.5-labels1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true2-0.5-labels2] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true3-0.75-labels3] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_increasing PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_ties[y_true0-1-0.25] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_ties[y_true1-2-0.5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_ties[y_true2-3-1] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_warning[y_true0-4] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_warning[y_true1-5] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true0-y_score0-None-y type must be 'binary' or 'multiclass', got 'continuous'] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true1-y_score1-None-Number of classes in 'y_true' \\(4\\) not equal to the number of classes in 'y_score' \\(3\\).] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true2-y_score2-labels2-Parameter 'labels' must be unique.] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true3-y_score3-labels3-Parameter 'labels' must be ordered.] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true4-y_score4-labels4-Number of given labels \\(4\\) not equal to the number of classes in 'y_score' \\(3\\).] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true5-y_score5-labels5-'y_true' contains labels not in parameter 'labels'.] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true6-y_score6-None-`y_true` is binary while y_score is 2d with 3 classes. If `y_true` does not contain all the labels, `labels` must be provided] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avg_precision_score_should_allow_csr_matrix_for_y_true_input[csr_matrix] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_label_ranking_avg_precision_score_should_allow_csr_matrix_for_y_true_input[csr_array] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes0-average_precision_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes0-det_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes0-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes0-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes1-average_precision_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes1-det_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes1-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes1-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes2-average_precision_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes2-det_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes2-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes2-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-average_precision_score] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-det_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-precision_recall_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-roc_curve] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_roc_curve_with_probablity_estimates[42] PASSED
../publishablew/scikit-learn/scikit-learn/sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve_deprecation_warning PASSED

======================= 215 passed, 3 warnings in 1.04s ========================
