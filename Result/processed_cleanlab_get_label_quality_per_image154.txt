output file:
processed_cleanlab_get_label_quality_per_image154.json
function:
_get_label_quality_per_image
Error Cases:

number of examples processed for estimating thresholds:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 3/3 [00:00<00:00, 13203.48it/s]

number of examples processed for checking labels:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for checking labels: 100%|██████████| 3/3 [00:00<00:00, 40.50it/s]

number of examples processed for estimating thresholds:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 3/3 [00:00<00:00, 10010.27it/s]

number of examples processed for checking labels:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for checking labels: 100%|██████████| 3/3 [00:00<00:00, 49.72it/s]

number of examples processed for estimating thresholds:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 3/3 [00:00<00:00, 14734.09it/s]

number of examples processed for checking labels:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for checking labels: 100%|██████████| 3/3 [00:00<00:00, 50.27it/s]

number of examples processed for estimating thresholds:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 3/3 [00:00<00:00, 12064.15it/s]

number of examples processed for checking labels:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for checking labels: 100%|██████████| 3/3 [00:00<00:00, 45.07it/s]

number of examples processed for estimating thresholds:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 3/3 [00:00<00:00, 9605.28it/s]

number of examples processed for checking labels:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for checking labels: 100%|██████████| 3/3 [00:00<00:00, 23.99it/s]
number of examples processed for checking labels: 100%|██████████| 3/3 [00:00<00:00, 23.95it/s]

number of examples processed for estimating thresholds:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 3/3 [00:00<00:00, 11491.24it/s]

number of examples processed for checking labels:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for checking labels: 100%|██████████| 3/3 [00:00<00:00, 148.46it/s]

number of examples processed for estimating thresholds:   0%|          | 0/100 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 100/100 [00:00<00:00, 16373.77it/s]

number of examples processed for checking labels:   0%|          | 0/100 [00:00<?, ?it/s]
number of examples processed for checking labels:   2%|▏         | 2/100 [00:00<00:05, 16.87it/s]
number of examples processed for checking labels:   4%|▍         | 4/100 [00:00<00:05, 16.75it/s]
number of examples processed for checking labels:   6%|▌         | 6/100 [00:00<00:05, 16.63it/s]
number of examples processed for checking labels:   8%|▊         | 8/100 [00:00<00:05, 16.78it/s]
number of examples processed for checking labels:  10%|█         | 10/100 [00:00<00:05, 16.62it/s]
number of examples processed for checking labels:  12%|█▏        | 12/100 [00:00<00:05, 16.63it/s]
number of examples processed for checking labels:  14%|█▍        | 14/100 [00:00<00:05, 16.68it/s]
number of examples processed for checking labels:  16%|█▌        | 16/100 [00:00<00:05, 16.65it/s]
number of examples processed for checking labels:  18%|█▊        | 18/100 [00:01<00:04, 16.68it/s]
number of examples processed for checking labels:  20%|██        | 20/100 [00:01<00:04, 16.82it/s]
number of examples processed for checking labels:  22%|██▏       | 22/100 [00:01<00:04, 16.72it/s]
number of examples processed for checking labels:  24%|██▍       | 24/100 [00:01<00:04, 16.72it/s]
number of examples processed for checking labels:  26%|██▌       | 26/100 [00:01<00:04, 16.70it/s]
number of examples processed for checking labels:  28%|██▊       | 28/100 [00:01<00:04, 16.71it/s]
number of examples processed for checking labels:  30%|███       | 30/100 [00:01<00:04, 16.74it/s]
number of examples processed for checking labels:  32%|███▏      | 32/100 [00:01<00:04, 16.64it/s]
number of examples processed for checking labels:  34%|███▍      | 34/100 [00:02<00:03, 16.71it/s]
number of examples processed for checking labels:  36%|███▌      | 36/100 [00:02<00:03, 16.69it/s]
number of examples processed for checking labels:  38%|███▊      | 38/100 [00:02<00:03, 16.77it/s]
number of examples processed for checking labels:  40%|████      | 40/100 [00:02<00:03, 16.70it/s]
number of examples processed for checking labels:  42%|████▏     | 42/100 [00:02<00:03, 16.69it/s]
number of examples processed for checking labels:  44%|████▍     | 44/100 [00:02<00:03, 16.71it/s]
number of examples processed for checking labels:  46%|████▌     | 46/100 [00:02<00:03, 16.72it/s]
number of examples processed for checking labels:  48%|████▊     | 48/100 [00:02<00:03, 16.82it/s]
number of examples processed for checking labels:  50%|█████     | 50/100 [00:02<00:02, 16.68it/s]
number of examples processed for checking labels:  52%|█████▏    | 52/100 [00:03<00:02, 16.69it/s]
number of examples processed for checking labels:  54%|█████▍    | 54/100 [00:03<00:02, 16.70it/s]
number of examples processed for checking labels:  56%|█████▌    | 56/100 [00:03<00:02, 16.73it/s]
number of examples processed for checking labels:  58%|█████▊    | 58/100 [00:03<00:02, 16.77it/s]
number of examples processed for checking labels:  60%|██████    | 60/100 [00:03<00:02, 16.80it/s]
number of examples processed for checking labels:  62%|██████▏   | 62/100 [00:03<00:02, 16.80it/s]
number of examples processed for checking labels:  64%|██████▍   | 64/100 [00:03<00:02, 16.81it/s]
number of examples processed for checking labels:  66%|██████▌   | 66/100 [00:03<00:02, 16.81it/s]
number of examples processed for checking labels:  68%|██████▊   | 68/100 [00:04<00:01, 16.78it/s]
number of examples processed for checking labels:  70%|███████   | 70/100 [00:04<00:01, 16.71it/s]
number of examples processed for checking labels:  72%|███████▏  | 72/100 [00:04<00:01, 16.75it/s]
number of examples processed for checking labels:  74%|███████▍  | 74/100 [00:04<00:01, 16.69it/s]
number of examples processed for checking labels:  76%|███████▌  | 76/100 [00:04<00:01, 16.68it/s]
number of examples processed for checking labels:  78%|███████▊  | 78/100 [00:04<00:01, 16.70it/s]
number of examples processed for checking labels:  80%|████████  | 80/100 [00:04<00:01, 16.66it/s]
number of examples processed for checking labels:  82%|████████▏ | 82/100 [00:04<00:01, 16.59it/s]
number of examples processed for checking labels:  84%|████████▍ | 84/100 [00:05<00:00, 16.67it/s]
number of examples processed for checking labels:  86%|████████▌ | 86/100 [00:05<00:00, 16.68it/s]
number of examples processed for checking labels:  88%|████████▊ | 88/100 [00:05<00:00, 16.66it/s]
number of examples processed for checking labels:  90%|█████████ | 90/100 [00:05<00:00, 16.67it/s]
number of examples processed for checking labels:  92%|█████████▏| 92/100 [00:05<00:00, 16.70it/s]
number of examples processed for checking labels:  94%|█████████▍| 94/100 [00:05<00:00, 16.67it/s]
number of examples processed for checking labels:  96%|█████████▌| 96/100 [00:05<00:00, 16.73it/s]
number of examples processed for checking labels:  98%|█████████▊| 98/100 [00:05<00:00, 16.73it/s]
number of examples processed for checking labels: 100%|██████████| 100/100 [00:05<00:00, 16.74it/s]
number of examples processed for checking labels: 100%|██████████| 100/100 [00:05<00:00, 16.71it/s]

number of examples processed for estimating thresholds:   0%|          | 0/100 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 100/100 [00:00<00:00, 16573.04it/s]

number of examples processed for checking labels:   0%|          | 0/100 [00:00<?, ?it/s]
number of examples processed for checking labels:   2%|▏         | 2/100 [00:00<00:05, 16.83it/s]
number of examples processed for checking labels:   4%|▍         | 4/100 [00:00<00:05, 16.65it/s]
number of examples processed for checking labels:   6%|▌         | 6/100 [00:00<00:05, 16.71it/s]
number of examples processed for checking labels:   8%|▊         | 8/100 [00:00<00:05, 16.66it/s]
number of examples processed for checking labels:  10%|█         | 10/100 [00:00<00:05, 16.67it/s]
number of examples processed for checking labels:  12%|█▏        | 12/100 [00:00<00:05, 16.70it/s]
number of examples processed for checking labels:  14%|█▍        | 14/100 [00:00<00:05, 16.72it/s]
number of examples processed for checking labels:  16%|█▌        | 16/100 [00:00<00:04, 16.82it/s]
number of examples processed for checking labels:  18%|█▊        | 18/100 [00:01<00:04, 16.68it/s]
number of examples processed for checking labels:  20%|██        | 20/100 [00:01<00:04, 16.71it/s]
number of examples processed for checking labels:  22%|██▏       | 22/100 [00:01<00:04, 16.64it/s]
number of examples processed for checking labels:  24%|██▍       | 24/100 [00:01<00:04, 16.66it/s]
number of examples processed for checking labels:  26%|██▌       | 26/100 [00:01<00:04, 16.68it/s]
number of examples processed for checking labels:  28%|██▊       | 28/100 [00:01<00:04, 16.63it/s]
number of examples processed for checking labels:  30%|███       | 30/100 [00:01<00:04, 16.67it/s]
number of examples processed for checking labels:  32%|███▏      | 32/100 [00:01<00:04, 16.73it/s]
number of examples processed for checking labels:  34%|███▍      | 34/100 [00:02<00:03, 16.79it/s]
number of examples processed for checking labels:  36%|███▌      | 36/100 [00:02<00:03, 16.79it/s]
number of examples processed for checking labels:  38%|███▊      | 38/100 [00:02<00:03, 16.82it/s]
number of examples processed for checking labels:  40%|████      | 40/100 [00:02<00:03, 16.82it/s]
number of examples processed for checking labels:  42%|████▏     | 42/100 [00:02<00:03, 16.66it/s]
number of examples processed for checking labels:  44%|████▍     | 44/100 [00:02<00:03, 16.65it/s]
number of examples processed for checking labels:  46%|████▌     | 46/100 [00:02<00:03, 16.73it/s]
number of examples processed for checking labels:  48%|████▊     | 48/100 [00:02<00:03, 16.78it/s]
number of examples processed for checking labels:  50%|█████     | 50/100 [00:02<00:02, 16.69it/s]
number of examples processed for checking labels:  52%|█████▏    | 52/100 [00:03<00:02, 16.76it/s]
number of examples processed for checking labels:  54%|█████▍    | 54/100 [00:03<00:02, 16.80it/s]
number of examples processed for checking labels:  56%|█████▌    | 56/100 [00:03<00:02, 16.73it/s]
number of examples processed for checking labels:  58%|█████▊    | 58/100 [00:03<00:02, 16.78it/s]
number of examples processed for checking labels:  60%|██████    | 60/100 [00:03<00:02, 16.83it/s]
number of examples processed for checking labels:  62%|██████▏   | 62/100 [00:03<00:02, 16.73it/s]
number of examples processed for checking labels:  64%|██████▍   | 64/100 [00:03<00:02, 16.73it/s]
number of examples processed for checking labels:  66%|██████▌   | 66/100 [00:03<00:02, 16.68it/s]
number of examples processed for checking labels:  68%|██████▊   | 68/100 [00:04<00:01, 16.67it/s]
number of examples processed for checking labels:  70%|███████   | 70/100 [00:04<00:01, 16.73it/s]
number of examples processed for checking labels:  72%|███████▏  | 72/100 [00:04<00:01, 16.68it/s]
number of examples processed for checking labels:  74%|███████▍  | 74/100 [00:04<00:01, 16.73it/s]
number of examples processed for checking labels:  76%|███████▌  | 76/100 [00:04<00:01, 16.70it/s]
number of examples processed for checking labels:  78%|███████▊  | 78/100 [00:04<00:01, 16.72it/s]
number of examples processed for checking labels:  80%|████████  | 80/100 [00:04<00:01, 16.70it/s]
number of examples processed for checking labels:  82%|████████▏ | 82/100 [00:04<00:01, 16.64it/s]
number of examples processed for checking labels:  84%|████████▍ | 84/100 [00:05<00:00, 16.78it/s]
number of examples processed for checking labels:  86%|████████▌ | 86/100 [00:05<00:00, 16.75it/s]
number of examples processed for checking labels:  88%|████████▊ | 88/100 [00:05<00:00, 16.72it/s]
number of examples processed for checking labels:  90%|█████████ | 90/100 [00:05<00:00, 16.75it/s]
number of examples processed for checking labels:  92%|█████████▏| 92/100 [00:05<00:00, 16.81it/s]
number of examples processed for checking labels:  94%|█████████▍| 94/100 [00:05<00:00, 16.72it/s]
number of examples processed for checking labels:  96%|█████████▌| 96/100 [00:05<00:00, 16.74it/s]
number of examples processed for checking labels:  98%|█████████▊| 98/100 [00:05<00:00, 16.79it/s]
number of examples processed for checking labels: 100%|██████████| 100/100 [00:05<00:00, 16.66it/s]
number of examples processed for checking labels: 100%|██████████| 100/100 [00:05<00:00, 16.72it/s]

number of examples processed for estimating thresholds:   0%|          | 0/100 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 100/100 [00:00<00:00, 31161.25it/s]

number of examples processed for checking labels:   0%|          | 0/100 [00:00<?, ?it/s]
number of examples processed for checking labels:   4%|▍         | 4/100 [00:00<00:02, 33.47it/s]
number of examples processed for checking labels:   8%|▊         | 8/100 [00:00<00:02, 33.36it/s]
number of examples processed for checking labels:  12%|█▏        | 12/100 [00:00<00:02, 33.23it/s]
number of examples processed for checking labels:  16%|█▌        | 16/100 [00:00<00:02, 32.82it/s]
number of examples processed for checking labels:  20%|██        | 20/100 [00:00<00:02, 32.91it/s]
number of examples processed for checking labels:  24%|██▍       | 24/100 [00:00<00:02, 32.80it/s]
number of examples processed for checking labels:  28%|██▊       | 28/100 [00:00<00:02, 33.10it/s]
number of examples processed for checking labels:  32%|███▏      | 32/100 [00:00<00:02, 33.16it/s]
number of examples processed for checking labels:  36%|███▌      | 36/100 [00:01<00:01, 33.24it/s]
number of examples processed for checking labels:  40%|████      | 40/100 [00:01<00:01, 33.38it/s]
number of examples processed for checking labels:  44%|████▍     | 44/100 [00:01<00:01, 33.20it/s]
number of examples processed for checking labels:  48%|████▊     | 48/100 [00:01<00:01, 33.28it/s]
number of examples processed for checking labels:  52%|█████▏    | 52/100 [00:01<00:01, 33.12it/s]
number of examples processed for checking labels:  56%|█████▌    | 56/100 [00:01<00:01, 33.40it/s]
number of examples processed for checking labels:  60%|██████    | 60/100 [00:01<00:01, 33.19it/s]
number of examples processed for checking labels:  64%|██████▍   | 64/100 [00:01<00:01, 33.26it/s]
number of examples processed for checking labels:  68%|██████▊   | 68/100 [00:02<00:00, 33.02it/s]
number of examples processed for checking labels:  72%|███████▏  | 72/100 [00:02<00:00, 33.21it/s]
number of examples processed for checking labels:  76%|███████▌  | 76/100 [00:02<00:00, 33.11it/s]
number of examples processed for checking labels:  80%|████████  | 80/100 [00:02<00:00, 32.95it/s]
number of examples processed for checking labels:  84%|████████▍ | 84/100 [00:02<00:00, 33.07it/s]
number of examples processed for checking labels:  88%|████████▊ | 88/100 [00:02<00:00, 33.10it/s]
number of examples processed for checking labels:  92%|█████████▏| 92/100 [00:02<00:00, 33.35it/s]
number of examples processed for checking labels:  96%|█████████▌| 96/100 [00:02<00:00, 33.28it/s]
number of examples processed for checking labels: 100%|██████████| 100/100 [00:03<00:00, 33.15it/s]
number of examples processed for checking labels: 100%|██████████| 100/100 [00:03<00:00, 33.15it/s]

number of examples processed for estimating thresholds:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 2/2 [00:00<00:00, 10070.36it/s]

number of examples processed for checking labels:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00, 32.61it/s]

number of examples processed for estimating thresholds:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 2/2 [00:00<00:00, 6652.35it/s]

number of examples processed for checking labels:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00, 22.45it/s]

number of examples processed for estimating thresholds:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 2/2 [00:00<00:00, 2973.63it/s]

number of examples processed for checking labels:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for checking labels:  50%|█████     | 1/2 [00:00<00:00,  6.95it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00,  6.86it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00,  6.87it/s]

number of examples processed for estimating thresholds:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 2/2 [00:00<00:00, 9675.44it/s]

number of examples processed for checking labels:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00, 34.10it/s]

number of examples processed for estimating thresholds:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 2/2 [00:00<00:00, 1553.45it/s]

number of examples processed for checking labels:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for checking labels:  50%|█████     | 1/2 [00:00<00:00,  3.19it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00,  3.28it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00,  3.27it/s]

number of examples processed for estimating thresholds:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 2/2 [00:00<00:00, 7489.83it/s]

number of examples processed for checking labels:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00, 22.63it/s]

number of examples processed for estimating thresholds:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 2/2 [00:00<00:00, 2216.28it/s]

number of examples processed for checking labels:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for checking labels:  50%|█████     | 1/2 [00:00<00:00,  4.83it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00,  4.79it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00,  4.79it/s]

images processed using softmin:   0%|          | 0/3 [00:00<?, ?it/s]
images processed using softmin: 100%|██████████| 3/3 [00:00<00:00, 4319.57it/s]

number of examples processed for estimating thresholds:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 3/3 [00:00<00:00, 14563.56it/s]

number of examples processed for checking labels:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for checking labels: 100%|██████████| 3/3 [00:00<00:00, 44.87it/s]

images processed using softmin:   0%|          | 0/3 [00:00<?, ?it/s]
images processed using softmin: 100%|██████████| 3/3 [00:00<00:00, 23130.35it/s]

images processed using invalid_method:   0%|          | 0/3 [00:00<?, ?it/s]

images processed using softmin:   0%|          | 0/2 [00:00<?, ?it/s][A
images processed using softmin: 100%|██████████| 2/2 [00:00<00:00, 15947.92it/s]


images processed using softmin:   0%|          | 0/2 [00:00<?, ?it/s][A
images processed using softmin: 100%|██████████| 2/2 [00:00<00:00, 22919.69it/s]


images processed using softmin:   0%|          | 0/2 [00:00<?, ?it/s][A
images processed using softmin: 100%|██████████| 2/2 [00:00<00:00, 23045.63it/s]


images processed using softmin:   0%|          | 0/2 [00:00<?, ?it/s][A
images processed using softmin: 100%|██████████| 2/2 [00:00<00:00, 17050.02it/s]


images processed using softmin:   0%|          | 0/2 [00:00<?, ?it/s][A
images processed using softmin: 100%|██████████| 2/2 [00:00<00:00, 23109.11it/s]


images processed using softmin:   0%|          | 0/2 [00:00<?, ?it/s][A
images processed using softmin: 100%|██████████| 2/2 [00:00<00:00, 21509.25it/s]


images processed using softmin:   0%|          | 0/2 [00:00<?, ?it/s][A
images processed using softmin: 100%|██████████| 2/2 [00:00<00:00, 22075.28it/s]


images processed using softmin:   0%|          | 0/3 [00:00<?, ?it/s][A
images processed using softmin: 100%|██████████| 3/3 [00:00<00:00, 32513.98it/s]


images processed using softmin:   0%|          | 0/3 [00:00<?, ?it/s][A
images processed using softmin: 100%|██████████| 3/3 [00:00<00:00, 34379.54it/s]


images processed using softmin:   0%|          | 0/3 [00:00<?, ?it/s][A
images processed using softmin: 100%|██████████| 3/3 [00:00<00:00, 34952.53it/s]


images processed using softmin:   0%|          | 0/3 [00:00<?, ?it/s][A
images processed using softmin: 100%|██████████| 3/3 [00:00<00:00, 33734.35it/s]

images processed using invalid_method:   0%|          | 0/3 [00:00<?, ?it/s]

number of examples processed for estimating thresholds:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 3/3 [00:00<00:00, 19846.86it/s]

number of examples processed for checking labels:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for checking labels: 100%|██████████| 3/3 [00:00<00:00, 43.34it/s]

images processed using softmin:   0%|          | 0/3 [00:00<?, ?it/s]
images processed using softmin: 100%|██████████| 3/3 [00:00<00:00, 25837.60it/s]

number of examples processed for estimating thresholds:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 3/3 [00:00<00:00, 19298.94it/s]

number of examples processed for checking labels:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for checking labels: 100%|██████████| 3/3 [00:00<00:00, 39.31it/s]

number of examples processed for estimating thresholds:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 3/3 [00:00<00:00, 15160.13it/s]

number of examples processed for checking labels:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for checking labels: 100%|██████████| 3/3 [00:00<00:00, 42.05it/s]

number of examples processed for estimating thresholds:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 3/3 [00:00<00:00, 14154.01it/s]

number of examples processed for checking labels:   0%|          | 0/3 [00:00<?, ?it/s]
number of examples processed for checking labels: 100%|██████████| 3/3 [00:00<00:00, 42.39it/s]

number of examples processed for estimating thresholds:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 2/2 [00:00<00:00, 2413.29it/s]

number of examples processed for checking labels:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for checking labels:  50%|█████     | 1/2 [00:00<00:00,  4.86it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00,  4.85it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00,  4.85it/s]

  0%|          | 0/2741 [00:00<?, ?it/s]
100%|██████████| 2741/2741 [00:00<00:00, 583790.55it/s]

number of examples processed for estimating thresholds:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 2/2 [00:00<00:00, 6492.73it/s]

number of examples processed for checking labels:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00, 12.49it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00, 12.47it/s]

  0%|          | 0/406 [00:00<?, ?it/s]
100%|██████████| 406/406 [00:00<00:00, 567818.41it/s]

number of examples processed for estimating thresholds:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 2/2 [00:00<00:00, 10965.50it/s]

number of examples processed for checking labels:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00, 29.07it/s]

  0%|          | 0/66 [00:00<?, ?it/s]
100%|██████████| 66/66 [00:00<00:00, 457560.44it/s]

number of examples processed for estimating thresholds:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 2/2 [00:00<00:00, 4447.83it/s]

number of examples processed for checking labels:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for checking labels:  50%|█████     | 1/2 [00:00<00:00,  9.22it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00,  9.10it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00,  9.11it/s]

  0%|          | 0/1070 [00:00<?, ?it/s]
100%|██████████| 1070/1070 [00:00<00:00, 586424.31it/s]

number of examples processed for estimating thresholds:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for estimating thresholds: 100%|██████████| 2/2 [00:00<00:00, 3554.49it/s]

number of examples processed for checking labels:   0%|          | 0/2 [00:00<?, ?it/s]
number of examples processed for checking labels:  50%|█████     | 1/2 [00:00<00:00,  6.85it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00,  6.93it/s]
number of examples processed for checking labels: 100%|██████████| 2/2 [00:00<00:00,  6.91it/s]

  0%|          | 0/1638 [00:00<?, ?it/s]
100%|██████████| 1638/1638 [00:00<00:00, 534484.98it/s]

Pass or Failed: 0

Related Failed Test Cases:
{'../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test__get_label_quality_per_image FAILED', 'FAILED ../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test__get_label_quality_per_image', 'FAILED ../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_exceptions[method]', '../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_exceptions[method] FAILED'}

All Test Cases On Generated code:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/cleanlab/cleanlab/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/cleanlab/cleanlab
configfile: pyproject.toml
collecting ... collected 25 items

../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_find_label_issues Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 75
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 12
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_results_are_consistent_with_batch_size Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 2500
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 2500
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 2500
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_find_label_issues_sizes Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 126
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 1222
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 6192
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 24
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 15714
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 1014
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 9512
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test__check_input PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_exceptions[downsample] PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_exceptions[method] FAILED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_exceptions[batch_size_negative] PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_exceptions[batch_size_zero] PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_sizes PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores_no_pixel_scores PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores_various_thresholds PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores_invalid_inputs PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores_different_input_sizes PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores_sorting PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test__get_label_quality_per_image FAILED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_generate_color_map PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_display_issues Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_display_issues_figure Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_display_issues_show Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_common_label_issues PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_filter_by_class Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_summary_sizes Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 8968
Class '0' is potentially mislabeled as class for '1' 1411 pixels in the dataset
Class '1' is potentially mislabeled as class for '0' 1330 pixels in the dataset
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 1326
Class '0' is potentially mislabeled as class for '1' 209 pixels in the dataset
Class '1' is potentially mislabeled as class for '0' 197 pixels in the dataset
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 190
Class '0' is potentially mislabeled as class for '1' 36 pixels in the dataset
Class '1' is potentially mislabeled as class for '0' 30 pixels in the dataset
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 3528
Class '0' is potentially mislabeled as class for '1' 562 pixels in the dataset
Class '1' is potentially mislabeled as class for '0' 508 pixels in the dataset
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 5368
Class '1' is potentially mislabeled as class for '0' 837 pixels in the dataset
Class '0' is potentially mislabeled as class for '1' 801 pixels in the dataset
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_valid_functions PASSED

=================================== FAILURES ===================================
_______________ test_get_label_quality_scores_exceptions[method] _______________

method = 'invalid_method', downsample = None, batch_size = None
expected_exception = <class 'Exception'>
expected_message = "Invalid Method: Specify correct method. Currently only supports 'softmin'"

    @pytest.mark.parametrize(
        "method, downsample, batch_size, expected_exception, expected_message",
        [
            (
                "num_pixel_issues",
                4,
                None,
                Exception,
                "Height 10 and width 10 not divisible by downsample value of 4. Set kwarg downsample to 1 to avoid downsampling.",
            ),
            (
                "invalid_method",
                None,
                None,
                Exception,
                "Invalid Method: Specify correct method. Currently only supports 'softmin'",
            ),
            ("num_pixel_issues", 1, -1, ValueError, "Batch size must be greater than 0, got -1"),
            ("num_pixel_issues", 1, 0, ValueError, "Batch size must be greater than 0, got 0"),
        ],
        ids=["downsample", "method", "batch_size_negative", "batch_size_zero"],
    )
    def test_get_label_quality_scores_exceptions(
        method, downsample, batch_size, expected_exception, expected_message
    ):
        args = {"labels": labels, "pred_probs": pred_probs, "method": method}
        if downsample is not None:
            args["downsample"] = downsample
        if batch_size is not None:
            args["batch_size"] = batch_size
    
        with pytest.raises(expected_exception) as exc_info:
            get_label_quality_scores(**args)
    
>       assert expected_message in str(exc_info.value)
E       assert "Invalid Method: Specify correct method. Currently only supports 'softmin'" in "Unsupported method. Currently, only the 'softmin' method is supported."
E        +  where "Unsupported method. Currently, only the 'softmin' method is supported." = str(Exception("Unsupported method. Currently, only the 'softmin' method is supported."))
E        +    where Exception("Unsupported method. Currently, only the 'softmin' method is supported.") = <ExceptionInfo Exception("Unsupported method. Currently, only the 'softmin' method is supported.") tblen=4>.value

../publishablew/cleanlab/cleanlab/tests/test_segmentation.py:252: AssertionError
______________________ test__get_label_quality_per_image _______________________

    def test__get_label_quality_per_image():
        # Test when pixel_scores is a random list of 100 values, method is "softmin", and temperature is random
        random_score_array = np.random.random((100,))
        temp = random.random()
        score = _get_label_quality_per_image(random_score_array, method="softmin", temperature=temp)
    
        cleanlab_softmin = softmin(
            np.expand_dims(random_score_array, axis=0), axis=1, temperature=temp
        )[0]
>       assert cleanlab_softmin == score, "Expected cleanlab_softmin to be equal to score"
E       AssertionError: Expected cleanlab_softmin to be equal to score
E       assert 0.3407313586788838 == 0.3407313586788837

../publishablew/cleanlab/cleanlab/tests/test_segmentation.py:349: AssertionError
=============================== warnings summary ===============================
tests/test_segmentation.py::test_summary_sizes
  /local/data0/moved_data/publishablew/cleanlab/cleanlab/cleanlab/segmentation/summary.py:140: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
    _, axes = plt.subplots(1, output_plots, figsize=(5 * output_plots, 5))

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED ../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_exceptions[method]
FAILED ../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test__get_label_quality_per_image
=================== 2 failed, 23 passed, 1 warning in 19.87s ===================


Final Test Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/cleanlab/cleanlab/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/cleanlab/cleanlab
configfile: pyproject.toml
collecting ... collected 25 items

../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_find_label_issues Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 75
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 12
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_results_are_consistent_with_batch_size Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 2500
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 2500
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 2500
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_find_label_issues_sizes Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 126
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 1222
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 6192
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 24
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 15714
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 1014
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 9512
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test__check_input PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_exceptions[downsample] PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_exceptions[method] PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_exceptions[batch_size_negative] PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_exceptions[batch_size_zero] PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_sizes PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores_no_pixel_scores PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores_various_thresholds PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores_invalid_inputs PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores_different_input_sizes PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores_sorting PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test__get_label_quality_per_image PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_generate_color_map PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_display_issues Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_display_issues_figure Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_display_issues_show Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_common_label_issues PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_filter_by_class Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_summary_sizes Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 8968
Class '0' is potentially mislabeled as class for '1' 1411 pixels in the dataset
Class '1' is potentially mislabeled as class for '0' 1330 pixels in the dataset
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 1326
Class '0' is potentially mislabeled as class for '1' 209 pixels in the dataset
Class '1' is potentially mislabeled as class for '0' 197 pixels in the dataset
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 190
Class '0' is potentially mislabeled as class for '1' 36 pixels in the dataset
Class '1' is potentially mislabeled as class for '0' 30 pixels in the dataset
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 3528
Class '0' is potentially mislabeled as class for '1' 562 pixels in the dataset
Class '1' is potentially mislabeled as class for '0' 508 pixels in the dataset
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 5368
Class '1' is potentially mislabeled as class for '0' 837 pixels in the dataset
Class '0' is potentially mislabeled as class for '1' 801 pixels in the dataset
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_valid_functions PASSED

=============================== warnings summary ===============================
tests/test_segmentation.py::test_summary_sizes
  /local/data0/moved_data/publishablew/cleanlab/cleanlab/cleanlab/segmentation/summary.py:140: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
    _, axes = plt.subplots(1, output_plots, figsize=(5 * output_plots, 5))

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 25 passed, 1 warning in 19.78s ========================


Initial Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/cleanlab/cleanlab/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/cleanlab/cleanlab
configfile: pyproject.toml
collecting ... collected 25 items

../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_find_label_issues Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 75
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 12
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_results_are_consistent_with_batch_size Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 2500
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 2500
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 2500
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_find_label_issues_sizes Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 126
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 1222
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 6192
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 24
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 15714
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 1014
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 9512
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test__check_input PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_exceptions[downsample] PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_exceptions[method] PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_exceptions[batch_size_negative] PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_exceptions[batch_size_zero] PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_label_quality_scores_sizes PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores_no_pixel_scores PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores_various_thresholds PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores_invalid_inputs PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores_different_input_sizes PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_issues_from_scores_sorting PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test__get_label_quality_per_image PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_generate_color_map PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_display_issues Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_display_issues_figure Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_display_issues_show Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_common_label_issues PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_filter_by_class Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 300
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_summary_sizes Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 8968
Class '0' is potentially mislabeled as class for '1' 1411 pixels in the dataset
Class '1' is potentially mislabeled as class for '0' 1330 pixels in the dataset
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 1326
Class '0' is potentially mislabeled as class for '1' 209 pixels in the dataset
Class '1' is potentially mislabeled as class for '0' 197 pixels in the dataset
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 190
Class '0' is potentially mislabeled as class for '1' 36 pixels in the dataset
Class '1' is potentially mislabeled as class for '0' 30 pixels in the dataset
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 3528
Class '0' is potentially mislabeled as class for '1' 562 pixels in the dataset
Class '1' is potentially mislabeled as class for '0' 508 pixels in the dataset
Multiprocessing will default to using the number of logical cores (16). To default to number of physical cores: pip install psutil
Total number of examples whose labels have been evaluated: 5368
Class '1' is potentially mislabeled as class for '0' 837 pixels in the dataset
Class '0' is potentially mislabeled as class for '1' 801 pixels in the dataset
PASSED
../publishablew/cleanlab/cleanlab/tests/test_segmentation.py::test_get_valid_functions PASSED

=============================== warnings summary ===============================
tests/test_segmentation.py::test_summary_sizes
  /local/data0/moved_data/publishablew/cleanlab/cleanlab/cleanlab/segmentation/summary.py:140: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
    _, axes = plt.subplots(1, output_plots, figsize=(5 * output_plots, 5))

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 25 passed, 1 warning in 21.93s ========================
