output file:
processed_korniaprojection_from_KRt296.json
function:
projection_from_KRt
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-1] FAILED', 'FAILED ../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_smoke[cpu-float32]', '../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_smoke[cpu-float32] FAILED', 'FAILED ../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_simple[cpu-float32]', '../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-4] FAILED', 'FAILED ../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-2]', 'FAILED ../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-1]', '../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-2] FAILED', '../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_simple[cpu-float32] FAILED', 'FAILED ../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-4]'}

All Test Cases On Generated code:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'jit', 'inductor', 'tvm', 'onnxrt', 'cudagraphs', 'openxla', None}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 7 items

../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_smoke[cpu-float32] FAILED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-1] FAILED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-2] FAILED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-4] FAILED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_simple[cpu-float32] FAILED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_krt_from_projection[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_gradcheck[cpu] PASSED

=================================== FAILURES ===================================
________________ TestProjectionFromKRt.test_smoke[cpu-float32] _________________

self = <test_projection.TestProjectionFromKRt object at 0x7378c48fda20>
device = device(type='cpu'), dtype = torch.float32

    def test_smoke(self, device, dtype):
        K = torch.rand(1, 3, 3, device=device, dtype=dtype)
        R = torch.rand(1, 3, 3, device=device, dtype=dtype)
        t = torch.rand(1, 3, 1, device=device, dtype=dtype)
        P = epi.projection_from_KRt(K, R, t)
>       assert P.shape == (1, 3, 4)
E       AssertionError: assert torch.Size([1, 4, 4]) == (1, 3, 4)
E         
E         At index 1 diff: 4 != 3
E         
E         Full diff:
E         + torch.Size([1, 4, 4])
E         - (
E         -     1,...
E         
E         ...Full output truncated (3 lines hidden), use '-vv' to show

../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py:74: AssertionError
_______________ TestProjectionFromKRt.test_shape[cpu-float32-1] ________________

self = <test_projection.TestProjectionFromKRt object at 0x7378c48fded0>
batch_size = 1, device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.parametrize("batch_size", [1, 2, 4])
    def test_shape(self, batch_size, device, dtype):
        B: int = batch_size
        K = torch.rand(B, 3, 3, device=device, dtype=dtype)
        R = torch.rand(B, 3, 3, device=device, dtype=dtype)
        t = torch.rand(B, 3, 1, device=device, dtype=dtype)
        P = epi.projection_from_KRt(K, R, t)
>       assert P.shape == (B, 3, 4)
E       AssertionError: assert torch.Size([1, 4, 4]) == (1, 3, 4)
E         
E         At index 1 diff: 4 != 3
E         
E         Full diff:
E         + torch.Size([1, 4, 4])
E         - (
E         -     1,...
E         
E         ...Full output truncated (3 lines hidden), use '-vv' to show

../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py:83: AssertionError
_______________ TestProjectionFromKRt.test_shape[cpu-float32-2] ________________

self = <test_projection.TestProjectionFromKRt object at 0x7378c48fde10>
batch_size = 2, device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.parametrize("batch_size", [1, 2, 4])
    def test_shape(self, batch_size, device, dtype):
        B: int = batch_size
        K = torch.rand(B, 3, 3, device=device, dtype=dtype)
        R = torch.rand(B, 3, 3, device=device, dtype=dtype)
        t = torch.rand(B, 3, 1, device=device, dtype=dtype)
        P = epi.projection_from_KRt(K, R, t)
>       assert P.shape == (B, 3, 4)
E       AssertionError: assert torch.Size([2, 4, 4]) == (2, 3, 4)
E         
E         At index 1 diff: 4 != 3
E         
E         Full diff:
E         + torch.Size([2, 4, 4])
E         - (
E         -     2,...
E         
E         ...Full output truncated (3 lines hidden), use '-vv' to show

../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py:83: AssertionError
_______________ TestProjectionFromKRt.test_shape[cpu-float32-4] ________________

self = <test_projection.TestProjectionFromKRt object at 0x7378c48fe110>
batch_size = 4, device = device(type='cpu'), dtype = torch.float32

    @pytest.mark.parametrize("batch_size", [1, 2, 4])
    def test_shape(self, batch_size, device, dtype):
        B: int = batch_size
        K = torch.rand(B, 3, 3, device=device, dtype=dtype)
        R = torch.rand(B, 3, 3, device=device, dtype=dtype)
        t = torch.rand(B, 3, 1, device=device, dtype=dtype)
        P = epi.projection_from_KRt(K, R, t)
>       assert P.shape == (B, 3, 4)
E       AssertionError: assert torch.Size([4, 4, 4]) == (4, 3, 4)
E         
E         At index 1 diff: 4 != 3
E         
E         Full diff:
E         + torch.Size([4, 4, 4])
E         - (
E         -     4,...
E         
E         ...Full output truncated (3 lines hidden), use '-vv' to show

../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py:83: AssertionError
________________ TestProjectionFromKRt.test_simple[cpu-float32] ________________

self = <test_projection.TestProjectionFromKRt object at 0x7378c48fdc00>
device = device(type='cpu'), dtype = torch.float32

    def test_simple(self, device, dtype):
        K = torch.tensor([[[10.0, 0.0, 30.0], [0.0, 20.0, 40.0], [0.0, 0.0, 1.0]]], device=device, dtype=dtype)
    
        R = torch.tensor([[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]], device=device, dtype=dtype)
    
        t = torch.tensor([[[1.0], [2.0], [3.0]]], device=device, dtype=dtype)
    
        P_expected = torch.tensor(
            [[[10.0, 0.0, 30.0, 100.0], [0.0, 20.0, 40.0, 160.0], [0.0, 0.0, 1.0, 3.0]]], device=device, dtype=dtype
        )
    
        P_estimated = epi.projection_from_KRt(K, R, t)
>       assert_close(P_estimated, P_expected, atol=1e-4, rtol=1e-4)

../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py:97: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = tensor([[[ 10.,   0.,  30., 100.],
         [  0.,  20.,  40., 160.],
         [  0.,   0.,   1.,   3.],
         [  0.,   0.,   0.,   1.]]])
expected = tensor([[[ 10.,   0.,  30., 100.],
         [  0.,  20.,  40., 160.],
         [  0.,   0.,   1.,   3.]]])
rtol = 0.0001, atol = 0.0001, kwargs = {}

    def assert_close(
        actual: Tensor, expected: Tensor, *, rtol: Optional[float] = None, atol: Optional[float] = None, **kwargs: Any
    ) -> None:
        if rtol is None and atol is None:
            # `torch.testing.assert_close` used different default tolerances than `torch.testing.assert_allclose`.
            # TODO: remove this special handling as soon as https://github.com/kornia/kornia/issues/1134 is resolved
            #  Basically, this whole wrapper function can be removed and `torch.testing.assert_close` can be used
            #  directly.
            rtol, atol = _default_tolerances(actual, expected)
    
>       return _assert_close(
            actual,
            expected,
            rtol=rtol,
            atol=atol,
            # this is the default value for torch>=1.10, but not for torch==1.9
            # TODO: remove this if kornia relies on torch>=1.10
            check_stride=False,
            equal_nan=False,
            **kwargs,
        )
E       AssertionError: The values for attribute 'shape' do not match: torch.Size([1, 4, 4]) != torch.Size([1, 3, 4]).

../publishablew/kornia/kornia/testing/base.py:37: AssertionError
=========================== short test summary info ============================
FAILED ../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_smoke[cpu-float32]
FAILED ../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-1]
FAILED ../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-2]
FAILED ../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-4]
FAILED ../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_simple[cpu-float32]
========================= 5 failed, 2 passed in 0.24s ==========================


Final Test Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'onnxrt', 'inductor', 'jit', 'tvm', 'openxla', 'cudagraphs', None}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 7 items

../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_smoke[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-1] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-2] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-4] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_simple[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_krt_from_projection[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_gradcheck[cpu] PASSED

============================== 7 passed in 0.16s ===============================


Initial Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'inductor', 'tvm', 'openxla', 'onnxrt', 'cudagraphs', 'jit', None}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 7 items

../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_smoke[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-1] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-2] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_shape[cpu-float32-4] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_simple[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_krt_from_projection[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/geometry/epipolar/test_projection.py::TestProjectionFromKRt::test_gradcheck[cpu] PASSED

============================== 7 passed in 0.16s ===============================
