output file:
processed_small-textrandom_initialization_stratified82.json
function:
random_initialization_stratified
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'FAILED ../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified_num_samples_too_large', '../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified_multilabel FAILED', 'FAILED ../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified', '../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified FAILED', 'FAILED ../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified_multilabel', '../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified_num_samples_too_large FAILED'}

All Test Cases On Generated code:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/small-text/small-text/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/small-text/small-text
configfile: pytest.ini
plugins: srcpaths-1.2.1, cov-6.0.0, approvaltests-14.2.0, approvaltests-0.2.4
collecting ... collected 4 items

../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified FAILED
../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified_multilabel FAILED
../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified_multilabel_illegal_strategy PASSED
../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified_num_samples_too_large FAILED

=================================== FAILURES ===================================
___ RandomInitializationStratifiedTest.test_random_initialization_stratified ___

self = <tests.unit.small_text.initialization.test_strategies.RandomInitializationStratifiedTest testMethod=test_random_initialization_stratified>
stratified_sampling_mock = <MagicMock name='stratified_sampling' id='127733437599120'>

    @patch('small_text.initialization.strategies.stratified_sampling',
           wraps=stratified_sampling)
    def test_random_initialization_stratified(self, stratified_sampling_mock):
        n_samples = 10
        y = np.array([0]*10 + [1]*10 + [2]*10 + [3]*70)
        indices = random_initialization_stratified(y, n_samples=n_samples)
        stratified_labels = [y[i] for i in indices]
    
>       stratified_sampling_mock.assert_called_with(y, n_samples=n_samples)

../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <MagicMock name='stratified_sampling' id='127733437599120'>
args = (array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
       2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3...
       3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
       3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]),)
kwargs = {'n_samples': 10}
expected = 'stratified_sampling(array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2,\n       2, 2, 2, 2, 2, 2..., 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n       3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), n_samples=10)'
actual = 'not called.'
error_message = 'expected call not found.\nExpected: stratified_sampling(array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, ...3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n       3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), n_samples=10)\n  Actual: not called.'

    def assert_called_with(self, /, *args, **kwargs):
        """assert that the last call was made with the specified arguments.
    
        Raises an AssertionError if the args and keyword args passed in are
        different to the last call to the mock."""
        if self.call_args is None:
            expected = self._format_mock_call_signature(args, kwargs)
            actual = 'not called.'
            error_message = ('expected call not found.\nExpected: %s\n  Actual: %s'
                    % (expected, actual))
>           raise AssertionError(error_message)
E           AssertionError: expected call not found.
E           Expected: stratified_sampling(array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
E                  2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
E                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
E                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
E                  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), n_samples=10)
E             Actual: not called.

/usr/lib/python3.11/unittest/mock.py:930: AssertionError
_ RandomInitializationStratifiedTest.test_random_initialization_stratified_multilabel _

self = <tests.unit.small_text.initialization.test_strategies.RandomInitializationStratifiedTest testMethod=test_random_initialization_stratified_multilabel>

    def test_random_initialization_stratified_multilabel(self):
        y = np.array([[0, 0, 0, 0]]*10
                     + [[0, 0, 0, 1]]*10
                     + [[0, 0, 1, 0]]*10
                     + [[0, 1, 0, 0]]*10
                     + [[0, 1, 0, 1]]*10
                     + [[1, 0, 0, 0]]*50)
        y = csr_matrix(y)
    
>       indices = random_initialization_stratified(y)

../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/small-text/small-text/small_text/initialization/strategies.py:27: in random_initialization_stratified
    return random_initialization_stratified(y, n_samples, multilabel_strategy)
../publishablew/small-text/small-text/small_text/initialization/temp.py:41: in random_initialization_stratified
    return multilabel_stratified_subsets_sampling(y, n_samples)
../publishablew/small-text/small-text/small_text/initialization/temp.py:34: in multilabel_stratified_subsets_sampling
    selected_indices = np.random.choice(labelset_indices, samples_per_labelset[labelset_index], replace=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   ValueError: 'a' cannot be empty unless no samples are taken

numpy/random/mtrand.pyx:951: ValueError
_ RandomInitializationStratifiedTest.test_random_initialization_stratified_num_samples_too_large _

self = <tests.unit.small_text.initialization.test_strategies.RandomInitializationStratifiedTest testMethod=test_random_initialization_stratified_num_samples_too_large>

    def test_random_initialization_stratified_num_samples_too_large(self):
        y = np.array([0]*25 + [1]*25 + [2]*25 + [3]*25)
    
>       with self.assertRaises(ValueError):
E       AssertionError: ValueError not raised

../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py:50: AssertionError
=========================== short test summary info ============================
FAILED ../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified
FAILED ../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified_multilabel
FAILED ../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified_num_samples_too_large
========================= 3 failed, 1 passed in 1.66s ==========================


Final Test Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/small-text/small-text/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/small-text/small-text
configfile: pytest.ini
plugins: srcpaths-1.2.1, cov-6.0.0, approvaltests-14.2.0, approvaltests-0.2.4
collecting ... collected 4 items

../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified PASSED
../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified_multilabel PASSED
../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified_multilabel_illegal_strategy PASSED
../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified_num_samples_too_large PASSED

============================== 4 passed in 1.57s ===============================


Initial Result:
============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/small-text/small-text/venv/bin/python
cachedir: .pytest_cache
rootdir: /local/data0/moved_data/publishablew/small-text/small-text
configfile: pytest.ini
plugins: srcpaths-1.2.1, cov-6.0.0, approvaltests-14.2.0, approvaltests-0.2.4
collecting ... collected 4 items

../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified PASSED
../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified_multilabel PASSED
../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified_multilabel_illegal_strategy PASSED
../publishablew/small-text/small-text/tests/unit/small_text/initialization/test_strategies.py::RandomInitializationStratifiedTest::test_random_initialization_stratified_num_samples_too_large PASSED

============================== 4 passed in 1.57s ===============================
