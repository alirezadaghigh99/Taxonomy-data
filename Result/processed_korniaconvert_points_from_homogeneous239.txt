output file:
processed_korniaconvert_points_from_homogeneous239.json
function:
convert_points_from_homogeneous
Error Cases:

Pass or Failed: 0

Related Failed Test Cases:
{'FAILED ../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_points_batch[cpu-float32]', '../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_points[cpu-float32] FAILED', '../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_points_batch[cpu-float32] FAILED', 'FAILED ../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_points[cpu-float32]'}

All Test Cases On Generated code:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'cudagraphs', 'jit', 'tvm', 'openxla', 'inductor', 'onnxrt', None}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 9 items

../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_cardinality[cpu-float32-batch_shape0] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_cardinality[cpu-float32-batch_shape1] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_cardinality[cpu-float32-batch_shape2] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_cardinality[cpu-float32-batch_shape3] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_points[cpu-float32] FAILED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_points_batch[cpu-float32] FAILED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_gradcheck[cpu] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_gradcheck_zvec_zeros[cpu] SKIPPED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_dynamo[cpu-float32-inductor] PASSED

=================================== FAILURES ===================================
__________ TestConvertPointsFromHomogeneous.test_points[cpu-float32] ___________

self = <tests.geometry.test_conversions.TestConvertPointsFromHomogeneous object at 0x7a05247448b0>
device = device(type='cpu'), dtype = torch.float32

    def test_points(self, device, dtype):
        # generate input data
        points_h = torch.tensor(
            [[1.0, 2.0, 1.0], [0.0, 1.0, 2.0], [2.0, 1.0, 0.0], [-1.0, -2.0, -1.0], [0.0, 1.0, -2.0]],
            device=device,
            dtype=dtype,
        )
    
        expected = torch.tensor(
            [[1.0, 2.0], [0.0, 0.5], [2.0, 1.0], [1.0, 2.0], [0.0, -0.5]], device=device, dtype=dtype
        )
    
        # to euclidean
        points = kornia.geometry.conversions.convert_points_from_homogeneous(points_h)
>       self.assert_close(points, expected, atol=1e-4, rtol=1e-4)

../publishablew/kornia/kornia/tests/geometry/test_conversions.py:704: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/testing/base.py:106: in assert_close
    return assert_close(actual, expected, rtol=rtol, atol=atol)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = tensor([[ 1.0000e+00,  2.0000e+00],
        [ 0.0000e+00,  5.0000e-01],
        [ 2.0000e+08,  1.0000e+08],
        [ 1.0000e+00,  2.0000e+00],
        [-0.0000e+00, -5.0000e-01]])
expected = tensor([[ 1.0000,  2.0000],
        [ 0.0000,  0.5000],
        [ 2.0000,  1.0000],
        [ 1.0000,  2.0000],
        [ 0.0000, -0.5000]])
rtol = 0.0001, atol = 0.0001, kwargs = {}

    def assert_close(
        actual: Tensor, expected: Tensor, *, rtol: Optional[float] = None, atol: Optional[float] = None, **kwargs: Any
    ) -> None:
        if rtol is None and atol is None:
            # `torch.testing.assert_close` used different default tolerances than `torch.testing.assert_allclose`.
            # TODO: remove this special handling as soon as https://github.com/kornia/kornia/issues/1134 is resolved
            #  Basically, this whole wrapper function can be removed and `torch.testing.assert_close` can be used
            #  directly.
            rtol, atol = _default_tolerances(actual, expected)
    
>       return _assert_close(
            actual,
            expected,
            rtol=rtol,
            atol=atol,
            # this is the default value for torch>=1.10, but not for torch==1.9
            # TODO: remove this if kornia relies on torch>=1.10
            check_stride=False,
            equal_nan=False,
            **kwargs,
        )
E       AssertionError: Tensor-likes are not close!
E       
E       Mismatched elements: 2 / 10 (20.0%)
E       Greatest absolute difference: 200000000.0 at index (2, 0) (up to 0.0001 allowed)
E       Greatest relative difference: 100000000.0 at index (2, 0) (up to 0.0001 allowed)

../publishablew/kornia/kornia/testing/base.py:37: AssertionError
_______ TestConvertPointsFromHomogeneous.test_points_batch[cpu-float32] ________

self = <tests.geometry.test_conversions.TestConvertPointsFromHomogeneous object at 0x7a0524744be0>
device = device(type='cpu'), dtype = torch.float32

    def test_points_batch(self, device, dtype):
        # generate input data
        points_h = torch.tensor([[[2.0, 1.0, 0.0]], [[0.0, 1.0, 2.0]], [[0.0, 1.0, -2.0]]], device=device, dtype=dtype)
    
        expected = torch.tensor([[[2.0, 1.0]], [[0.0, 0.5]], [[0.0, -0.5]]], device=device, dtype=dtype)
    
        # to euclidean
        points = kornia.geometry.conversions.convert_points_from_homogeneous(points_h)
>       self.assert_close(points, expected, atol=1e-4, rtol=1e-4)

../publishablew/kornia/kornia/tests/geometry/test_conversions.py:714: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../publishablew/kornia/kornia/testing/base.py:106: in assert_close
    return assert_close(actual, expected, rtol=rtol, atol=atol)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

actual = tensor([[[ 2.0000e+08,  1.0000e+08]],

        [[ 0.0000e+00,  5.0000e-01]],

        [[-0.0000e+00, -5.0000e-01]]])
expected = tensor([[[ 2.0000,  1.0000]],

        [[ 0.0000,  0.5000]],

        [[ 0.0000, -0.5000]]])
rtol = 0.0001, atol = 0.0001, kwargs = {}

    def assert_close(
        actual: Tensor, expected: Tensor, *, rtol: Optional[float] = None, atol: Optional[float] = None, **kwargs: Any
    ) -> None:
        if rtol is None and atol is None:
            # `torch.testing.assert_close` used different default tolerances than `torch.testing.assert_allclose`.
            # TODO: remove this special handling as soon as https://github.com/kornia/kornia/issues/1134 is resolved
            #  Basically, this whole wrapper function can be removed and `torch.testing.assert_close` can be used
            #  directly.
            rtol, atol = _default_tolerances(actual, expected)
    
>       return _assert_close(
            actual,
            expected,
            rtol=rtol,
            atol=atol,
            # this is the default value for torch>=1.10, but not for torch==1.9
            # TODO: remove this if kornia relies on torch>=1.10
            check_stride=False,
            equal_nan=False,
            **kwargs,
        )
E       AssertionError: Tensor-likes are not close!
E       
E       Mismatched elements: 2 / 6 (33.3%)
E       Greatest absolute difference: 200000000.0 at index (0, 0, 0) (up to 0.0001 allowed)
E       Greatest relative difference: 100000000.0 at index (0, 0, 0) (up to 0.0001 allowed)

../publishablew/kornia/kornia/testing/base.py:37: AssertionError
=========================== short test summary info ============================
FAILED ../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_points[cpu-float32]
FAILED ../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_points_batch[cpu-float32]
==================== 2 failed, 6 passed, 1 skipped in 2.05s ====================


Final Test Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'tvm', 'openxla', 'jit', 'onnxrt', 'inductor', 'cudagraphs', None}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 9 items

../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_cardinality[cpu-float32-batch_shape0] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_cardinality[cpu-float32-batch_shape1] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_cardinality[cpu-float32-batch_shape2] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_cardinality[cpu-float32-batch_shape3] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_points[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_points_batch[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_gradcheck[cpu] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_gradcheck_zvec_zeros[cpu] SKIPPED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_dynamo[cpu-float32-inductor] PASSED

========================= 8 passed, 1 skipped in 2.08s =========================


Initial Result:
Setting up torch compile...
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /local/data0/moved_data/publishablew/kornia/kornia/venv/bin/python
cachedir: .pytest_cache

cpu info:
	- Model name: AMD Ryzen 7 PRO 5845 8-Core Processor
	- Architecture: x86_64
	- CPU(s): 16
	- Thread(s) per core: 2
	- CPU max MHz: 4661.7178
	- CPU min MHz: 2200.0000
gpu info: {'GPU 0': 'NVIDIA GeForce RTX 3060'}
main deps:
    - kornia-0.7.4
    - torch-2.5.1+cu124
        - commit: a8d6afb511a69687bbb2b7e88a3cf67917e1697e
        - cuda: 12.4
        - nvidia-driver: 555.42.02
x deps:
    - accelerate-1.1.1
dev deps:
    - kornia_rs-0.1.7
    - onnx-1.17.0
gcc info: (Ubuntu 10.5.0-1ubuntu1~22.04) 10.5.0
available optimizers: {'', 'onnxrt', 'jit', 'inductor', 'cudagraphs', 'openxla', 'tvm', None}
model weights cached: ['checkpoints']

rootdir: /local/data0/moved_data/publishablew/kornia/kornia
configfile: pyproject.toml
plugins: timeout-2.3.1
collecting ... collected 9 items

../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_cardinality[cpu-float32-batch_shape0] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_cardinality[cpu-float32-batch_shape1] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_cardinality[cpu-float32-batch_shape2] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_cardinality[cpu-float32-batch_shape3] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_points[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_points_batch[cpu-float32] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_gradcheck[cpu] PASSED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_gradcheck_zvec_zeros[cpu] SKIPPED
../publishablew/kornia/kornia/tests/geometry/test_conversions.py::TestConvertPointsFromHomogeneous::test_dynamo[cpu-float32-inductor] PASSED

========================= 8 passed, 1 skipped in 2.03s =========================
